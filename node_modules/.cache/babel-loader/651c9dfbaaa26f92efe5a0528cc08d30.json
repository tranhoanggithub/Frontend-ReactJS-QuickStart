{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\LEARN REACTJS\\\\Frontend-ReactJS-QuickStart\\\\src\\\\containers\\\\System\\\\Admin\\\\UserRedux.js\";\nimport React, { Component } from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { getAllCodeService } from '../../../services/userService';\nimport { LANGUAGES, CRUD_ACTIONS, CommonUtils } from \"../../../utils\";\nimport * as actions from \"../../../store/actions\";\nimport './UserRedux.scss';\nimport Lightbox from 'react-image-lightbox';\nimport 'react-image-lightbox/style.css';\nimport TableManageUser from './TableManageUser';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass UserRedux extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleOnchangeImage = async event => {\n      let data = event.target.files;\n      let file = data[0];\n\n      if (file) {\n        let base64 = await CommonUtils.getBase64(file);\n        console.log('chuoi text base64 Image la ', base64);\n        let objectUrl = URL.createObjectURL(file);\n        this.setState({\n          previewImgURL: objectUrl,\n          avatar: base64\n        });\n      }\n    };\n\n    this.openPreviewImage = () => {\n      if (!this.state.previewImgURL) return;\n      this.setState({\n        isOpen: true\n      });\n    };\n\n    this.handleSaveUser = () => {\n      let isValid = this.checkValidateInput();\n      if (isValid === false) return; // this.setState({\n      //     ...this.state,\n      //     isUserCreated: false\n      // })\n\n      let {\n        action\n      } = this.state;\n\n      if (action === CRUD_ACTIONS.CREATE) {\n        //fire redux action\n        this.props.createNewUser({\n          email: this.state.email,\n          password: this.state.password,\n          firstName: this.state.firstName,\n          lastName: this.state.lastName,\n          address: this.state.address,\n          phonenumber: this.state.phoneNumber,\n          gender: this.state.gender,\n          roleId: this.state.role,\n          positionId: this.state.position,\n          avatar: this.state.avatar // avatar: '',  \n          // action: CRUD_ACTIONS.EDIT,\n\n        });\n      }\n\n      if (action === CRUD_ACTIONS.EDIT) {\n        this.props.editAUserRedux({\n          id: this.state.userEditId,\n          email: this.state.email,\n          password: this.state.password,\n          firstName: this.state.firstName,\n          lastName: this.state.lastName,\n          address: this.state.address,\n          phonenumber: this.state.phoneNumber,\n          gender: this.state.gender,\n          roleId: this.state.role,\n          positionId: this.state.position,\n          avatar: this.state.avatar // action: CRUD_ACTIONS.CREATE,\n          // avatar: this.state.avatar\n          // action: CRUD_ACTIONS.EDIT,\n\n        }); //fire redux edit user\n      } // this.props.fetchUserRedux();\n      // setTimeout(()=>{\n      //     this.props.fetchUserRedux();\n      // },1000)\n      // this.props.fetchUserRedux()\n\n    };\n\n    this.checkValidateInput = () => {\n      let isValid = true;\n      let arrCheck = ['email', 'password', 'firstName', 'lastName', 'phoneNumber', 'address'];\n\n      for (let i = 0; i < arrCheck.length; i++) {\n        if (!this.state[arrCheck[i]]) {\n          isValid = false;\n          break;\n        }\n      }\n\n      return isValid;\n    };\n\n    this.onChangeInput = (event, id) => {\n      let copyState = { ...this.state\n      };\n      copyState[id] = event.target.value;\n      this.setState({ ...copyState\n      });\n    };\n\n    this.handleEditUserFromParent = user => {\n      let imageBase64 = '';\n\n      if (user.image) {\n        imageBase64 = new Buffer(user.image, 'base64').toString('binary');\n      }\n\n      this.setState({\n        email: user.email,\n        password: 'HARDCODE',\n        firstName: user.firstName,\n        lastName: user.lastName,\n        phoneNumber: user.phonenumber,\n        address: user.address,\n        gender: user.gender,\n        role: user.roleId,\n        position: user.positionId,\n        avatar: '',\n        previewImgURL: imageBase64,\n        action: CRUD_ACTIONS.EDIT,\n        userEditId: user.id\n      });\n    };\n\n    this.state = {\n      genderArr: [],\n      positionArr: [],\n      roleArr: [],\n      previewImgURL: '',\n      isOpen: false,\n      isUserCreated: false,\n      email: '',\n      password: '',\n      firstName: '',\n      lastName: '',\n      phoneNumber: '',\n      address: '',\n      gender: '',\n      position: '',\n      role: '',\n      avatar: '',\n      action: '',\n      userEditId: ''\n    };\n  }\n\n  async componentDidMount() {\n    this.props.getGenderStart();\n    this.props.getPositionStart();\n    this.props.getRoleStart();\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    console.log('prevProps UserRedux la', prevProps); //render => didupdate\n    //hiện tại và quá khứ\n\n    if (prevProps.genderRedux !== this.props.genderRedux) {\n      let arrGenders = this.props.genderRedux;\n      this.setState({\n        genderArr: arrGenders,\n        gender: arrGenders && arrGenders.length > 0 ? arrGenders[0].keyMap : ''\n      });\n    }\n\n    if (prevProps.roleRedux !== this.props.roleRedux) {\n      let arrRoles = this.props.roleRedux;\n      this.setState({\n        roleArr: arrRoles,\n        role: arrRoles && arrRoles.length > 0 ? arrRoles[0].keyMap : ''\n      });\n    }\n\n    if (prevProps.positionRedux !== this.props.positionRedux) {\n      let arrPositions = this.props.positionRedux;\n      this.setState({\n        positionArr: arrPositions,\n        position: arrPositions && arrPositions.length > 0 ? arrPositions[0].keyMap : ''\n      });\n    }\n\n    if (prevProps.listUsers !== this.props.listUsers) {\n      let arrGenders = this.props.genderRedux;\n      let arrRoles = this.props.roleRedux;\n      let arrPositions = this.props.positionRedux;\n      this.setState({\n        email: '',\n        password: '',\n        firstName: '',\n        lastName: '',\n        phoneNumber: '',\n        address: '',\n        gender: arrGenders && arrGenders.length > 0 ? arrGenders[0].keyMap : '',\n        role: arrRoles && arrRoles.length > 0 ? arrRoles[0].keyMap : '',\n        position: arrPositions && arrPositions.length > 0 ? arrPositions[0].keyMap : '',\n        avatar: '',\n        action: CRUD_ACTIONS.CREATE,\n        previewImgURL: ''\n      });\n    }\n  }\n\n  render() {\n    let genders = this.state.genderArr;\n    let roles = this.state.roleArr;\n    let position = this.state.positionArr;\n    let language = this.props.language;\n    let isGetGenders = this.props.isLoadingGender;\n    console.log('hoidanit check props from redux ', this.state);\n    let {\n      email,\n      password,\n      firstName,\n      lastName,\n      phoneNumber,\n      address,\n      gender,\n      positioninput,\n      role,\n      avatar\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user-redux-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title\",\n        children: \"User Redux hoi dan it\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: isGetGenders === true ? 'Loading genders' : ''\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-redux-body\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-12 my-3\",\n              children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n                id: \"manage-user.add\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 230,\n                columnNumber: 58\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-12\",\n              children: isGetGenders === true ? 'Loading genders' : ''\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n                  id: \"manage-user.email\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 233,\n                  columnNumber: 40\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 233,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"form-control\",\n                type: \"email\",\n                value: email,\n                onChange: event => {\n                  this.onChangeInput(event, 'email');\n                },\n                disabled: this.state.action === CRUD_ACTIONS.EDIT ? true : false\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 234,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n                  id: \"manage-user.password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 241,\n                  columnNumber: 40\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 241,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"form-control\",\n                type: \"password\",\n                value: password,\n                onChange: event => {\n                  this.onChangeInput(event, 'password');\n                },\n                disabled: this.state.action === CRUD_ACTIONS.EDIT ? true : false\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 242,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n                  id: \"manage-user.first-name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 249,\n                  columnNumber: 40\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 249,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"form-control\",\n                type: \"text\",\n                value: firstName,\n                onChange: event => {\n                  this.onChangeInput(event, 'firstName');\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 250,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n                  id: \"manage-user.last-name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 255,\n                  columnNumber: 40\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 255,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"form-control\",\n                type: \"text\",\n                value: lastName,\n                onChange: event => {\n                  this.onChangeInput(event, 'lastName');\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 256,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n                  id: \"manage-user.phone-number\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 262,\n                  columnNumber: 40\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 262,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"form-control\",\n                type: \"text\",\n                value: phoneNumber,\n                onChange: event => {\n                  this.onChangeInput(event, 'phoneNumber');\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 263,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-9\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n                  id: \"manage-user.address\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 268,\n                  columnNumber: 40\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 268,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"form-control\",\n                type: \"text\",\n                value: address,\n                onChange: event => {\n                  this.onChangeInput(event, 'address');\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 269,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-9\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n                  id: \"manage-user.gender\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 274,\n                  columnNumber: 40\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 274,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                className: \"form-control\",\n                onChange: event => {\n                  this.onChangeInput(event, 'gender');\n                },\n                value: gender,\n                children: genders && genders.length > 0 && genders.map((item, index) => {\n                  return /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: item.keyMap,\n                    children: language === LANGUAGES.VI ? item.valueVi : item.valueEn\n                  }, index, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 282,\n                    columnNumber: 49\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 275,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"form-control\",\n                type: \"text\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 287,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n                  id: \"manage-user.position\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 290,\n                  columnNumber: 40\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 290,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                class: \"form-control\",\n                value: position,\n                onChange: event => {\n                  this.onChangeInput(event, 'position');\n                },\n                children: position && position.length > 0 && position.map((item, index) => {\n                  return /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: item.keyMap,\n                    children: language === LANGUAGES.VI ? item.valueVi : item.valueEn\n                  }, index, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 297,\n                    columnNumber: 49\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 291,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 289,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n                  id: \"manage-user.role\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 303,\n                  columnNumber: 40\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 303,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                class: \"form-control\",\n                onChange: event => {\n                  this.onChangeInput(event, 'role');\n                },\n                value: role,\n                children: roles && roles.length > 0 && roles.map((item, index) => {\n                  return /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: item.keyMap,\n                    children: language === LANGUAGES.VI ? item.valueVi : item.valueEn\n                  }, index, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 311,\n                    columnNumber: 49\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 304,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 302,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n                  id: \"manage-user.image\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 319,\n                  columnNumber: 40\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 319,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"preview-img-container\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  id: \"previewImg\",\n                  type: \"file\",\n                  hidden: true,\n                  onChange: event => this.handleOnchangeImage(event)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 321,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"label-upload\",\n                  htmlFor: \"previewImg\",\n                  children: [\"T\\u1EA3i \\u1EA3nh\", /*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"fas fa-upload\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 324,\n                    columnNumber: 98\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 324,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"preview-image\",\n                  style: {\n                    backgroundImage: `url(${this.state.previewImgURL})`\n                  },\n                  onClick: () => this.openPreviewImage()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 325,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 320,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 318,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-12 my-3\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: this.state.action === CRUD_ACTIONS.EDIT ? \"btn btn-warning\" : \"btn btn-primary\",\n                onClick: () => this.handleSaveUser(),\n                children: this.state.action === CRUD_ACTIONS.EDIT ? /*#__PURE__*/_jsxDEV(FormattedMessage, {\n                  id: \"manage-user.edit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 335,\n                  columnNumber: 41\n                }, this) : /*#__PURE__*/_jsxDEV(FormattedMessage, {\n                  id: \"manage-user.save\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 337,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 331,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 330,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-12 mb-5\",\n              children: /*#__PURE__*/_jsxDEV(TableManageUser, {\n                handleEditUserFromParentKey: this.handleEditUserFromParent,\n                action: this.state.action\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 342,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 341,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 17\n      }, this), this.state.isOpen === true && /*#__PURE__*/_jsxDEV(Lightbox, {\n        mainSrc: this.state.previewImgURL,\n        onCloseRequest: () => this.setState({\n          isOpen: false\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    language: state.app.language,\n    genderRedux: state.admin.genders,\n    roleRedux: state.admin.roles,\n    positionRedux: state.admin.position,\n    isLoadingGender: state.admin.isLoadingGender,\n    listUsers: state.admin.users\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getGenderStart: () => dispatch(actions.fetchGenderStart()),\n    getPositionStart: () => dispatch(actions.fetchPositionStart()),\n    getRoleStart: () => dispatch(actions.fetchRoleStart()),\n    createNewUser: data => dispatch(actions.createNewUser(data)),\n    fetchUserRedux: () => dispatch(actions.fetchAllUsersStart()),\n    editAUserRedux: data => dispatch(actions.editAUser(data)) // fetchUserRedux: (data) => dispatch(actions.fetchAllUsersStart(data))\n    // processLogout: () => dispatch(actions.processLogout()),\n    // changeLanguageAppRedux: (language) => dispatch(actions.changeLanguageApp(language))\n\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserRedux);","map":{"version":3,"sources":["C:/Users/Admin/Desktop/LEARN REACTJS/Frontend-ReactJS-QuickStart/src/containers/System/Admin/UserRedux.js"],"names":["React","Component","FormattedMessage","connect","getAllCodeService","LANGUAGES","CRUD_ACTIONS","CommonUtils","actions","Lightbox","TableManageUser","UserRedux","constructor","props","handleOnchangeImage","event","data","target","files","file","base64","getBase64","console","log","objectUrl","URL","createObjectURL","setState","previewImgURL","avatar","openPreviewImage","state","isOpen","handleSaveUser","isValid","checkValidateInput","action","CREATE","createNewUser","email","password","firstName","lastName","address","phonenumber","phoneNumber","gender","roleId","role","positionId","position","EDIT","editAUserRedux","id","userEditId","arrCheck","i","length","onChangeInput","copyState","value","handleEditUserFromParent","user","imageBase64","image","Buffer","toString","genderArr","positionArr","roleArr","isUserCreated","componentDidMount","getGenderStart","getPositionStart","getRoleStart","componentDidUpdate","prevProps","prevState","snapshot","genderRedux","arrGenders","keyMap","roleRedux","arrRoles","positionRedux","arrPositions","listUsers","render","genders","roles","language","isGetGenders","isLoadingGender","positioninput","map","item","index","VI","valueVi","valueEn","backgroundImage","mapStateToProps","app","admin","users","mapDispatchToProps","dispatch","fetchGenderStart","fetchPositionStart","fetchRoleStart","fetchUserRedux","fetchAllUsersStart","editAUser"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport { connect } from 'react-redux';\r\nimport { getAllCodeService } from '../../../services/userService';\r\nimport { LANGUAGES, CRUD_ACTIONS, CommonUtils } from \"../../../utils\";\r\nimport * as actions from \"../../../store/actions\"\r\nimport './UserRedux.scss'\r\nimport Lightbox from 'react-image-lightbox';\r\nimport 'react-image-lightbox/style.css';\r\nimport TableManageUser from './TableManageUser';\r\nclass UserRedux extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            genderArr: [],\r\n            positionArr: [],\r\n            roleArr: [],\r\n            previewImgURL: '',\r\n            isOpen: false,\r\n\r\n            isUserCreated: false,\r\n\r\n            email: '',\r\n            password: '',\r\n            firstName: '',\r\n            lastName: '',\r\n            phoneNumber: '',\r\n            address: '',\r\n            gender: '',\r\n            position: '',\r\n            role: '',\r\n            avatar: '',\r\n            action: '',\r\n            userEditId: '',\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        this.props.getGenderStart();\r\n        this.props.getPositionStart();\r\n        this.props.getRoleStart();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        console.log('prevProps UserRedux la', prevProps)\r\n        //render => didupdate\r\n        //hiện tại và quá khứ\r\n        if (prevProps.genderRedux !== this.props.genderRedux) {\r\n            let arrGenders = this.props.genderRedux;\r\n            this.setState({\r\n                genderArr: arrGenders,\r\n                gender: arrGenders && arrGenders.length > 0 ? arrGenders[0].keyMap : ''\r\n            })\r\n        }\r\n        if (prevProps.roleRedux !== this.props.roleRedux) {\r\n            let arrRoles = this.props.roleRedux;\r\n\r\n\r\n\r\n            this.setState({\r\n                roleArr: arrRoles,\r\n                role: arrRoles && arrRoles.length > 0 ? arrRoles[0].keyMap : ''\r\n            })\r\n\r\n\r\n\r\n        }\r\n        if (prevProps.positionRedux !== this.props.positionRedux) {\r\n            let arrPositions = this.props.positionRedux;\r\n            this.setState({\r\n                positionArr: arrPositions,\r\n                position: arrPositions && arrPositions.length > 0 ? arrPositions[0].keyMap : ''\r\n            })\r\n        }\r\n        if (prevProps.listUsers !== this.props.listUsers) {\r\n            let arrGenders = this.props.genderRedux;\r\n            let arrRoles = this.props.roleRedux;\r\n            let arrPositions = this.props.positionRedux;\r\n            this.setState({\r\n                email: '',\r\n                password: '',\r\n                firstName: '',\r\n                lastName: '',\r\n                phoneNumber: '',\r\n                address: '',\r\n                gender: arrGenders && arrGenders.length > 0 ? arrGenders[0].keyMap : '',\r\n                role: arrRoles && arrRoles.length > 0 ? arrRoles[0].keyMap : '',\r\n                position: arrPositions && arrPositions.length > 0 ? arrPositions[0].keyMap : '',\r\n                avatar: '',\r\n                action: CRUD_ACTIONS.CREATE,\r\n                previewImgURL :''  \r\n            })\r\n        }\r\n    }\r\n\r\n    handleOnchangeImage = async (event) => {\r\n        let data = event.target.files;\r\n        let file = data[0];\r\n        if (file) {\r\n            let base64 = await CommonUtils.getBase64(file);\r\n            console.log('chuoi text base64 Image la ', base64)\r\n            let objectUrl = URL.createObjectURL(file);\r\n            this.setState({\r\n                previewImgURL: objectUrl,\r\n                avatar: base64\r\n            })\r\n        }\r\n\r\n    }\r\n    openPreviewImage = () => {\r\n        if (!this.state.previewImgURL) return;\r\n        this.setState({\r\n            isOpen: true\r\n        })\r\n    }\r\n    handleSaveUser = () => {\r\n        let isValid = this.checkValidateInput();\r\n        if (isValid === false) return;\r\n\r\n        // this.setState({\r\n        //     ...this.state,\r\n        //     isUserCreated: false\r\n        // })\r\n        let { action } = this.state;\r\n        if (action === CRUD_ACTIONS.CREATE) {\r\n            //fire redux action\r\n            this.props.createNewUser({\r\n                email: this.state.email,\r\n                password: this.state.password,\r\n                firstName: this.state.firstName,\r\n                lastName: this.state.lastName,\r\n                address: this.state.address,\r\n                phonenumber: this.state.phoneNumber,\r\n                gender: this.state.gender,\r\n                roleId: this.state.role,\r\n                positionId: this.state.position,\r\n                avatar: this.state.avatar\r\n                // avatar: '',  \r\n                // action: CRUD_ACTIONS.EDIT,\r\n            })\r\n\r\n        }\r\n        if (action === CRUD_ACTIONS.EDIT) {\r\n            this.props.editAUserRedux({\r\n                id: this.state.userEditId,\r\n                email: this.state.email,\r\n                password: this.state.password,\r\n                firstName: this.state.firstName,\r\n                lastName: this.state.lastName,\r\n                address: this.state.address,\r\n                phonenumber: this.state.phoneNumber,\r\n                gender: this.state.gender,\r\n                roleId: this.state.role,\r\n                positionId: this.state.position,    \r\n                avatar: this.state.avatar\r\n                // action: CRUD_ACTIONS.CREATE,\r\n\r\n                // avatar: this.state.avatar\r\n                // action: CRUD_ACTIONS.EDIT,\r\n            })\r\n            //fire redux edit user\r\n        }\r\n        // this.props.fetchUserRedux();\r\n        // setTimeout(()=>{\r\n        //     this.props.fetchUserRedux();\r\n        // },1000)\r\n        // this.props.fetchUserRedux()\r\n    }\r\n\r\n    checkValidateInput = () => {\r\n        let isValid = true;\r\n        let arrCheck = ['email', 'password', 'firstName', 'lastName', 'phoneNumber', 'address']\r\n        for (let i = 0; i < arrCheck.length; i++) {\r\n            if (!this.state[arrCheck[i]]) {\r\n                isValid = false;\r\n                break;\r\n            }\r\n        }\r\n\r\n        return isValid;\r\n    }\r\n    onChangeInput = (event, id) => {\r\n        let copyState = { ...this.state }\r\n        copyState[id] = event.target.value;\r\n        this.setState({\r\n            ...copyState\r\n        })\r\n    }\r\n\r\n    handleEditUserFromParent = (user) => {\r\n        let imageBase64 = '';\r\n        if (user.image) {\r\n            imageBase64 = new Buffer(user.image, 'base64').toString('binary');\r\n        }\r\n        this.setState({\r\n            email: user.email,\r\n            password: 'HARDCODE',\r\n            firstName: user.firstName,\r\n            lastName: user.lastName,\r\n            phoneNumber: user.phonenumber,\r\n            address: user.address,\r\n            gender: user.gender,\r\n            role: user.roleId,\r\n            position: user.positionId,\r\n            avatar: '',\r\n            previewImgURL: imageBase64,\r\n            action: CRUD_ACTIONS.EDIT,\r\n            userEditId: user.id\r\n        })\r\n    }\r\n    render() {\r\n        let genders = this.state.genderArr;\r\n        let roles = this.state.roleArr;\r\n        let position = this.state.positionArr;\r\n        let language = this.props.language;\r\n        let isGetGenders = this.props.isLoadingGender;\r\n        console.log('hoidanit check props from redux ', this.state)\r\n\r\n        let { email, password, firstName, lastName, phoneNumber, address, gender, positioninput, role, avatar } = this.state\r\n        return (\r\n            <div className=\"user-redux-container\">\r\n                <div className='title'>\r\n                    User Redux hoi dan it\r\n                </div>\r\n                <div>{isGetGenders === true ? 'Loading genders' : ''}</div>\r\n                <div className=\"user-redux-body\" >\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12 my-3\"><FormattedMessage id=\"manage-user.add\" /></div>\r\n                            <div className=\"col-12\">{isGetGenders === true ? 'Loading genders' : ''}</div>\r\n                            <div className=\"col-3\">\r\n                                <label><FormattedMessage id=\"manage-user.email\" /></label>\r\n                                <input className=\"form-control\" type=\"email\"\r\n                                    value={email}\r\n                                    onChange={(event) => { this.onChangeInput(event, 'email') }}\r\n                                    disabled={this.state.action === CRUD_ACTIONS.EDIT ? true : false}\r\n                                />\r\n                            </div>\r\n                            <div className=\"col-3\">\r\n                                <label><FormattedMessage id=\"manage-user.password\" /></label>\r\n                                <input className=\"form-control\" type=\"password\"\r\n                                    value={password}\r\n                                    onChange={(event) => { this.onChangeInput(event, 'password') }}\r\n                                    disabled={this.state.action === CRUD_ACTIONS.EDIT ? true : false}\r\n                                />\r\n                            </div>\r\n                            <div className=\"col-3\">\r\n                                <label><FormattedMessage id=\"manage-user.first-name\" /></label>\r\n                                <input className=\"form-control\" type=\"text\"\r\n                                    value={firstName}\r\n                                    onChange={(event) => { this.onChangeInput(event, 'firstName') }} />\r\n                            </div>\r\n                            <div className=\"col-3\">\r\n                                <label><FormattedMessage id=\"manage-user.last-name\" /></label>\r\n                                <input className=\"form-control\" type=\"text\"\r\n                                    value={lastName}\r\n                                    onChange={(event) => { this.onChangeInput(event, 'lastName') }}\r\n                                />\r\n                            </div>\r\n                            <div className=\"col-3\">\r\n                                <label><FormattedMessage id=\"manage-user.phone-number\" /></label>\r\n                                <input className=\"form-control\" type=\"text\"\r\n                                    value={phoneNumber}\r\n                                    onChange={(event) => { this.onChangeInput(event, 'phoneNumber') }} />\r\n                            </div>\r\n                            <div className=\"col-9\">\r\n                                <label><FormattedMessage id=\"manage-user.address\" /></label>\r\n                                <input className=\"form-control\" type=\"text\"\r\n                                    value={address}\r\n                                    onChange={(event) => { this.onChangeInput(event, 'address') }} />\r\n                            </div>\r\n                            <div className=\"col-9\">\r\n                                <label><FormattedMessage id=\"manage-user.gender\" /></label>\r\n                                <select className=\"form-control\"\r\n                                    onChange={(event) => { this.onChangeInput(event, 'gender') }}\r\n                                    value={gender}\r\n                                >\r\n                                    {genders && genders.length > 0 &&\r\n                                        genders.map((item, index) => {\r\n                                            return (\r\n                                                <option key={index} value={item.keyMap}>{language === LANGUAGES.VI ? item.valueVi : item.valueEn}</option>\r\n                                            )\r\n                                        })\r\n                                    }\r\n                                </select>\r\n                                <input className=\"form-control\" type=\"text\" />\r\n                            </div>\r\n                            <div className=\"col-3\">\r\n                                <label><FormattedMessage id=\"manage-user.position\" /></label>\r\n                                <select class=\"form-control\"\r\n                                    value={position}\r\n                                    onChange={(event) => { this.onChangeInput(event, 'position') }}>\r\n                                    {position && position.length > 0\r\n                                        && position.map((item, index) => {\r\n                                            return (\r\n                                                <option key={index} value={item.keyMap}>{language === LANGUAGES.VI ? item.valueVi : item.valueEn}</option>\r\n                                            )\r\n                                        })}\r\n                                </select>\r\n                            </div>\r\n                            <div className=\"col-3\">\r\n                                <label><FormattedMessage id=\"manage-user.role\" /></label>\r\n                                <select class=\"form-control\"\r\n                                    onChange={(event) => { this.onChangeInput(event, 'role') }}\r\n                                    value={role}\r\n                                >\r\n                                    {roles && roles.length > 0\r\n                                        && roles.map((item, index) => {\r\n                                            return (\r\n                                                <option key={index} value={item.keyMap}>{language === LANGUAGES.VI ? item.valueVi : item.valueEn}</option>\r\n                                            )\r\n                                        })}\r\n\r\n                                </select>\r\n                            </div>\r\n\r\n                            <div className=\"col-3\">\r\n                                <label><FormattedMessage id=\"manage-user.image\" /></label>\r\n                                <div className=\"preview-img-container\">\r\n                                    <input id=\"previewImg\" type=\"file\" hidden\r\n                                        onChange={(event) => this.handleOnchangeImage(event)}\r\n                                    />\r\n                                    <label className=\"label-upload\" htmlFor=\"previewImg\" >Tải ảnh<i className=\"fas fa-upload\"  ></i></label>\r\n                                    <div className=\"preview-image\" style={{ backgroundImage: `url(${this.state.previewImgURL})` }} onClick={() => this.openPreviewImage()}>\r\n\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-12 my-3\">\r\n                                <button\r\n                                    className={this.state.action === CRUD_ACTIONS.EDIT ? \"btn btn-warning\" : \"btn btn-primary\"}\r\n                                    onClick={() => this.handleSaveUser()}>\r\n                                    {this.state.action === CRUD_ACTIONS.EDIT ?\r\n                                        <FormattedMessage id=\"manage-user.edit\" />\r\n                                        :\r\n                                        <FormattedMessage id=\"manage-user.save\" />\r\n                                    }\r\n                                </button>\r\n                            </div>\r\n                            <div className=\"col-12 mb-5\">\r\n                                <TableManageUser\r\n                                    handleEditUserFromParentKey={this.handleEditUserFromParent}\r\n                                    action={this.state.action}\r\n                                />\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {this.state.isOpen === true &&\r\n                    <Lightbox\r\n                        mainSrc={this.state.previewImgURL}\r\n                        onCloseRequest={() => this.setState({ isOpen: false })}\r\n                    />\r\n                }\r\n            </div>\r\n\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        language: state.app.language,\r\n        genderRedux: state.admin.genders,\r\n        roleRedux: state.admin.roles,\r\n        positionRedux: state.admin.position,\r\n        isLoadingGender: state.admin.isLoadingGender,\r\n        listUsers: state.admin.users\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        getGenderStart: () => dispatch(actions.fetchGenderStart()),\r\n        getPositionStart: () => dispatch(actions.fetchPositionStart()),\r\n        getRoleStart: () => dispatch(actions.fetchRoleStart()),\r\n        createNewUser: (data) => dispatch(actions.createNewUser(data)),\r\n        fetchUserRedux: () => dispatch(actions.fetchAllUsersStart()),\r\n        editAUserRedux: (data) => dispatch(actions.editAUser(data)),\r\n\r\n        // fetchUserRedux: (data) => dispatch(actions.fetchAllUsersStart(data))\r\n        // processLogout: () => dispatch(actions.processLogout()),\r\n        // changeLanguageAppRedux: (language) => dispatch(actions.changeLanguageApp(language))\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserRedux);\r\n"]},"metadata":{},"sourceType":"module"}