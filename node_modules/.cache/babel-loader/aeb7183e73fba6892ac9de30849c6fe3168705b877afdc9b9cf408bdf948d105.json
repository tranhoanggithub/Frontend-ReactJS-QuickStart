{"ast":null,"code":"import { SameValue } from '../262';\nimport { ToRawPrecision } from './ToRawPrecision';\nimport { repeat } from '../utils';\nimport { ToRawFixed } from './ToRawFixed';\n/**\r\n * https://tc39.es/ecma402/#sec-formatnumberstring\r\n */\nexport function FormatNumericToString(intlObject, x) {\n  var isNegative = x < 0 || SameValue(x, -0);\n  if (isNegative) {\n    x = -x;\n  }\n  var result;\n  var rourndingType = intlObject.roundingType;\n  switch (rourndingType) {\n    case 'significantDigits':\n      result = ToRawPrecision(x, intlObject.minimumSignificantDigits, intlObject.maximumSignificantDigits);\n      break;\n    case 'fractionDigits':\n      result = ToRawFixed(x, intlObject.minimumFractionDigits, intlObject.maximumFractionDigits);\n      break;\n    default:\n      result = ToRawPrecision(x, 1, 2);\n      if (result.integerDigitsCount > 1) {\n        result = ToRawFixed(x, 0, 0);\n      }\n      break;\n  }\n  x = result.roundedNumber;\n  var string = result.formattedString;\n  var int = result.integerDigitsCount;\n  var minInteger = intlObject.minimumIntegerDigits;\n  if (int < minInteger) {\n    var forwardZeros = repeat('0', minInteger - int);\n    string = forwardZeros + string;\n  }\n  if (isNegative) {\n    x = -x;\n  }\n  return {\n    roundedNumber: x,\n    formattedString: string\n  };\n}","map":{"version":3,"names":["SameValue","ToRawPrecision","repeat","ToRawFixed","FormatNumericToString","intlObject","x","isNegative","result","rourndingType","roundingType","minimumSignificantDigits","maximumSignificantDigits","minimumFractionDigits","maximumFractionDigits","integerDigitsCount","roundedNumber","string","formattedString","int","minInteger","minimumIntegerDigits","forwardZeros"],"sources":["C:/Users/Admin/Desktop/LEARN REACTJS/Frontend-ReactJS-QuickStart/node_modules/@formatjs/ecma402-abstract/lib/NumberFormat/FormatNumericToString.js"],"sourcesContent":["import { SameValue } from '../262';\r\nimport { ToRawPrecision } from './ToRawPrecision';\r\nimport { repeat } from '../utils';\r\nimport { ToRawFixed } from './ToRawFixed';\r\n/**\r\n * https://tc39.es/ecma402/#sec-formatnumberstring\r\n */\r\nexport function FormatNumericToString(intlObject, x) {\r\n    var isNegative = x < 0 || SameValue(x, -0);\r\n    if (isNegative) {\r\n        x = -x;\r\n    }\r\n    var result;\r\n    var rourndingType = intlObject.roundingType;\r\n    switch (rourndingType) {\r\n        case 'significantDigits':\r\n            result = ToRawPrecision(x, intlObject.minimumSignificantDigits, intlObject.maximumSignificantDigits);\r\n            break;\r\n        case 'fractionDigits':\r\n            result = ToRawFixed(x, intlObject.minimumFractionDigits, intlObject.maximumFractionDigits);\r\n            break;\r\n        default:\r\n            result = ToRawPrecision(x, 1, 2);\r\n            if (result.integerDigitsCount > 1) {\r\n                result = ToRawFixed(x, 0, 0);\r\n            }\r\n            break;\r\n    }\r\n    x = result.roundedNumber;\r\n    var string = result.formattedString;\r\n    var int = result.integerDigitsCount;\r\n    var minInteger = intlObject.minimumIntegerDigits;\r\n    if (int < minInteger) {\r\n        var forwardZeros = repeat('0', minInteger - int);\r\n        string = forwardZeros + string;\r\n    }\r\n    if (isNegative) {\r\n        x = -x;\r\n    }\r\n    return { roundedNumber: x, formattedString: string };\r\n}\r\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,QAAQ;AAClC,SAASC,cAAc,QAAQ,kBAAkB;AACjD,SAASC,MAAM,QAAQ,UAAU;AACjC,SAASC,UAAU,QAAQ,cAAc;AACzC;AACA;AACA;AACA,OAAO,SAASC,qBAAqBA,CAACC,UAAU,EAAEC,CAAC,EAAE;EACjD,IAAIC,UAAU,GAAGD,CAAC,GAAG,CAAC,IAAIN,SAAS,CAACM,CAAC,EAAE,CAAC,CAAC,CAAC;EAC1C,IAAIC,UAAU,EAAE;IACZD,CAAC,GAAG,CAACA,CAAC;EACV;EACA,IAAIE,MAAM;EACV,IAAIC,aAAa,GAAGJ,UAAU,CAACK,YAAY;EAC3C,QAAQD,aAAa;IACjB,KAAK,mBAAmB;MACpBD,MAAM,GAAGP,cAAc,CAACK,CAAC,EAAED,UAAU,CAACM,wBAAwB,EAAEN,UAAU,CAACO,wBAAwB,CAAC;MACpG;IACJ,KAAK,gBAAgB;MACjBJ,MAAM,GAAGL,UAAU,CAACG,CAAC,EAAED,UAAU,CAACQ,qBAAqB,EAAER,UAAU,CAACS,qBAAqB,CAAC;MAC1F;IACJ;MACIN,MAAM,GAAGP,cAAc,CAACK,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;MAChC,IAAIE,MAAM,CAACO,kBAAkB,GAAG,CAAC,EAAE;QAC/BP,MAAM,GAAGL,UAAU,CAACG,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;MAChC;MACA;EACR;EACAA,CAAC,GAAGE,MAAM,CAACQ,aAAa;EACxB,IAAIC,MAAM,GAAGT,MAAM,CAACU,eAAe;EACnC,IAAIC,GAAG,GAAGX,MAAM,CAACO,kBAAkB;EACnC,IAAIK,UAAU,GAAGf,UAAU,CAACgB,oBAAoB;EAChD,IAAIF,GAAG,GAAGC,UAAU,EAAE;IAClB,IAAIE,YAAY,GAAGpB,MAAM,CAAC,GAAG,EAAEkB,UAAU,GAAGD,GAAG,CAAC;IAChDF,MAAM,GAAGK,YAAY,GAAGL,MAAM;EAClC;EACA,IAAIV,UAAU,EAAE;IACZD,CAAC,GAAG,CAACA,CAAC;EACV;EACA,OAAO;IAAEU,aAAa,EAAEV,CAAC;IAAEY,eAAe,EAAED;EAAO,CAAC;AACxD"},"metadata":{},"sourceType":"module","externalDependencies":[]}