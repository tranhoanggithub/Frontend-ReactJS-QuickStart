{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\LEARN REACTJS\\\\Frontend-ReactJS-QuickStart\\\\src\\\\containers\\\\System\\\\Admin\\\\ManageDoctor.js\";\nimport React, { Component } from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { connect } from 'react-redux';\nimport './TableManageUser.scss';\nimport * as actions from \"../../../store/actions\";\nimport MarkdownIt from 'markdown-it';\nimport MdEditor from 'react-markdown-editor-lite'; // import style manually\n\nimport 'react-markdown-editor-lite/lib/index.css';\nimport './ManageDoctor.scss';\nimport Select from 'react-select';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst options = [{\n  value: 'chocolate',\n  label: 'Chocolate'\n}, {\n  value: 'strawberry',\n  label: 'Strawberry'\n}, {\n  value: 'vanilla',\n  label: 'Vanilla'\n}];\nconst mdParser = new MarkdownIt();\n\nclass ManageDoctor extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleEditorChange = ({\n      html,\n      text\n    }) => {\n      this.setState({\n        contentMarkdown: text,\n        contentHTML: html\n      });\n      console.log('handleEditorChange', html, text);\n    };\n\n    this.handleSaveContentMarkdown = () => {\n      console.log(\">>>>>>>>>>>\", this.state);\n    };\n\n    this.handleChange = selectedOption => {\n      this.setState({\n        selectedOption\n      });\n    };\n\n    this.handleOnChangeDesc = event => {\n      this.setState({\n        description: event.target.value\n      });\n    };\n\n    this.state = {\n      contentMarkdown: '',\n      contentHTML: '',\n      selectedDoctor: '',\n      description: ''\n    };\n  }\n\n  componentDidMount() {}\n\n  componentDidUpdate(prevProps, prevState, snapshot) {}\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"manage-doctor-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"manage-doctor-title\",\n        children: \"T\\u1EA1o th\\xEAm th\\xF4ng tin doctors\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"more-infor\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"content-left form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Ch\\u1ECDn b\\xE1c s\\u0129\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            value: this.state.selectedOption,\n            onChange: this.handleChange,\n            options: options\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"content-right\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Th\\xF4ng tin gi\\u1EDBi thi\\u1EC7u\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            className: \"form-control\",\n            rows: \"4\",\n            onChange: event => this.handleOnChangeDesc(event),\n            value: this.state.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"manage-doctor-editor\",\n        children: /*#__PURE__*/_jsxDEV(MdEditor, {\n          style: {\n            height: '500px'\n          },\n          renderHTML: text => mdParser.render(text),\n          onChange: this.handleEditorChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 55\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => this.handleSaveContentMarkdown(),\n        className: \"save-content-doctor\",\n        children: \"L\\u01B0u th\\xF4ng tin\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    listUsers: state.admin.users\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchUserRedux: () => dispatch(actions.fetchAllUsersStart()),\n    deleteAUserRedux: id => dispatch(actions.deleteAUser(id))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ManageDoctor);","map":{"version":3,"sources":["C:/Users/Admin/Desktop/LEARN REACTJS/Frontend-ReactJS-QuickStart/src/containers/System/Admin/ManageDoctor.js"],"names":["React","Component","FormattedMessage","connect","actions","MarkdownIt","MdEditor","Select","options","value","label","mdParser","ManageDoctor","constructor","props","handleEditorChange","html","text","setState","contentMarkdown","contentHTML","console","log","handleSaveContentMarkdown","state","handleChange","selectedOption","handleOnChangeDesc","event","description","target","selectedDoctor","componentDidMount","componentDidUpdate","prevProps","prevState","snapshot","render","height","mapStateToProps","listUsers","admin","users","mapDispatchToProps","dispatch","fetchUserRedux","fetchAllUsersStart","deleteAUserRedux","id","deleteAUser"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport { connect } from 'react-redux';\r\nimport './TableManageUser.scss'\r\nimport * as actions from \"../../../store/actions\"\r\nimport MarkdownIt from 'markdown-it';\r\nimport MdEditor from 'react-markdown-editor-lite';\r\n// import style manually\r\nimport 'react-markdown-editor-lite/lib/index.css';\r\nimport './ManageDoctor.scss'\r\nimport Select from 'react-select';\r\n\r\nconst options = [\r\n    { value: 'chocolate', label: 'Chocolate' },\r\n    { value: 'strawberry', label: 'Strawberry' },\r\n    { value: 'vanilla', label: 'Vanilla' },\r\n];\r\n\r\nconst mdParser = new MarkdownIt(/* Markdown-it options */);\r\n\r\nclass ManageDoctor extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            contentMarkdown: '',\r\n            contentHTML: '',\r\n            selectedDoctor: '',\r\n            description:'',\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n\r\n    }\r\n    handleEditorChange = ({ html, text }) => {\r\n        this.setState({\r\n            contentMarkdown: text,\r\n            contentHTML: html\r\n        })\r\n        console.log('handleEditorChange', html, text);\r\n    }\r\n    handleSaveContentMarkdown = () => {\r\n        console.log(\">>>>>>>>>>>\", this.state)\r\n    }\r\n    handleChange = selectedOption => {\r\n        this.setState({selectedOption});\r\n    };\r\n    handleOnChangeDesc = (event) => {\r\n        this.setState({\r\n            description: event.target.value\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"manage-doctor-container\">\r\n                <div className=\"manage-doctor-title\">Tạo thêm thông tin doctors</div>\r\n                <div className=\"more-infor\">\r\n                    <div className=\"content-left form-group\">\r\n\r\n                        <label>Chọn bác sĩ</label>\r\n                        <Select\r\n                            value={this.state.selectedOption}\r\n                            onChange={this.handleChange}\r\n                            options={options}\r\n                        />\r\n                    </div>\r\n                    <div className=\"content-right\">\r\n                        <label>Thông tin giới thiệu</label>\r\n                        <textarea className=\"form-control\" rows=\"4\"\r\n                            onChange={(event) => this.handleOnChangeDesc(event)}\r\n                            value={this.state.description}>\r\n                      \r\n                        </textarea>\r\n                    </div>\r\n                </div>\r\n                <div className=\"manage-doctor-editor\"><MdEditor style={{ height: '500px' }} renderHTML={text => mdParser.render(text)} onChange={this.handleEditorChange} /></div>\r\n                <button onClick={() => this.handleSaveContentMarkdown()} className=\"save-content-doctor\">Lưu thông tin</button>\r\n            </div >\r\n\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        listUsers: state.admin.users\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        fetchUserRedux: () => dispatch(actions.fetchAllUsersStart()),\r\n        deleteAUserRedux: (id) => dispatch(actions.deleteAUser(id))\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ManageDoctor);\r\n"]},"metadata":{},"sourceType":"module"}