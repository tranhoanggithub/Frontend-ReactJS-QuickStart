{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\LEARN REACTJS\\\\Frontend-ReactJS-QuickStart\\\\src\\\\containers\\\\System\\\\Admin\\\\ManageDoctor.js\";\nimport React, { Component } from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { connect } from 'react-redux';\nimport './TableManageUser.scss';\nimport * as actions from \"../../../store/actions\";\nimport MarkdownIt from 'markdown-it';\nimport MdEditor from 'react-markdown-editor-lite'; // import style manually\n\nimport 'react-markdown-editor-lite/lib/index.css';\nimport './ManageDoctor.scss';\nimport Select from 'react-select';\nimport { CRUD_ACTIONS, LANGUAGES } from '../../../utils';\nimport { getDetailInforDoctor } from '../../../services/userService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst mdParser = new MarkdownIt();\n\nclass ManageDoctor extends Component {\n  constructor(props) {\n    super(props);\n\n    this.buildDataInputSelect = (inputData, type) => {\n      let result = [];\n      let {\n        language\n      } = this.props;\n\n      if (inputData && inputData.length > 0) {\n        if (type === 'USERS') {\n          inputData.map((item, index) => {\n            let object = {};\n            let labelVi = `${item.lastName} ${item.firstName}`;\n            let labelEn = `${item.firstName} ${item.lastName}`;\n            object.label = language === LANGUAGES.VI ? labelVi : labelEn;\n            object.value = item.id;\n            result.push(object);\n          });\n        }\n\n        if (type === 'PRICE') {\n          inputData.map((item, index) => {\n            let object = {};\n            let labelVi = `${item.valueVi}`;\n            let labelEn = `${item.valueEn} USD`;\n            object.label = language === LANGUAGES.VI ? labelVi : labelEn;\n            object.value = item.keyMap;\n            result.push(object);\n          });\n        }\n\n        if (type === 'PAYMENT' || type === 'PROVINCE') {\n          inputData.map((item, index) => {\n            let object = {};\n            let labelVi = `${item.valueVi}`;\n            let labelEn = `${item.valueEn}`;\n            object.label = language === LANGUAGES.VI ? labelVi : labelEn;\n            object.value = item.keyMap;\n            result.push(object);\n          });\n        }\n      }\n\n      return result;\n    };\n\n    this.handleEditorChange = ({\n      html,\n      text\n    }) => {\n      this.setState({\n        contentMarkdown: text,\n        contentHTML: html\n      });\n      console.log('handleEditorChange', html, text);\n    };\n\n    this.handleSaveContentMarkdown = () => {\n      let {\n        hasOldData\n      } = this.state;\n      this.props.saveDetailDoctor({\n        contentHTML: this.state.contentHTML,\n        contentMarkdown: this.state.contentMarkdown,\n        description: this.state.description,\n        doctorId: this.state.selectedOption.value,\n        action: hasOldData === true ? CRUD_ACTIONS.EDIT : CRUD_ACTIONS.CREATE,\n        selectedPrice: this.state.selectedPrice.value,\n        selectedPayment: this.state.selectedPayment.value,\n        selectProvince: this.state.selectProvince.value,\n        nameClinic: this.state.nameClinic,\n        addressClinic: this.state.addressClinic,\n        note: this.state.note\n      });\n    };\n\n    this.handleChangeSelect = async selectedOption => {\n      this.setState({\n        selectedOption\n      });\n      let {\n        listPayment,\n        listPrice,\n        listProvince\n      } = this.state;\n      let res = await getDetailInforDoctor(selectedOption.value);\n      let selectedPayment = '',\n          selectedPrice = '',\n          selectProvince = ''; // Khai báo các biến ở đây\n\n      if (res && res.errCode === 0 && res.data && res.data.Markdown) {\n        let markdown = res.data.Markdown;\n        let addressClinic = '',\n            nameClinic = '',\n            note = '',\n            paymentId = '',\n            priceId = '',\n            provinceId = ''; // Bỏ đi phần khai báo biến ở đây\n\n        if (res.data.Doctor_Infor) {\n          addressClinic = res.data.Doctor_Infor.addressClinic;\n          nameClinic = res.data.Doctor_Infor.nameClinic;\n          note = res.data.Doctor_Infor.note;\n          paymentId = res.data.Doctor_Infor.paymentId;\n          priceId = res.data.Doctor_Infor.priceId;\n          provinceId = res.data.Doctor_Infor.provinceId;\n          selectedPayment = listPayment.find(item => {\n            return item && item.value === paymentId;\n          });\n          selectedPrice = listPrice.find(item => {\n            return item && item.value === priceId;\n          });\n          selectProvince = listProvince.find(item => {\n            return item && item.value === provinceId;\n          });\n        }\n\n        this.setState({\n          contentHTML: markdown.contentHTML,\n          contentMarkdown: markdown.contentMarkdown,\n          description: markdown.description,\n          hasOldData: true,\n          addressClinic: addressClinic,\n          nameClinic: nameClinic,\n          note: note,\n          selectedPayment: selectedPayment,\n          selectedPrice: selectedPrice,\n          selectProvince: selectProvince\n        });\n      } else {\n        this.setState({\n          contentHTML: '',\n          contentMarkdown: '',\n          description: '',\n          hasOldData: false,\n          addressClinic: '',\n          nameClinic: '',\n          note: '',\n          selectedPayment: selectedPayment,\n          selectedPrice: selectedPrice,\n          selectProvince: selectProvince\n        });\n      }\n    };\n\n    this.handleChangeSelectDoctorInfor = async (selectedOption, name) => {\n      let stateName = name.name;\n      let stateCopy = { ...this.state\n      };\n      stateCopy[stateName] = selectedOption;\n      this.setState({ ...stateCopy\n      });\n    };\n\n    this.handleOnChangeText = (event, id) => {\n      let stateCopy = { ...this.state\n      };\n      stateCopy[id] = event.target.value;\n      this.setState({ ...stateCopy\n      });\n    };\n\n    this.state = {\n      //save to Markdown  table\n      contentMarkdown: '',\n      contentHTML: '',\n      selectedOption: '',\n      description: '',\n      listDoctors: [],\n      hasOldData: false,\n      //save to doctor_infor table\n      listPrice: [],\n      listPayment: [],\n      listProvince: [],\n      selectedPrice: '',\n      selectedPayment: '',\n      selectProvince: {},\n      nameClinic: '',\n      addressClinic: '',\n      note: ''\n    };\n  }\n\n  componentDidMount() {\n    this.props.fetchAllDoctors();\n    this.props.getAllRequiredDoctorInfor();\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if (prevProps.allDoctors !== this.props.allDoctors) {\n      let dataSelect = this.buildDataInputSelect(this.props.allDoctors, 'USERS');\n      this.setState({\n        listDoctors: dataSelect\n      });\n    }\n\n    if (prevProps.language !== this.props.language) {\n      let {\n        resPayment,\n        resPrice,\n        resProvince\n      } = this.props.allRequiredDoctorInfor;\n      let dataSelectPrice = this.buildDataInputSelect(resPrice, 'PRICE');\n      let dataSelectPayment = this.buildDataInputSelect(resPayment, 'PAYMENT');\n      let dataSelectProvince = this.buildDataInputSelect(resProvince, 'PROVINCE');\n      this.setState({\n        listPrice: dataSelectPrice,\n        listPayment: dataSelectPayment,\n        listProvince: dataSelectProvince\n      });\n    }\n\n    if (prevProps.language !== this.props.language) {\n      let dataSelect = this.buildDataInputSelect(this.props.allDoctors, 'USERS');\n      let {\n        resPayment,\n        resPrice,\n        resProvince\n      } = this.props.allRequiredDoctorInfor;\n      let dataSelectPrice = this.buildDataInputSelect(resPrice, 'PRICE');\n      let dataSelectPayment = this.buildDataInputSelect(resPayment, 'PAYMENT');\n      let dataSelectProvince = this.buildDataInputSelect(resProvince, 'PROVINCE');\n      this.setState({\n        listDoctors: dataSelect,\n        listPrice: dataSelectPrice,\n        listPayment: dataSelectPayment,\n        listProvince: dataSelectProvince\n      });\n    }\n\n    if (prevProps.allRequiredDoctorInfor !== this.props.allRequiredDoctorInfor) {\n      let {\n        resPayment,\n        resPrice,\n        resProvince\n      } = this.props.allRequiredDoctorInfor;\n      let dataSelectPrice = this.buildDataInputSelect(resPrice, 'PRICE');\n      let dataSelectPayment = this.buildDataInputSelect(resPayment, 'PAYMENT');\n      let dataSelectProvince = this.buildDataInputSelect(resProvince, 'PROVINCE');\n      this.setState({\n        listPrice: dataSelectPrice,\n        listPayment: dataSelectPayment,\n        listProvince: dataSelectProvince\n      });\n    }\n  }\n\n  render() {\n    let {\n      hasOldData\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"manage-doctor-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"manage-doctor-title\",\n        children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n          id: \"admin.manage-doctor.title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 54\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"more-infor\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"content-left form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n              id: \"admin.manage-doctor.select-doctor\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 32\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            value: this.state.selectedOption,\n            onChange: this.handleChangeSelect,\n            options: this.state.listDoctors,\n            placeholder: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n              id: \"admin.manage-doctor.select-doctor\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 42\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"content-right\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n              id: \"admin.manage-doctor.intro\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 32\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            className: \"form-control\",\n            rows: \"4\",\n            onChange: event => this.handleOnChangeText(event, 'description'),\n            value: this.state.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"more-infor-extra row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-4 form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n                id: \"admin.manage-doctor.price\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 259,\n                columnNumber: 36\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              value: this.state.selectedPrice,\n              onChange: this.handleChangeSelectDoctorInfor,\n              options: this.state.listPrice,\n              placeholder: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n                id: \"admin.manage-doctor.price\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 264,\n                columnNumber: 46\n              }, this),\n              name: \"selectedPrice\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-4 form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n                id: \"admin.manage-doctor.payment\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 269,\n                columnNumber: 36\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              value: this.state.selectedPayment,\n              onChange: this.handleChangeSelectDoctorInfor,\n              options: this.state.listPayment,\n              placeholder: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n                id: \"admin.manage-doctor.payment\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 274,\n                columnNumber: 46\n              }, this),\n              name: \"selectedPayment\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-4 form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n                id: \"admin.manage-doctor.province\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 279,\n                columnNumber: 36\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              value: this.state.selectProvince,\n              onChange: this.handleChangeSelectDoctorInfor,\n              options: this.state.listProvince,\n              placeholder: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n                id: \"admin.manage-doctor.province\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 284,\n                columnNumber: 46\n              }, this),\n              name: \"selectProvince\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-4 form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n                id: \"admin.manage-doctor.nameClinic\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 289,\n                columnNumber: 36\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 289,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"form-control\",\n              onChange: event => this.handleOnChangeText(event, 'nameClinic'),\n              value: this.state.nameClinic\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-4 form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n                id: \"admin.manage-doctor.addressClinic\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 294,\n                columnNumber: 36\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"form-control\",\n              onChange: event => this.handleOnChangeText(event, 'addressClinic'),\n              value: this.state.addressClinic\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-4 form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n                  id: \"admin.manage-doctor.note\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 299,\n                  columnNumber: 43\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 299,\n                columnNumber: 36\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"form-control\",\n              onChange: event => this.handleOnChangeText(event, 'note'),\n              value: this.state.note\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 300,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"manage-doctor-editor\",\n        children: /*#__PURE__*/_jsxDEV(MdEditor, {\n          style: {\n            height: '500px'\n          },\n          renderHTML: text => mdParser.render(text),\n          onChange: this.handleEditorChange,\n          value: this.state.contentMarkdown\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 55\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => this.handleSaveContentMarkdown(),\n        className: hasOldData === true ? \"save-content-doctor\" : \"create-content-doctor\",\n        children: [\" \", hasOldData === true ? /*#__PURE__*/_jsxDEV(\"span\", {\n          children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n            id: \"admin.manage-doctor.save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 186\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 180\n        }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n          children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n            id: \"admin.manage-doctor.add\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 252\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 246\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    language: state.app.language,\n    allDoctors: state.admin.allDoctors,\n    allRequiredDoctorInfor: state.admin.allRequiredDoctorInfor\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchAllDoctors: () => dispatch(actions.fetchAllDoctors()),\n    getAllRequiredDoctorInfor: () => dispatch(actions.getRequiredDoctorInfor()),\n    saveDetailDoctor: data => dispatch(actions.saveDetailDoctor(data))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ManageDoctor);","map":{"version":3,"sources":["C:/Users/Admin/Desktop/LEARN REACTJS/Frontend-ReactJS-QuickStart/src/containers/System/Admin/ManageDoctor.js"],"names":["React","Component","FormattedMessage","connect","actions","MarkdownIt","MdEditor","Select","CRUD_ACTIONS","LANGUAGES","getDetailInforDoctor","mdParser","ManageDoctor","constructor","props","buildDataInputSelect","inputData","type","result","language","length","map","item","index","object","labelVi","lastName","firstName","labelEn","label","VI","value","id","push","valueVi","valueEn","keyMap","handleEditorChange","html","text","setState","contentMarkdown","contentHTML","console","log","handleSaveContentMarkdown","hasOldData","state","saveDetailDoctor","description","doctorId","selectedOption","action","EDIT","CREATE","selectedPrice","selectedPayment","selectProvince","nameClinic","addressClinic","note","handleChangeSelect","listPayment","listPrice","listProvince","res","errCode","data","Markdown","markdown","paymentId","priceId","provinceId","Doctor_Infor","find","handleChangeSelectDoctorInfor","name","stateName","stateCopy","handleOnChangeText","event","target","listDoctors","componentDidMount","fetchAllDoctors","getAllRequiredDoctorInfor","componentDidUpdate","prevProps","prevState","snapshot","allDoctors","dataSelect","resPayment","resPrice","resProvince","allRequiredDoctorInfor","dataSelectPrice","dataSelectPayment","dataSelectProvince","render","height","mapStateToProps","app","admin","mapDispatchToProps","dispatch","getRequiredDoctorInfor"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport { connect } from 'react-redux';\r\nimport './TableManageUser.scss'\r\nimport * as actions from \"../../../store/actions\"\r\nimport MarkdownIt from 'markdown-it';\r\nimport MdEditor from 'react-markdown-editor-lite';\r\n// import style manually\r\nimport 'react-markdown-editor-lite/lib/index.css';\r\nimport './ManageDoctor.scss'\r\nimport Select from 'react-select';\r\nimport { CRUD_ACTIONS, LANGUAGES } from '../../../utils';\r\nimport { getDetailInforDoctor } from '../../../services/userService';\r\n\r\n\r\n\r\nconst mdParser = new MarkdownIt(/* Markdown-it options */);\r\n\r\nclass ManageDoctor extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            //save to Markdown  table\r\n            contentMarkdown: '',\r\n            contentHTML: '',\r\n            selectedOption: '',\r\n            description: '',\r\n            listDoctors: [],\r\n            hasOldData: false,\r\n\r\n\r\n            //save to doctor_infor table\r\n            listPrice: [],\r\n            listPayment: [],\r\n            listProvince: [],\r\n            selectedPrice: '',\r\n            selectedPayment: '',\r\n            selectProvince: {},\r\n            nameClinic: '',\r\n            addressClinic: '',\r\n            note: ''\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.fetchAllDoctors();\r\n        this.props.getAllRequiredDoctorInfor();\r\n    }\r\n\r\n    buildDataInputSelect = (inputData, type) => {\r\n        let result = [];\r\n        let { language } = this.props;\r\n        if (inputData && inputData.length > 0) {\r\n            if (type === 'USERS') {\r\n                inputData.map((item, index) => {\r\n                    let object = {};\r\n                    let labelVi = `${item.lastName} ${item.firstName}`;\r\n                    let labelEn = `${item.firstName} ${item.lastName}`;\r\n                    object.label = language === LANGUAGES.VI ? labelVi : labelEn;\r\n                    object.value = item.id;\r\n                    result.push(object)\r\n                })\r\n            }\r\n            if (type === 'PRICE') {\r\n                inputData.map((item, index) => {\r\n                    let object = {};\r\n                    let labelVi = `${item.valueVi}`;\r\n                    let labelEn = `${item.valueEn} USD`;\r\n                    object.label = language === LANGUAGES.VI ? labelVi : labelEn;\r\n                    object.value = item.keyMap;\r\n                    result.push(object)\r\n                })\r\n            }\r\n            if (type === 'PAYMENT' || type === 'PROVINCE') {\r\n                inputData.map((item, index) => {\r\n                    let object = {};\r\n                    let labelVi = `${item.valueVi}`;\r\n                    let labelEn = `${item.valueEn}`;\r\n                    object.label = language === LANGUAGES.VI ? labelVi : labelEn;\r\n                    object.value = item.keyMap;\r\n                    result.push(object)\r\n                })\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n\r\n        if (prevProps.allDoctors !== this.props.allDoctors) {\r\n\r\n            let dataSelect = this.buildDataInputSelect(this.props.allDoctors, 'USERS')\r\n            this.setState({\r\n                listDoctors: dataSelect\r\n            })\r\n        }\r\n        if (prevProps.language !== this.props.language) {\r\n            let { resPayment, resPrice, resProvince } = this.props.allRequiredDoctorInfor;\r\n            let dataSelectPrice = this.buildDataInputSelect(resPrice, 'PRICE')\r\n            let dataSelectPayment = this.buildDataInputSelect(resPayment, 'PAYMENT')\r\n            let dataSelectProvince = this.buildDataInputSelect(resProvince, 'PROVINCE')\r\n            this.setState({\r\n                listPrice: dataSelectPrice,\r\n                listPayment: dataSelectPayment,\r\n                listProvince: dataSelectProvince,\r\n            })\r\n        }\r\n        if (prevProps.language !== this.props.language) {\r\n            let dataSelect = this.buildDataInputSelect(this.props.allDoctors, 'USERS')\r\n            let { resPayment, resPrice, resProvince } = this.props.allRequiredDoctorInfor;\r\n            let dataSelectPrice = this.buildDataInputSelect(resPrice, 'PRICE')\r\n            let dataSelectPayment = this.buildDataInputSelect(resPayment, 'PAYMENT')\r\n            let dataSelectProvince = this.buildDataInputSelect(resProvince, 'PROVINCE')\r\n            this.setState({\r\n                listDoctors: dataSelect,\r\n                listPrice: dataSelectPrice,\r\n                listPayment: dataSelectPayment,\r\n                listProvince: dataSelectProvince,\r\n            })\r\n        }\r\n        if (prevProps.allRequiredDoctorInfor !== this.props.allRequiredDoctorInfor) {\r\n            let { resPayment, resPrice, resProvince } = this.props.allRequiredDoctorInfor;\r\n            let dataSelectPrice = this.buildDataInputSelect(resPrice, 'PRICE')\r\n            let dataSelectPayment = this.buildDataInputSelect(resPayment, 'PAYMENT')\r\n            let dataSelectProvince = this.buildDataInputSelect(resProvince, 'PROVINCE')\r\n\r\n\r\n\r\n            this.setState({\r\n                listPrice: dataSelectPrice,\r\n                listPayment: dataSelectPayment,\r\n                listProvince: dataSelectProvince,\r\n            })\r\n        }\r\n    }\r\n    handleEditorChange = ({ html, text }) => {\r\n        this.setState({\r\n            contentMarkdown: text,\r\n            contentHTML: html\r\n        })\r\n        console.log('handleEditorChange', html, text);\r\n    }\r\n    handleSaveContentMarkdown = () => {\r\n        let { hasOldData } = this.state;\r\n        this.props.saveDetailDoctor({\r\n            contentHTML: this.state.contentHTML,\r\n            contentMarkdown: this.state.contentMarkdown,\r\n            description: this.state.description,\r\n            doctorId: this.state.selectedOption.value,\r\n            action: hasOldData === true ? CRUD_ACTIONS.EDIT : CRUD_ACTIONS.CREATE,\r\n\r\n            selectedPrice: this.state.selectedPrice.value,\r\n            selectedPayment: this.state.selectedPayment.value,\r\n            selectProvince: this.state.selectProvince.value,\r\n            nameClinic: this.state.nameClinic,\r\n            addressClinic: this.state.addressClinic,\r\n            note: this.state.note\r\n        })\r\n    }\r\n\r\n\r\n    handleChangeSelect = async (selectedOption) => {\r\n        this.setState({ selectedOption });\r\n        let { listPayment, listPrice, listProvince } = this.state\r\n        let res = await getDetailInforDoctor(selectedOption.value);\r\n        let selectedPayment = '', selectedPrice = '', selectProvince = ''; // Khai báo các biến ở đây\r\n        if (res && res.errCode === 0 && res.data && res.data.Markdown) {\r\n            let markdown = res.data.Markdown;\r\n            let addressClinic = '', nameClinic = '', note = '', paymentId = '', priceId = '', provinceId = '';\r\n            // Bỏ đi phần khai báo biến ở đây\r\n            if (res.data.Doctor_Infor) {\r\n                addressClinic = res.data.Doctor_Infor.addressClinic;\r\n                nameClinic = res.data.Doctor_Infor.nameClinic;\r\n                note = res.data.Doctor_Infor.note;\r\n    \r\n                paymentId = res.data.Doctor_Infor.paymentId;\r\n                priceId = res.data.Doctor_Infor.priceId;\r\n                provinceId = res.data.Doctor_Infor.provinceId;\r\n    \r\n                selectedPayment = listPayment.find(item => {\r\n                    return item && item.value === paymentId\r\n                })\r\n                selectedPrice = listPrice.find(item => {\r\n                    return item && item.value === priceId\r\n                })\r\n                selectProvince = listProvince.find(item => {\r\n                    return item && item.value === provinceId\r\n                })\r\n            }\r\n            this.setState({\r\n                contentHTML: markdown.contentHTML,\r\n                contentMarkdown: markdown.contentMarkdown,\r\n                description: markdown.description,\r\n                hasOldData: true,\r\n                addressClinic: addressClinic,\r\n                nameClinic: nameClinic,\r\n                note: note,\r\n                selectedPayment: selectedPayment,\r\n                selectedPrice: selectedPrice,\r\n                selectProvince: selectProvince\r\n            })\r\n        } else {\r\n            this.setState({\r\n                contentHTML: '',\r\n                contentMarkdown: '',\r\n                description: '',\r\n                hasOldData: false,\r\n                addressClinic: '',\r\n                nameClinic: '',\r\n                note: '',\r\n                selectedPayment: selectedPayment,\r\n                selectedPrice: selectedPrice,\r\n                selectProvince: selectProvince\r\n            })\r\n        }\r\n    };\r\n    \r\n    handleChangeSelectDoctorInfor = async (selectedOption, name) => {\r\n        let stateName = name.name;\r\n        let stateCopy = { ...this.state };\r\n        stateCopy[stateName] = selectedOption;\r\n        this.setState({\r\n            ...stateCopy\r\n        })\r\n\r\n    }\r\n    handleOnChangeText = (event, id) => {\r\n        let stateCopy = { ...this.state };\r\n        stateCopy[id] = event.target.value;\r\n        this.setState({\r\n            ...stateCopy\r\n        })\r\n    }\r\n    render() {\r\n        let { hasOldData } = this.state;\r\n        return (\r\n            <div className=\"manage-doctor-container\">\r\n                <div className=\"manage-doctor-title\"><FormattedMessage id=\"admin.manage-doctor.title\" /></div>\r\n                <div className=\"more-infor\">\r\n                    <div className=\"content-left form-group\">\r\n\r\n                        <label><FormattedMessage id=\"admin.manage-doctor.select-doctor\" /></label>\r\n                        <Select\r\n                            value={this.state.selectedOption}\r\n                            onChange={this.handleChangeSelect}\r\n                            options={this.state.listDoctors}\r\n                            placeholder={<FormattedMessage id=\"admin.manage-doctor.select-doctor\" />}\r\n                        />\r\n                    </div>\r\n                    <div className=\"content-right\">\r\n                        <label><FormattedMessage id=\"admin.manage-doctor.intro\" /></label>\r\n                        <textarea className=\"form-control\" rows=\"4\"\r\n                            onChange={(event) => this.handleOnChangeText(event, 'description')}\r\n                            value={this.state.description}>\r\n\r\n                        </textarea>\r\n                    </div>\r\n                    <div className=\"more-infor-extra row\">\r\n                        <div className=\"col-4 form-group\">\r\n                            <label><FormattedMessage id=\"admin.manage-doctor.price\" /></label>\r\n                            <Select\r\n                                value={this.state.selectedPrice}\r\n                                onChange={this.handleChangeSelectDoctorInfor}\r\n                                options={this.state.listPrice}\r\n                                placeholder={<FormattedMessage id=\"admin.manage-doctor.price\" />}\r\n                                name=\"selectedPrice\"\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-4 form-group\">\r\n                            <label><FormattedMessage id=\"admin.manage-doctor.payment\" /></label>\r\n                            <Select\r\n                                value={this.state.selectedPayment}\r\n                                onChange={this.handleChangeSelectDoctorInfor}\r\n                                options={this.state.listPayment}\r\n                                placeholder={<FormattedMessage id=\"admin.manage-doctor.payment\" />}\r\n                                name=\"selectedPayment\"\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-4 form-group\">\r\n                            <label><FormattedMessage id=\"admin.manage-doctor.province\" /></label>\r\n                            <Select\r\n                                value={this.state.selectProvince}\r\n                                onChange={this.handleChangeSelectDoctorInfor}\r\n                                options={this.state.listProvince}\r\n                                placeholder={<FormattedMessage id=\"admin.manage-doctor.province\" />}\r\n                                name=\"selectProvince\"\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-4 form-group\">\r\n                            <label><FormattedMessage id=\"admin.manage-doctor.nameClinic\" /></label>\r\n                            <input className=\"form-control\" onChange={(event) => this.handleOnChangeText(event, 'nameClinic')}\r\n                                value={this.state.nameClinic} />\r\n                        </div>\r\n                        <div className=\"col-4 form-group\">\r\n                            <label><FormattedMessage id=\"admin.manage-doctor.addressClinic\" /></label>\r\n                            <input className=\"form-control\" onChange={(event) => this.handleOnChangeText(event, 'addressClinic')}\r\n                                value={this.state.addressClinic} />\r\n                        </div>\r\n                        <div className=\"col-4 form-group\">\r\n                            <label><label><FormattedMessage id=\"admin.manage-doctor.note\" /></label></label>\r\n                            <input className=\"form-control\" onChange={(event) => this.handleOnChangeText(event, 'note')}\r\n                                value={this.state.note} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"manage-doctor-editor\"><MdEditor style={{ height: '500px' }} renderHTML={text => mdParser.render(text)} onChange={this.handleEditorChange} value={this.state.contentMarkdown} /></div>\r\n                <button onClick={() => this.handleSaveContentMarkdown()} className={hasOldData === true ? \"save-content-doctor\" : \"create-content-doctor\"}> {hasOldData === true ? <span><FormattedMessage id=\"admin.manage-doctor.save\" /></span> : <span><FormattedMessage id=\"admin.manage-doctor.add\" /></span>}</button>\r\n            </div >\r\n\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        language: state.app.language,\r\n        allDoctors: state.admin.allDoctors,\r\n        allRequiredDoctorInfor: state.admin.allRequiredDoctorInfor,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        fetchAllDoctors: () => dispatch(actions.fetchAllDoctors()),\r\n        getAllRequiredDoctorInfor: () => dispatch(actions.getRequiredDoctorInfor()),\r\n        saveDetailDoctor: (data) => dispatch(actions.saveDetailDoctor(data))\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ManageDoctor);\r\n"]},"metadata":{},"sourceType":"module"}