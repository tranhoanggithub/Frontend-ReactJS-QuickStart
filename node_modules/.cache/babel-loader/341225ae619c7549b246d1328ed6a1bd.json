{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\LEARN REACTJS\\\\Frontend-ReactJS-QuickStart\\\\src\\\\routes\\\\System.js\";\nimport React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport { Redirect, Route, Switch } from 'react-router-dom';\nimport UserManage from '../containers/System/UserManage';\nimport UserRedux from '../containers/System/Admin/UserRedux'; // import RegisterPackageGroupOrAcc from '../containers/System/RegisterPackageGroupOrAcc';\n\nimport Header from '../containers/Header/Header';\nimport ManageDoctor from '../containers/System/Admin/ManageDoctor';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass System extends Component {\n  render() {\n    const {\n      systemMenuPath,\n      isLoggedIn\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [isLoggedIn && /*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 32\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"system-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"system-list\",\n          children: /*#__PURE__*/_jsxDEV(Switch, {\n            children: [/*#__PURE__*/_jsxDEV(Route, {\n              path: \"/system/user-manage\",\n              component: UserManage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 20,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/system/user-redux\",\n              component: UserRedux\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 21,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/system/manage-doctor\",\n              component: ManageDoctor\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 22,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              component: () => {\n                return /*#__PURE__*/_jsxDEV(Redirect, {\n                  to: systemMenuPath\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 23,\n                  columnNumber: 63\n                }, this);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 23,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    systemMenuPath: state.app.systemMenuPath,\n    isLoggedIn: state.user.isLoggedIn\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(System);","map":{"version":3,"sources":["C:/Users/Admin/Desktop/LEARN REACTJS/Frontend-ReactJS-QuickStart/src/routes/System.js"],"names":["React","Component","connect","Redirect","Route","Switch","UserManage","UserRedux","Header","ManageDoctor","System","render","systemMenuPath","isLoggedIn","props","mapStateToProps","state","app","user","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,QAAT,EAAmBC,KAAnB,EAA0BC,MAA1B,QAAwC,kBAAxC;AACA,OAAOC,UAAP,MAAuB,iCAAvB;AACA,OAAOC,SAAP,MAAsB,sCAAtB,C,CACA;;AACA,OAAOC,MAAP,MAAmB,6BAAnB;AACA,OAAOC,YAAP,MAAyB,yCAAzB;;;AAEA,MAAMC,MAAN,SAAqBT,SAArB,CAA+B;AAC3BU,EAAAA,MAAM,GAAG;AAEL,UAAM;AAAEC,MAAAA,cAAF;AAAkBC,MAAAA;AAAlB,QAAiC,KAAKC,KAA5C;AACA,wBACI,QAAC,KAAD,CAAO,QAAP;AAAA,iBACKD,UAAU,iBAAI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cADnB,eAEI;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA,+BACI;AAAK,UAAA,SAAS,EAAC,aAAf;AAAA,iCACI,QAAC,MAAD;AAAA,oCACI,QAAC,KAAD;AAAO,cAAA,IAAI,EAAC,qBAAZ;AAAkC,cAAA,SAAS,EAAEP;AAA7C;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI,QAAC,KAAD;AAAO,cAAA,IAAI,EAAC,oBAAZ;AAAiC,cAAA,SAAS,EAAEC;AAA5C;AAAA;AAAA;AAAA;AAAA,oBAFJ,eAGI,QAAC,KAAD;AAAO,cAAA,IAAI,EAAC,uBAAZ;AAAoC,cAAA,SAAS,EAAEE;AAA/C;AAAA;AAAA;AAAA;AAAA,oBAHJ,eAII,QAAC,KAAD;AAAO,cAAA,SAAS,EAAE,MAAM;AAAE,oCAAQ,QAAC,QAAD;AAAU,kBAAA,EAAE,EAAEG;AAAd;AAAA;AAAA;AAAA;AAAA,wBAAR;AAA2C;AAArE;AAAA;AAAA;AAAA;AAAA,oBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAeH;;AAnB0B;;AAsB/B,MAAMG,eAAe,GAAGC,KAAK,IAAI;AAC7B,SAAO;AACHJ,IAAAA,cAAc,EAAEI,KAAK,CAACC,GAAN,CAAUL,cADvB;AAEHC,IAAAA,UAAU,EAAEG,KAAK,CAACE,IAAN,CAAWL;AAFpB,GAAP;AAIH,CALD;;AAOA,MAAMM,kBAAkB,GAAGC,QAAQ,IAAI;AACnC,SAAO,EAAP;AAEH,CAHD;;AAKA,eAAelB,OAAO,CAACa,eAAD,EAAkBI,kBAAlB,CAAP,CAA6CT,MAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect, Route, Switch } from 'react-router-dom';\r\nimport UserManage from '../containers/System/UserManage';\r\nimport UserRedux from '../containers/System/Admin/UserRedux';\r\n// import RegisterPackageGroupOrAcc from '../containers/System/RegisterPackageGroupOrAcc';\r\nimport Header from '../containers/Header/Header';\r\nimport ManageDoctor from '../containers/System/Admin/ManageDoctor';\r\n\r\nclass System extends Component {\r\n    render() {\r\n\r\n        const { systemMenuPath, isLoggedIn } = this.props;\r\n        return (\r\n            <React.Fragment>\r\n                {isLoggedIn && <Header />}\r\n                <div className=\"system-container\">\r\n                    <div className=\"system-list\">\r\n                        <Switch>\r\n                            <Route path=\"/system/user-manage\" component={UserManage} />\r\n                            <Route path=\"/system/user-redux\" component={UserRedux} />\r\n                            <Route path=\"/system/manage-doctor\" component={ManageDoctor} />\r\n                            <Route component={() => { return (<Redirect to={systemMenuPath} />) }} />\r\n                        </Switch>\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        systemMenuPath: state.app.systemMenuPath,\r\n        isLoggedIn: state.user.isLoggedIn\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(System);\r\n"]},"metadata":{},"sourceType":"module"}