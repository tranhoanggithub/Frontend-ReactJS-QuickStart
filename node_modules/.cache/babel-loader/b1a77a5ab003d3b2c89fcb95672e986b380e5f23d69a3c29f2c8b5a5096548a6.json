{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\LEARN REACTJS\\\\Frontend-ReactJS-QuickStart\\\\src\\\\components\\\\ConfirmModal.js\";\nimport React, { Component } from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { Modal } from 'reactstrap';\nimport './ConfirmModal.scss';\nimport * as actions from \"../store/actions\";\nimport { KeyCodeUtils } from \"../utils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass ConfirmModal extends Component {\n  constructor(props) {\n    super(props);\n    this.initialState = {};\n    this.state = {\n      ...this.initialState\n    };\n    this.handlerKeyDown = event => {\n      const keyCode = event.which || event.keyCode;\n      if (keyCode === KeyCodeUtils.ENTER) {\n        if (!this.acceptBtnRef.current || this.acceptBtnRef.current.disabled) return;\n        this.acceptBtnRef.current.click();\n      }\n    };\n    this.onAcceptBtnClick = () => {\n      const {\n        contentOfConfirmModal\n      } = this.props;\n      if (contentOfConfirmModal.handleFunc) {\n        contentOfConfirmModal.handleFunc(contentOfConfirmModal.dataFunc);\n      }\n      this.onClose();\n    };\n    this.onClose = () => {\n      this.props.setContentOfConfirmModal({\n        isOpen: false,\n        messageId: \"\",\n        handleFunc: null,\n        dataFunc: null\n      });\n    };\n    this.acceptBtnRef = /*#__PURE__*/React.createRef();\n  }\n  componentDidMount() {\n    document.addEventListener('keydown', this.handlerKeyDown);\n  }\n  componentWillUnmount() {\n    document.removeEventListener('keydown', this.handlerKeyDown);\n  }\n  render() {\n    const {\n      contentOfConfirmModal\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: contentOfConfirmModal.isOpen,\n      className: \"confirm-modal\",\n      centered: true,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-title\",\n          children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n            id: \"common.confirm\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-auto\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-close\",\n            onClick: this.onClose,\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fal fa-times\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-body\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"confirm-modal-content\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-12\",\n              children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n                id: contentOfConfirmModal.messageId ? contentOfConfirmModal.messageId : \"common.confirm-this-task\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-12\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"btn-container text-center\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn btn-add\",\n                  onClick: this.onClose,\n                  children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n                    id: \"common.close\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 85,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 84,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  ref: this.acceptBtnRef,\n                  className: \"btn btn-add\",\n                  onClick: this.onAcceptBtnClick,\n                  children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n                    id: \"common.accept\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 88,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 87,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this);\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    lang: state.app.language,\n    contentOfConfirmModal: state.app.contentOfConfirmModal\n  };\n};\nconst mapDispatchToProps = dispatch => {\n  return {\n    setContentOfConfirmModal: contentOfConfirmModal => dispatch(actions.setContentOfConfirmModal(contentOfConfirmModal))\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(ConfirmModal);","map":{"version":3,"names":["React","Component","FormattedMessage","connect","Modal","actions","KeyCodeUtils","jsxDEV","_jsxDEV","ConfirmModal","constructor","props","initialState","state","handlerKeyDown","event","keyCode","which","ENTER","acceptBtnRef","current","disabled","click","onAcceptBtnClick","contentOfConfirmModal","handleFunc","dataFunc","onClose","setContentOfConfirmModal","isOpen","messageId","createRef","componentDidMount","document","addEventListener","componentWillUnmount","removeEventListener","render","className","centered","children","id","fileName","_jsxFileName","lineNumber","columnNumber","onClick","ref","mapStateToProps","lang","app","language","mapDispatchToProps","dispatch"],"sources":["C:/Users/Admin/Desktop/LEARN REACTJS/Frontend-ReactJS-QuickStart/src/components/ConfirmModal.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport { connect } from 'react-redux';\r\nimport { Modal } from 'reactstrap';\r\n\r\nimport './ConfirmModal.scss';\r\nimport * as actions from \"../store/actions\";\r\nimport { KeyCodeUtils } from \"../utils\";\r\n\r\nclass ConfirmModal extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.acceptBtnRef = React.createRef();\r\n    }\r\n\r\n    initialState = {\r\n    };\r\n\r\n    state = {\r\n        ...this.initialState\r\n    };\r\n\r\n    componentDidMount() {\r\n        document.addEventListener('keydown', this.handlerKeyDown);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener('keydown', this.handlerKeyDown);\r\n    }\r\n\r\n    handlerKeyDown = (event) => {\r\n        const keyCode = event.which || event.keyCode;\r\n        if (keyCode === KeyCodeUtils.ENTER) {\r\n            if (!this.acceptBtnRef.current || this.acceptBtnRef.current.disabled) return;\r\n            this.acceptBtnRef.current.click();\r\n        }\r\n    }\r\n\r\n    onAcceptBtnClick = () => {\r\n        const { contentOfConfirmModal } = this.props;\r\n        if (contentOfConfirmModal.handleFunc) {\r\n            contentOfConfirmModal.handleFunc(contentOfConfirmModal.dataFunc);\r\n        }\r\n        this.onClose();\r\n    }\r\n\r\n    onClose = () => {\r\n        this.props.setContentOfConfirmModal({\r\n            isOpen: false,\r\n            messageId: \"\",\r\n            handleFunc: null,\r\n            dataFunc: null\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { contentOfConfirmModal } = this.props;\r\n\r\n        return (\r\n            <Modal isOpen={contentOfConfirmModal.isOpen} className='confirm-modal' centered={true}>\r\n                <div className=\"modal-header\">\r\n                    <div className=\"modal-title\">\r\n                        <FormattedMessage id={\"common.confirm\"} />\r\n                    </div>\r\n                    <div className=\"col-auto\">\r\n                        <button className=\"btn btn-close\" onClick={this.onClose}>\r\n                            <i className=\"fal fa-times\" />\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"modal-body\">\r\n                    <div className=\"confirm-modal-content\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12\">\r\n                                <FormattedMessage id={contentOfConfirmModal.messageId ? contentOfConfirmModal.messageId : \"common.confirm-this-task\"} />\r\n                            </div>\r\n\r\n                            <hr />\r\n\r\n                            <div className=\"col-12\">\r\n                                <div className=\"btn-container text-center\">\r\n                                    <button className=\"btn btn-add\" onClick={this.onClose} >\r\n                                        <FormattedMessage id=\"common.close\" />\r\n                                    </button>\r\n                                    <button ref={this.acceptBtnRef} className=\"btn btn-add\" onClick={this.onAcceptBtnClick}>\r\n                                        <FormattedMessage id={\"common.accept\"} />\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Modal >\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        lang: state.app.language,\r\n        contentOfConfirmModal: state.app.contentOfConfirmModal\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        setContentOfConfirmModal: (contentOfConfirmModal) => dispatch(actions.setContentOfConfirmModal(contentOfConfirmModal))\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ConfirmModal);\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}