{"ast":null,"code":"var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n  return target;\n};\nexport default function autoMergeLevel1(inboundState, originalState, reducedState, _ref) {\n  var debug = _ref.debug;\n  var newState = _extends({}, reducedState);\n  // only rehydrate if inboundState exists and is an object\n  if (inboundState && (typeof inboundState === 'undefined' ? 'undefined' : _typeof(inboundState)) === 'object') {\n    Object.keys(inboundState).forEach(function (key) {\n      // ignore _persist data\n      if (key === '_persist') return;\n      // if reducer modifies substate, skip auto rehydration\n      if (originalState[key] !== reducedState[key]) {\n        if (process.env.NODE_ENV !== 'production' && debug) console.log('redux-persist/stateReconciler: sub state for key `%s` modified, skipping.', key);\n        return;\n      }\n      // otherwise hard set the new value\n      newState[key] = inboundState[key];\n    });\n  }\n  if (process.env.NODE_ENV !== 'production' && debug && inboundState && (typeof inboundState === 'undefined' ? 'undefined' : _typeof(inboundState)) === 'object') console.log('redux-persist/stateReconciler: rehydrated keys \\'' + Object.keys(inboundState).join(', ') + '\\'');\n  return newState;\n}\n\n/*\r\n  autoMergeLevel1: \r\n    - merges 1 level of substate\r\n    - skips substate if already modified\r\n*/","map":{"version":3,"names":["_typeof","Symbol","iterator","obj","constructor","prototype","_extends","Object","assign","target","i","arguments","length","source","key","hasOwnProperty","call","autoMergeLevel1","inboundState","originalState","reducedState","_ref","debug","newState","keys","forEach","process","env","NODE_ENV","console","log","join"],"sources":["C:/Users/Admin/Desktop/LEARN REACTJS/Frontend-ReactJS-QuickStart/node_modules/redux-persist/es/stateReconciler/autoMergeLevel1.js"],"sourcesContent":["var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\r\n\r\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\r\n\r\nexport default function autoMergeLevel1(inboundState, originalState, reducedState, _ref) {\r\n  var debug = _ref.debug;\r\n\r\n  var newState = _extends({}, reducedState);\r\n  // only rehydrate if inboundState exists and is an object\r\n  if (inboundState && (typeof inboundState === 'undefined' ? 'undefined' : _typeof(inboundState)) === 'object') {\r\n    Object.keys(inboundState).forEach(function (key) {\r\n      // ignore _persist data\r\n      if (key === '_persist') return;\r\n      // if reducer modifies substate, skip auto rehydration\r\n      if (originalState[key] !== reducedState[key]) {\r\n        if (process.env.NODE_ENV !== 'production' && debug) console.log('redux-persist/stateReconciler: sub state for key `%s` modified, skipping.', key);\r\n        return;\r\n      }\r\n      // otherwise hard set the new value\r\n      newState[key] = inboundState[key];\r\n    });\r\n  }\r\n\r\n  if (process.env.NODE_ENV !== 'production' && debug && inboundState && (typeof inboundState === 'undefined' ? 'undefined' : _typeof(inboundState)) === 'object') console.log('redux-persist/stateReconciler: rehydrated keys \\'' + Object.keys(inboundState).join(', ') + '\\'');\r\n\r\n  return newState;\r\n}\r\n\r\n/*\r\n  autoMergeLevel1: \r\n    - merges 1 level of substate\r\n    - skips substate if already modified\r\n*/"],"mappings":"AAAA,IAAIA,OAAO,GAAG,OAAOC,MAAM,KAAK,UAAU,IAAI,OAAOA,MAAM,CAACC,QAAQ,KAAK,QAAQ,GAAG,UAAUC,GAAG,EAAE;EAAE,OAAO,OAAOA,GAAG;AAAE,CAAC,GAAG,UAAUA,GAAG,EAAE;EAAE,OAAOA,GAAG,IAAI,OAAOF,MAAM,KAAK,UAAU,IAAIE,GAAG,CAACC,WAAW,KAAKH,MAAM,IAAIE,GAAG,KAAKF,MAAM,CAACI,SAAS,GAAG,QAAQ,GAAG,OAAOF,GAAG;AAAE,CAAC;AAE5Q,IAAIG,QAAQ,GAAGC,MAAM,CAACC,MAAM,IAAI,UAAUC,MAAM,EAAE;EAAE,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGC,SAAS,CAACC,MAAM,EAAEF,CAAC,EAAE,EAAE;IAAE,IAAIG,MAAM,GAAGF,SAAS,CAACD,CAAC,CAAC;IAAE,KAAK,IAAII,GAAG,IAAID,MAAM,EAAE;MAAE,IAAIN,MAAM,CAACF,SAAS,CAACU,cAAc,CAACC,IAAI,CAACH,MAAM,EAAEC,GAAG,CAAC,EAAE;QAAEL,MAAM,CAACK,GAAG,CAAC,GAAGD,MAAM,CAACC,GAAG,CAAC;MAAE;IAAE;EAAE;EAAE,OAAOL,MAAM;AAAE,CAAC;AAEhQ,eAAe,SAASQ,eAAeA,CAACC,YAAY,EAAEC,aAAa,EAAEC,YAAY,EAAEC,IAAI,EAAE;EACvF,IAAIC,KAAK,GAAGD,IAAI,CAACC,KAAK;EAEtB,IAAIC,QAAQ,GAAGjB,QAAQ,CAAC,CAAC,CAAC,EAAEc,YAAY,CAAC;EACzC;EACA,IAAIF,YAAY,IAAI,CAAC,OAAOA,YAAY,KAAK,WAAW,GAAG,WAAW,GAAGlB,OAAO,CAACkB,YAAY,CAAC,MAAM,QAAQ,EAAE;IAC5GX,MAAM,CAACiB,IAAI,CAACN,YAAY,CAAC,CAACO,OAAO,CAAC,UAAUX,GAAG,EAAE;MAC/C;MACA,IAAIA,GAAG,KAAK,UAAU,EAAE;MACxB;MACA,IAAIK,aAAa,CAACL,GAAG,CAAC,KAAKM,YAAY,CAACN,GAAG,CAAC,EAAE;QAC5C,IAAIY,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,IAAIN,KAAK,EAAEO,OAAO,CAACC,GAAG,CAAC,2EAA2E,EAAEhB,GAAG,CAAC;QACjJ;MACF;MACA;MACAS,QAAQ,CAACT,GAAG,CAAC,GAAGI,YAAY,CAACJ,GAAG,CAAC;IACnC,CAAC,CAAC;EACJ;EAEA,IAAIY,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,IAAIN,KAAK,IAAIJ,YAAY,IAAI,CAAC,OAAOA,YAAY,KAAK,WAAW,GAAG,WAAW,GAAGlB,OAAO,CAACkB,YAAY,CAAC,MAAM,QAAQ,EAAEW,OAAO,CAACC,GAAG,CAAC,mDAAmD,GAAGvB,MAAM,CAACiB,IAAI,CAACN,YAAY,CAAC,CAACa,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC;EAE9Q,OAAOR,QAAQ;AACjB;;AAEA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}