{"ast":null,"code":"import { BestAvailableLocale } from './BestAvailableLocale';\nimport { UNICODE_EXTENSION_SEQUENCE_REGEX } from './utils';\n/**\r\n * https://tc39.es/ecma402/#sec-bestfitmatcher\r\n * @param availableLocales\r\n * @param requestedLocales\r\n * @param getDefaultLocale\r\n */\nexport function BestFitMatcher(availableLocales, requestedLocales, getDefaultLocale) {\n  var minimizedAvailableLocaleMap = {};\n  var minimizedAvailableLocales = new Set();\n  availableLocales.forEach(function (locale) {\n    var minimizedLocale = new Intl.Locale(locale).minimize().toString();\n    minimizedAvailableLocaleMap[minimizedLocale] = locale;\n    minimizedAvailableLocales.add(minimizedLocale);\n  });\n  var foundLocale;\n  for (var _i = 0, requestedLocales_1 = requestedLocales; _i < requestedLocales_1.length; _i++) {\n    var l = requestedLocales_1[_i];\n    if (foundLocale) {\n      break;\n    }\n    var noExtensionLocale = l.replace(UNICODE_EXTENSION_SEQUENCE_REGEX, '');\n    if (availableLocales.has(noExtensionLocale)) {\n      foundLocale = noExtensionLocale;\n      break;\n    }\n    if (minimizedAvailableLocales.has(noExtensionLocale)) {\n      foundLocale = minimizedAvailableLocaleMap[noExtensionLocale];\n      break;\n    }\n    var locale = new Intl.Locale(noExtensionLocale);\n    var maximizedRequestedLocale = locale.maximize().toString();\n    var minimizedRequestedLocale = locale.minimize().toString();\n    // Check minimized locale\n    if (minimizedAvailableLocales.has(minimizedRequestedLocale)) {\n      foundLocale = minimizedAvailableLocaleMap[minimizedRequestedLocale];\n      break;\n    }\n    // Lookup algo on maximized locale\n    foundLocale = BestAvailableLocale(minimizedAvailableLocales, maximizedRequestedLocale);\n  }\n  return {\n    locale: foundLocale || getDefaultLocale()\n  };\n}","map":{"version":3,"names":["BestAvailableLocale","UNICODE_EXTENSION_SEQUENCE_REGEX","BestFitMatcher","availableLocales","requestedLocales","getDefaultLocale","minimizedAvailableLocaleMap","minimizedAvailableLocales","Set","forEach","locale","minimizedLocale","Intl","Locale","minimize","toString","add","foundLocale","_i","requestedLocales_1","length","l","noExtensionLocale","replace","has","maximizedRequestedLocale","maximize","minimizedRequestedLocale"],"sources":["C:/Users/Admin/Desktop/LEARN REACTJS/Frontend-ReactJS-QuickStart/node_modules/@formatjs/intl/node_modules/@formatjs/ecma402-abstract/lib/BestFitMatcher.js"],"sourcesContent":["import { BestAvailableLocale } from './BestAvailableLocale';\r\nimport { UNICODE_EXTENSION_SEQUENCE_REGEX } from './utils';\r\n/**\r\n * https://tc39.es/ecma402/#sec-bestfitmatcher\r\n * @param availableLocales\r\n * @param requestedLocales\r\n * @param getDefaultLocale\r\n */\r\nexport function BestFitMatcher(availableLocales, requestedLocales, getDefaultLocale) {\r\n    var minimizedAvailableLocaleMap = {};\r\n    var minimizedAvailableLocales = new Set();\r\n    availableLocales.forEach(function (locale) {\r\n        var minimizedLocale = new Intl.Locale(locale)\r\n            .minimize()\r\n            .toString();\r\n        minimizedAvailableLocaleMap[minimizedLocale] = locale;\r\n        minimizedAvailableLocales.add(minimizedLocale);\r\n    });\r\n    var foundLocale;\r\n    for (var _i = 0, requestedLocales_1 = requestedLocales; _i < requestedLocales_1.length; _i++) {\r\n        var l = requestedLocales_1[_i];\r\n        if (foundLocale) {\r\n            break;\r\n        }\r\n        var noExtensionLocale = l.replace(UNICODE_EXTENSION_SEQUENCE_REGEX, '');\r\n        if (availableLocales.has(noExtensionLocale)) {\r\n            foundLocale = noExtensionLocale;\r\n            break;\r\n        }\r\n        if (minimizedAvailableLocales.has(noExtensionLocale)) {\r\n            foundLocale = minimizedAvailableLocaleMap[noExtensionLocale];\r\n            break;\r\n        }\r\n        var locale = new Intl.Locale(noExtensionLocale);\r\n        var maximizedRequestedLocale = locale.maximize().toString();\r\n        var minimizedRequestedLocale = locale.minimize().toString();\r\n        // Check minimized locale\r\n        if (minimizedAvailableLocales.has(minimizedRequestedLocale)) {\r\n            foundLocale = minimizedAvailableLocaleMap[minimizedRequestedLocale];\r\n            break;\r\n        }\r\n        // Lookup algo on maximized locale\r\n        foundLocale = BestAvailableLocale(minimizedAvailableLocales, maximizedRequestedLocale);\r\n    }\r\n    return {\r\n        locale: foundLocale || getDefaultLocale(),\r\n    };\r\n}\r\n"],"mappings":"AAAA,SAASA,mBAAmB,QAAQ,uBAAuB;AAC3D,SAASC,gCAAgC,QAAQ,SAAS;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,cAAcA,CAACC,gBAAgB,EAAEC,gBAAgB,EAAEC,gBAAgB,EAAE;EACjF,IAAIC,2BAA2B,GAAG,CAAC,CAAC;EACpC,IAAIC,yBAAyB,GAAG,IAAIC,GAAG,CAAC,CAAC;EACzCL,gBAAgB,CAACM,OAAO,CAAC,UAAUC,MAAM,EAAE;IACvC,IAAIC,eAAe,GAAG,IAAIC,IAAI,CAACC,MAAM,CAACH,MAAM,CAAC,CACxCI,QAAQ,CAAC,CAAC,CACVC,QAAQ,CAAC,CAAC;IACfT,2BAA2B,CAACK,eAAe,CAAC,GAAGD,MAAM;IACrDH,yBAAyB,CAACS,GAAG,CAACL,eAAe,CAAC;EAClD,CAAC,CAAC;EACF,IAAIM,WAAW;EACf,KAAK,IAAIC,EAAE,GAAG,CAAC,EAAEC,kBAAkB,GAAGf,gBAAgB,EAAEc,EAAE,GAAGC,kBAAkB,CAACC,MAAM,EAAEF,EAAE,EAAE,EAAE;IAC1F,IAAIG,CAAC,GAAGF,kBAAkB,CAACD,EAAE,CAAC;IAC9B,IAAID,WAAW,EAAE;MACb;IACJ;IACA,IAAIK,iBAAiB,GAAGD,CAAC,CAACE,OAAO,CAACtB,gCAAgC,EAAE,EAAE,CAAC;IACvE,IAAIE,gBAAgB,CAACqB,GAAG,CAACF,iBAAiB,CAAC,EAAE;MACzCL,WAAW,GAAGK,iBAAiB;MAC/B;IACJ;IACA,IAAIf,yBAAyB,CAACiB,GAAG,CAACF,iBAAiB,CAAC,EAAE;MAClDL,WAAW,GAAGX,2BAA2B,CAACgB,iBAAiB,CAAC;MAC5D;IACJ;IACA,IAAIZ,MAAM,GAAG,IAAIE,IAAI,CAACC,MAAM,CAACS,iBAAiB,CAAC;IAC/C,IAAIG,wBAAwB,GAAGf,MAAM,CAACgB,QAAQ,CAAC,CAAC,CAACX,QAAQ,CAAC,CAAC;IAC3D,IAAIY,wBAAwB,GAAGjB,MAAM,CAACI,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC;IAC3D;IACA,IAAIR,yBAAyB,CAACiB,GAAG,CAACG,wBAAwB,CAAC,EAAE;MACzDV,WAAW,GAAGX,2BAA2B,CAACqB,wBAAwB,CAAC;MACnE;IACJ;IACA;IACAV,WAAW,GAAGjB,mBAAmB,CAACO,yBAAyB,EAAEkB,wBAAwB,CAAC;EAC1F;EACA,OAAO;IACHf,MAAM,EAAEO,WAAW,IAAIZ,gBAAgB,CAAC;EAC5C,CAAC;AACL"},"metadata":{},"sourceType":"module","externalDependencies":[]}