{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\LEARN REACTJS\\\\Frontend-ReactJS-QuickStart\\\\src\\\\components\\\\Input\\\\DatePicker.js\";\nimport React, { Component } from 'react';\nimport Flatpickr from 'react-flatpickr';\nimport moment from 'moment';\nimport { KeyCodeUtils } from \"../../utils\";\nimport './DatePicker.scss'; // const CustomInput = ({ value, defaultValue, inputRef, onInputChange, onInputBlur, ...props }) => {\n//     return <input {...props} className='custom-form-control custom-date-input' defaultValue={defaultValue} ref={inputRef}\n//         onChange={onInputChange}\n//         onBlur={onInputBlur}\n//     />;\n// };\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass DatePicker extends Component {\n  constructor(...args) {\n    super(...args);\n    this.flatpickrNode = null;\n\n    this.nodeRef = element => {\n      this.flatpickr = element && element.flatpickr;\n      this.flatpickrNode = element && element.node;\n\n      if (this.flatpickrNode) {\n        this.flatpickrNode.addEventListener('blur', this.handleBlur);\n        this.flatpickrNode.addEventListener('keydown', this.handlerKeyDown);\n      }\n    };\n\n    this.handlerKeyDown = event => {\n      const keyCode = event.which || event.keyCode;\n\n      if (keyCode === KeyCodeUtils.ENTER) {\n        event.preventDefault();\n        const {\n          onChange\n        } = this.props;\n        const value = event.target.value; // Take the blur event and process the string value\n\n        const valueMoment = moment(value, 'DD/MM/YYYY');\n        onChange([valueMoment.toDate(), valueMoment.toDate()]);\n      }\n    };\n\n    this.handleBlur = event => {\n      const {\n        onChange\n      } = this.props;\n      const value = event.target.value; // Take the blur event and process the string value\n\n      event.preventDefault();\n      const valueMoment = moment(value, 'DD/MM/YYYY');\n      onChange([valueMoment.toDate(), valueMoment.toDate()]);\n    };\n\n    this.onOpen = () => {\n      if (this.flatpickrNode) {\n        this.flatpickrNode.blur();\n      }\n    };\n\n    this.checkDateValue = (str, max) => {\n      if (str.charAt(0) !== '0' || str === '00') {\n        var num = parseInt(str);\n        if (isNaN(num) || num <= 0 || num > max) num = 1;\n        str = num > parseInt(max.toString().charAt(0)) && num.toString().length === 1 ? '0' + num : num.toString();\n      }\n\n      ;\n      return str;\n    };\n\n    this.autoFormatOnChange = (value, seperator) => {\n      var input = value;\n      let regexForDeleting = new RegExp(`\\\\D\\\\${seperator}$`); //if (/\\D\\/$/.test(input)) input = input.substr(0, input.length - 3); // dat.nt: Xóa thêm 1 ký tự nếu xóa dấu cách sau / (VD: 12 / 12 /=> 12 / 1)\n\n      if (regexForDeleting.test(input)) input = input.substr(0, input.length - 3);\n      var values = input.split(seperator).map(function (v) {\n        return v.replace(/\\D/g, '');\n      });\n      if (values[0]) values[0] = this.checkDateValue(values[0], 31);\n      if (values[1]) values[1] = this.checkDateValue(values[1], 12);\n      var output = values.map(function (v, i) {\n        return v.length === 2 && i < 2 ? v + ' ' + seperator + ' ' : v;\n      });\n      return output.join('').substr(0, 14);\n    };\n\n    this.onInputChange = e => {\n      if (this.DISPLAY_FORMAT === this.DATE_FORMAT_AUTO_FILL) {\n        let converted = this.autoFormatOnChange(e.target.value, this.SEPERATOR);\n        e.target.value = converted;\n      }\n    };\n\n    this.onInputBlur = e => {};\n\n    this.SEPERATOR = \"/\";\n    this.DATE_FORMAT_AUTO_FILL = \"d/m/Y\";\n    this.DISPLAY_FORMAT = \"d/m/Y\";\n  }\n\n  componentWillUnmount() {\n    if (this.flatpickrNode) {\n      this.flatpickrNode.removeEventListener('blur', this.handleBlur);\n      this.flatpickrNode.removeEventListener('keydown', this.handlerKeyDown);\n    }\n  }\n\n  close() {\n    this.flatpickr.close();\n  }\n\n  render() {\n    const {\n      value,\n      onChange,\n      minDate,\n      onClose,\n      ...otherProps\n    } = this.props;\n    const options = {\n      dateFormat: this.DISPLAY_FORMAT,\n      allowInput: true,\n      disableMobile: true,\n      onClose: onClose,\n      onOpen: this.onOpen\n    };\n\n    if (minDate) {\n      options.minDate = minDate;\n    }\n\n    return /*#__PURE__*/_jsxDEV(Flatpickr, {\n      ref: this.nodeRef,\n      value: value,\n      onChange: onChange,\n      options: options // render={\n      //     ({ defaultValue, value, ...props }, ref) => {\n      //         return <CustomInput defaultValue={defaultValue} inputRef={ref} onInputChange={this.onInputChange} onInputBlur={this.onInputBlur} />\n      //     }\n      // }\n      ,\n      ...otherProps\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default DatePicker;","map":{"version":3,"sources":["C:/Users/Admin/Desktop/LEARN REACTJS/Frontend-ReactJS-QuickStart/src/components/Input/DatePicker.js"],"names":["React","Component","Flatpickr","moment","KeyCodeUtils","DatePicker","flatpickrNode","nodeRef","element","flatpickr","node","addEventListener","handleBlur","handlerKeyDown","event","keyCode","which","ENTER","preventDefault","onChange","props","value","target","valueMoment","toDate","onOpen","blur","checkDateValue","str","max","charAt","num","parseInt","isNaN","toString","length","autoFormatOnChange","seperator","input","regexForDeleting","RegExp","test","substr","values","split","map","v","replace","output","i","join","onInputChange","e","DISPLAY_FORMAT","DATE_FORMAT_AUTO_FILL","converted","SEPERATOR","onInputBlur","componentWillUnmount","removeEventListener","close","render","minDate","onClose","otherProps","options","dateFormat","allowInput","disableMobile"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Flatpickr from 'react-flatpickr';\r\nimport moment from 'moment';\r\n\r\nimport { KeyCodeUtils } from \"../../utils\";\r\nimport './DatePicker.scss';\r\n\r\n// const CustomInput = ({ value, defaultValue, inputRef, onInputChange, onInputBlur, ...props }) => {\r\n//     return <input {...props} className='custom-form-control custom-date-input' defaultValue={defaultValue} ref={inputRef}\r\n//         onChange={onInputChange}\r\n//         onBlur={onInputBlur}\r\n//     />;\r\n// };\r\n\r\nclass DatePicker extends Component {\r\n\r\n    flatpickrNode = null;\r\n\r\n    nodeRef = element => {\r\n        this.flatpickr = element && element.flatpickr;\r\n        this.flatpickrNode = element && element.node;\r\n        if (this.flatpickrNode) {\r\n            this.flatpickrNode.addEventListener('blur', this.handleBlur);\r\n            this.flatpickrNode.addEventListener('keydown', this.handlerKeyDown);\r\n        }\r\n    };\r\n\r\n    handlerKeyDown = (event) => {\r\n        const keyCode = event.which || event.keyCode;\r\n        if (keyCode === KeyCodeUtils.ENTER) {\r\n            event.preventDefault();\r\n            const { onChange } = this.props;\r\n            const value = event.target.value;\r\n\r\n            // Take the blur event and process the string value\r\n            const valueMoment = moment(value, 'DD/MM/YYYY');\r\n            onChange([valueMoment.toDate(), valueMoment.toDate()]);\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        if (this.flatpickrNode) {\r\n            this.flatpickrNode.removeEventListener('blur', this.handleBlur);\r\n            this.flatpickrNode.removeEventListener('keydown', this.handlerKeyDown);\r\n        }\r\n    }\r\n\r\n    handleBlur = (event) => {\r\n        const { onChange } = this.props;\r\n        const value = event.target.value;\r\n\r\n        // Take the blur event and process the string value\r\n        event.preventDefault();\r\n        const valueMoment = moment(value, 'DD/MM/YYYY');\r\n        onChange([valueMoment.toDate(), valueMoment.toDate()]);\r\n    };\r\n\r\n    onOpen = () => {\r\n        if (this.flatpickrNode) {\r\n            this.flatpickrNode.blur();\r\n        }\r\n    }\r\n\r\n    close() {\r\n        this.flatpickr.close();\r\n    }\r\n\r\n    checkDateValue = (str, max) => {\r\n        if (str.charAt(0) !== '0' || str === '00') {\r\n            var num = parseInt(str);\r\n            if (isNaN(num) || num <= 0 || num > max) num = 1;\r\n            str = num > parseInt(max.toString().charAt(0)) && num.toString().length === 1 ? '0' + num : num.toString();\r\n        };\r\n        return str;\r\n    }\r\n\r\n    // autoFormatonBlur = (value) => {\r\n    //     var input = value;\r\n    //     var values = input.split('/').map(function (v, i) {\r\n    //         return v.replace(/\\D/g, '')\r\n    //     });\r\n    //     var output = '';\r\n\r\n    //     if (values.length == 3) {\r\n    //         var year = values[2].length !== 4 ? parseInt(values[2]) + 2000 : parseInt(values[2]);\r\n    //         var month = parseInt(values[0]) - 1;\r\n    //         var day = parseInt(values[1]);\r\n    //         var d = new Date(year, month, day);\r\n    //         if (!isNaN(d)) {\r\n    //             //document.getElementById('result').innerText = d.toString();\r\n    //             var dates = [d.getMonth() + 1, d.getDate(), d.getFullYear()];\r\n    //             output = dates.map(function (v) {\r\n    //                 v = v.toString();\r\n    //                 return v.length == 1 ? '0' + v : v;\r\n    //             }).join(' / ');\r\n    //         };\r\n    //     };\r\n    //     // this.value = output;\r\n    //     return output;\r\n    // }\r\n\r\n    autoFormatOnChange = (value, seperator) => {\r\n        var input = value;\r\n\r\n        let regexForDeleting = new RegExp(`\\\\D\\\\${seperator}$`);\r\n\r\n        //if (/\\D\\/$/.test(input)) input = input.substr(0, input.length - 3); // dat.nt: Xóa thêm 1 ký tự nếu xóa dấu cách sau / (VD: 12 / 12 /=> 12 / 1)\r\n\r\n        if (regexForDeleting.test(input)) input = input.substr(0, input.length - 3);\r\n\r\n        var values = input.split(seperator).map(function (v) {\r\n            return v.replace(/\\D/g, '')\r\n        });\r\n\r\n        if (values[0]) values[0] = this.checkDateValue(values[0], 31);\r\n        if (values[1]) values[1] = this.checkDateValue(values[1], 12);\r\n        var output = values.map(function (v, i) {\r\n            return v.length === 2 && i < 2 ? v + ' ' + seperator + ' ' : v;\r\n        });\r\n        return output.join('').substr(0, 14);\r\n    }\r\n\r\n    onInputChange = (e) => {\r\n        if (this.DISPLAY_FORMAT === this.DATE_FORMAT_AUTO_FILL) {\r\n            let converted = this.autoFormatOnChange(e.target.value, this.SEPERATOR);\r\n            e.target.value = converted;\r\n        }\r\n    }\r\n\r\n    onInputBlur = (e) => {\r\n    }\r\n\r\n    //dat.nt : Auto Fill cho dạng ngăn cách và format cụ thể (seperator có thể dc thay thế)\r\n    SEPERATOR = \"/\";\r\n    DATE_FORMAT_AUTO_FILL = \"d/m/Y\"; // Format không thay đổi\r\n\r\n    // dat.nt : Format ngày hiển thị\r\n    DISPLAY_FORMAT = \"d/m/Y\";\r\n\r\n    render() {\r\n        const { value, onChange, minDate, onClose, ...otherProps } = this.props;\r\n        const options = {\r\n            dateFormat: this.DISPLAY_FORMAT,\r\n            allowInput: true,\r\n            disableMobile: true,\r\n            onClose: onClose,\r\n            onOpen: this.onOpen\r\n        };\r\n        if (minDate) {\r\n            options.minDate = minDate;\r\n        }\r\n        return (\r\n            <Flatpickr\r\n                ref={this.nodeRef}\r\n                value={value}\r\n                onChange={onChange}\r\n                options={options}\r\n                // render={\r\n                //     ({ defaultValue, value, ...props }, ref) => {\r\n                //         return <CustomInput defaultValue={defaultValue} inputRef={ref} onInputChange={this.onInputChange} onInputBlur={this.onInputBlur} />\r\n                //     }\r\n                // }\r\n                {...otherProps}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default DatePicker;\r\n"]},"metadata":{},"sourceType":"module"}