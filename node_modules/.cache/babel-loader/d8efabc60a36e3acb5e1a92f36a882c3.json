{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\LEARN REACTJS\\\\Frontend-ReactJS-QuickStart\\\\src\\\\containers\\\\HomePage\\\\Section\\\\OutStandingDoctor.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { FormattedMessage } from 'react-intl';\nimport Slider from \"react-slick\";\nimport * as actions from '../../../store/actions';\nimport { LANGUAGES } from '../../../utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass OutStandingDoctor extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      arrDoctors: []\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if (prevProps.topDoctorsRedux !== this.props.topDoctorsRedux) {\n      this.setState({\n        arrDoctors: this.props.topDoctorsRedux\n      });\n    }\n  }\n\n  componentDidMount() {\n    this.props.loadTopDoctors();\n  }\n\n  render() {\n    let arrDoctors = this.state.arrDoctors;\n    let {\n      language\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section-share section-outstanding-doctor\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"section-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"section-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"title-section\",\n            children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n              id: \"homepage.outstanding-doctor\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 57\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn-section\",\n            children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n              id: \"homepage.more-infor\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 57\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"section-body\",\n          children: /*#__PURE__*/_jsxDEV(Slider, { ...this.props.settings,\n            children: arrDoctors && arrDoctors.length > 0 && arrDoctors.map((item, index) => {\n              let imageBase64 = '';\n\n              if (item.image) {\n                imageBase64 = new Buffer(item.image, 'base64').toString('binary');\n              }\n\n              let nameVi = `${item.positionData.valueVi}, ${item.lastName} ${item.firstName}`;\n              let nameEn = `${item.positionData.valueEn}, ${item.firstName} ${item.lastName}`;\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"section-customize\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"customize-border\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"outer-bg\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"bg-image section-outstading-doctor\",\n                      style: {\n                        backgroundImage: `url(${imageBase64})`\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 53,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 52,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"position text-center\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      children: language === LANGUAGES.VI ? nameVi : nameEn\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 56,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: \"C\\u01A1 x\\u01B0\\u01A1ng kh\\u1EDBp 1\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 57,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 55,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 51,\n                  columnNumber: 41\n                }, this)\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 37\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    language: state.app.language,\n    isLoggedIn: state.user.isLoggedIn,\n    topDoctorsRedux: state.admin.topDoctors\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    loadTopDoctors: () => dispatch(actions.fetchTopDoctor())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(OutStandingDoctor);","map":{"version":3,"sources":["C:/Users/Admin/Desktop/LEARN REACTJS/Frontend-ReactJS-QuickStart/src/containers/HomePage/Section/OutStandingDoctor.js"],"names":["React","Component","connect","FormattedMessage","Slider","actions","LANGUAGES","OutStandingDoctor","constructor","props","state","arrDoctors","componentDidUpdate","prevProps","prevState","snapshot","topDoctorsRedux","setState","componentDidMount","loadTopDoctors","render","language","settings","length","map","item","index","imageBase64","image","Buffer","toString","nameVi","positionData","valueVi","lastName","firstName","nameEn","valueEn","backgroundImage","VI","mapStateToProps","app","isLoggedIn","user","admin","topDoctors","mapDispatchToProps","dispatch","fetchTopDoctor"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,gBAAT,QAAiC,YAAjC;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAO,KAAKC,OAAZ,MAAyB,wBAAzB;AACA,SAASC,SAAT,QAA0B,gBAA1B;;;AAKA,MAAMC,iBAAN,SAAgCN,SAAhC,CAA0C;AACtCO,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,UAAU,EAAE;AADH,KAAb;AAGH;;AACDC,EAAAA,kBAAkB,CAACC,SAAD,EAAYC,SAAZ,EAAuBC,QAAvB,EAAiC;AAC/C,QAAIF,SAAS,CAACG,eAAV,KAA8B,KAAKP,KAAL,CAAWO,eAA7C,EAA8D;AAC1D,WAAKC,QAAL,CAAc;AACVN,QAAAA,UAAU,EAAE,KAAKF,KAAL,CAAWO;AADb,OAAd;AAGH;AACJ;;AACDE,EAAAA,iBAAiB,GAAG;AAChB,SAAKT,KAAL,CAAWU,cAAX;AACH;;AAEDC,EAAAA,MAAM,GAAG;AACL,QAAIT,UAAU,GAAG,KAAKD,KAAL,CAAWC,UAA5B;AACA,QAAI;AAAEU,MAAAA;AAAF,QAAe,KAAKZ,KAAxB;AACA,wBACI;AAAK,MAAA,SAAS,EAAC,0CAAf;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC,gBAAf;AAAA,kCACI;AAAM,YAAA,SAAS,EAAC,eAAhB;AAAA,mCAAgC,QAAC,gBAAD;AAAkB,cAAA,EAAE,EAAC;AAArB;AAAA;AAAA;AAAA;AAAA;AAAhC;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAQ,YAAA,SAAS,EAAC,aAAlB;AAAA,mCAAgC,QAAC,gBAAD;AAAkB,cAAA,EAAE,EAAC;AAArB;AAAA;AAAA;AAAA;AAAA;AAAhC;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAKI;AAAK,UAAA,SAAS,EAAC,cAAf;AAAA,iCACI,QAAC,MAAD,OAAY,KAAKA,KAAL,CAAWa,QAAvB;AAAA,sBACKX,UAAU,IAAIA,UAAU,CAACY,MAAX,GAAoB,CAAlC,IAAuCZ,UAAU,CAACa,GAAX,CAAe,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACpE,kBAAIC,WAAW,GAAG,EAAlB;;AACA,kBAAIF,IAAI,CAACG,KAAT,EAAgB;AACZD,gBAAAA,WAAW,GAAG,IAAIE,MAAJ,CAAWJ,IAAI,CAACG,KAAhB,EAAuB,QAAvB,EAAiCE,QAAjC,CAA0C,QAA1C,CAAd;AACH;;AACD,kBAAIC,MAAM,GAAI,GAAEN,IAAI,CAACO,YAAL,CAAkBC,OAAQ,KAAIR,IAAI,CAACS,QAAS,IAAGT,IAAI,CAACU,SAAU,EAA9E;AACA,kBAAIC,MAAM,GAAI,GAAEX,IAAI,CAACO,YAAL,CAAkBK,OAAQ,KAAIZ,IAAI,CAACU,SAAU,IAAGV,IAAI,CAACS,QAAS,EAA9E;AAEA,kCACI;AAAK,gBAAA,SAAS,EAAC,mBAAf;AAAA,uCACI;AAAK,kBAAA,SAAS,EAAC,kBAAf;AAAA,0CACI;AAAK,oBAAA,SAAS,EAAC,UAAf;AAAA,2CACI;AAAK,sBAAA,SAAS,EAAC,oCAAf;AAAoD,sBAAA,KAAK,EAAE;AAAEI,wBAAAA,eAAe,EAAG,OAAMX,WAAY;AAAtC;AAA3D;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,0BADJ,eAII;AAAK,oBAAA,SAAS,EAAC,sBAAf;AAAA,4CACI;AAAA,gCAAMN,QAAQ,KAAKf,SAAS,CAACiC,EAAvB,GAA4BR,MAA5B,GAAqCK;AAA3C;AAAA;AAAA;AAAA;AAAA,4BADJ,eAEI;AAAA,gCAAK;AAAL;AAAA;AAAA;AAAA;AAAA,4BAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,0BAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,iBAAwCV,KAAxC;AAAA;AAAA;AAAA;AAAA,sBADJ;AAcH,aAtBuC;AAD5C;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAuCH;;AA5DqC;;AAgE1C,MAAMc,eAAe,GAAG9B,KAAK,IAAI;AAC7B,SAAO;AACHW,IAAAA,QAAQ,EAAEX,KAAK,CAAC+B,GAAN,CAAUpB,QADjB;AAEHqB,IAAAA,UAAU,EAAEhC,KAAK,CAACiC,IAAN,CAAWD,UAFpB;AAGH1B,IAAAA,eAAe,EAAEN,KAAK,CAACkC,KAAN,CAAYC;AAH1B,GAAP;AAKH,CAND;;AAQA,MAAMC,kBAAkB,GAAGC,QAAQ,IAAI;AACnC,SAAO;AACH5B,IAAAA,cAAc,EAAE,MAAM4B,QAAQ,CAAC1C,OAAO,CAAC2C,cAAR,EAAD;AAD3B,GAAP;AAGH,CAJD;;AAMA,eAAe9C,OAAO,CAACsC,eAAD,EAAkBM,kBAAlB,CAAP,CAA6CvC,iBAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux'\r\nimport { FormattedMessage } from 'react-intl';\r\nimport Slider from \"react-slick\";\r\nimport * as actions from '../../../store/actions'\r\nimport { LANGUAGES } from '../../../utils';\r\n\r\n\r\n\r\n\r\nclass OutStandingDoctor extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            arrDoctors: []\r\n        }\r\n    }\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (prevProps.topDoctorsRedux !== this.props.topDoctorsRedux) {\r\n            this.setState({\r\n                arrDoctors: this.props.topDoctorsRedux\r\n            })\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        this.props.loadTopDoctors();\r\n    }\r\n\r\n    render() {\r\n        let arrDoctors = this.state.arrDoctors;\r\n        let { language } = this.props;\r\n        return (\r\n            <div className=\"section-share section-outstanding-doctor\">\r\n                <div className=\"section-container\">\r\n                    <div className=\"section-header\">\r\n                        <span className=\"title-section\"><FormattedMessage id=\"homepage.outstanding-doctor\" /></span>\r\n                        <button className=\"btn-section\"><FormattedMessage id=\"homepage.more-infor\" /></button>\r\n                    </div>\r\n                    <div className=\"section-body\">\r\n                        <Slider {...this.props.settings}>\r\n                            {arrDoctors && arrDoctors.length > 0 && arrDoctors.map((item, index) => {\r\n                                let imageBase64 = '';\r\n                                if (item.image) {\r\n                                    imageBase64 = new Buffer(item.image, 'base64').toString('binary');\r\n                                }\r\n                                let nameVi = `${item.positionData.valueVi}, ${item.lastName} ${item.firstName}`;\r\n                                let nameEn = `${item.positionData.valueEn}, ${item.firstName} ${item.lastName}`;\r\n\r\n                                return (\r\n                                    <div className=\"section-customize\" key={index}>\r\n                                        <div className=\"customize-border\">\r\n                                            <div className=\"outer-bg\">\r\n                                                <div className=\"bg-image section-outstading-doctor\" style={{ backgroundImage: `url(${imageBase64})` }} />\r\n                                            </div>\r\n                                            <div className=\"position text-center\">\r\n                                                <div>{language === LANGUAGES.VI ? nameVi : nameEn}</div>\r\n                                                <div>Cơ xương khớp 1</div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                )\r\n\r\n                            })}\r\n\r\n                        </Slider>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        language: state.app.language,\r\n        isLoggedIn: state.user.isLoggedIn,\r\n        topDoctorsRedux: state.admin.topDoctors\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        loadTopDoctors: () => dispatch(actions.fetchTopDoctor()),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(OutStandingDoctor)"]},"metadata":{},"sourceType":"module"}