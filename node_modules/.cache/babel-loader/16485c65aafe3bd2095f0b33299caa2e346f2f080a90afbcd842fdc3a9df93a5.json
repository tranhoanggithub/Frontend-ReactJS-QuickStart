{"ast":null,"code":"import { filterProps } from './utils';\nimport { MessageFormatError } from './error';\nimport { ErrorCode, FormatError } from 'intl-messageformat';\nvar PLURAL_FORMAT_OPTIONS = ['localeMatcher', 'type'];\nexport function formatPlural(_a, getPluralRules, value, options) {\n  var locale = _a.locale,\n    onError = _a.onError;\n  if (options === void 0) {\n    options = {};\n  }\n  if (!Intl.PluralRules) {\n    onError(new FormatError(\"Intl.PluralRules is not available in this environment.\\nTry polyfilling it using \\\"@formatjs/intl-pluralrules\\\"\\n\", ErrorCode.MISSING_INTL_API));\n  }\n  var filteredOptions = filterProps(options, PLURAL_FORMAT_OPTIONS);\n  try {\n    return getPluralRules(locale, filteredOptions).select(value);\n  } catch (e) {\n    onError(new MessageFormatError('Error formatting plural.', e));\n  }\n  return 'other';\n}","map":{"version":3,"names":["filterProps","MessageFormatError","ErrorCode","FormatError","PLURAL_FORMAT_OPTIONS","formatPlural","_a","getPluralRules","value","options","locale","onError","Intl","PluralRules","MISSING_INTL_API","filteredOptions","select","e"],"sources":["C:/Users/Admin/Desktop/LEARN REACTJS/Frontend-ReactJS-QuickStart/node_modules/@formatjs/intl/lib/src/plural.js"],"sourcesContent":["import { filterProps } from './utils';\r\nimport { MessageFormatError } from './error';\r\nimport { ErrorCode, FormatError } from 'intl-messageformat';\r\nvar PLURAL_FORMAT_OPTIONS = [\r\n    'localeMatcher',\r\n    'type',\r\n];\r\nexport function formatPlural(_a, getPluralRules, value, options) {\r\n    var locale = _a.locale, onError = _a.onError;\r\n    if (options === void 0) { options = {}; }\r\n    if (!Intl.PluralRules) {\r\n        onError(new FormatError(\"Intl.PluralRules is not available in this environment.\\nTry polyfilling it using \\\"@formatjs/intl-pluralrules\\\"\\n\", ErrorCode.MISSING_INTL_API));\r\n    }\r\n    var filteredOptions = filterProps(options, PLURAL_FORMAT_OPTIONS);\r\n    try {\r\n        return getPluralRules(locale, filteredOptions).select(value);\r\n    }\r\n    catch (e) {\r\n        onError(new MessageFormatError('Error formatting plural.', e));\r\n    }\r\n    return 'other';\r\n}\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,SAAS;AACrC,SAASC,kBAAkB,QAAQ,SAAS;AAC5C,SAASC,SAAS,EAAEC,WAAW,QAAQ,oBAAoB;AAC3D,IAAIC,qBAAqB,GAAG,CACxB,eAAe,EACf,MAAM,CACT;AACD,OAAO,SAASC,YAAYA,CAACC,EAAE,EAAEC,cAAc,EAAEC,KAAK,EAAEC,OAAO,EAAE;EAC7D,IAAIC,MAAM,GAAGJ,EAAE,CAACI,MAAM;IAAEC,OAAO,GAAGL,EAAE,CAACK,OAAO;EAC5C,IAAIF,OAAO,KAAK,KAAK,CAAC,EAAE;IAAEA,OAAO,GAAG,CAAC,CAAC;EAAE;EACxC,IAAI,CAACG,IAAI,CAACC,WAAW,EAAE;IACnBF,OAAO,CAAC,IAAIR,WAAW,CAAC,mHAAmH,EAAED,SAAS,CAACY,gBAAgB,CAAC,CAAC;EAC7K;EACA,IAAIC,eAAe,GAAGf,WAAW,CAACS,OAAO,EAAEL,qBAAqB,CAAC;EACjE,IAAI;IACA,OAAOG,cAAc,CAACG,MAAM,EAAEK,eAAe,CAAC,CAACC,MAAM,CAACR,KAAK,CAAC;EAChE,CAAC,CACD,OAAOS,CAAC,EAAE;IACNN,OAAO,CAAC,IAAIV,kBAAkB,CAAC,0BAA0B,EAAEgB,CAAC,CAAC,CAAC;EAClE;EACA,OAAO,OAAO;AAClB"},"metadata":{},"sourceType":"module","externalDependencies":[]}