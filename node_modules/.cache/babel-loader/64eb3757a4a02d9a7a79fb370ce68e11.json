{"ast":null,"code":"import { KEY_PREFIX, REHYDRATE } from './constants';\n\n// @TODO remove once flow < 0.63 support is no longer required.\n\nexport default function createPersistoid(config) {\n  // defaults\n  var blacklist = config.blacklist || null;\n  var whitelist = config.whitelist || null;\n  var transforms = config.transforms || [];\n  var throttle = config.throttle || 0;\n  var storageKey = '' + (config.keyPrefix !== undefined ? config.keyPrefix : KEY_PREFIX) + config.key;\n  var storage = config.storage;\n  var serialize = config.serialize === false ? function (x) {\n    return x;\n  } : defaultSerialize;\n\n  // initialize stateful values\n  var lastState = {};\n  var stagedState = {};\n  var keysToProcess = [];\n  var timeIterator = null;\n  var writePromise = null;\n  var update = function update(state) {\n    // add any changed keys to the queue\n    Object.keys(state).forEach(function (key) {\n      if (!passWhitelistBlacklist(key)) return; // is keyspace ignored? noop\n      if (lastState[key] === state[key]) return; // value unchanged? noop\n      if (keysToProcess.indexOf(key) !== -1) return; // is key already queued? noop\n      keysToProcess.push(key); // add key to queue\n    });\n\n    //if any key is missing in the new state which was present in the lastState,\n    //add it for processing too\n    Object.keys(lastState).forEach(function (key) {\n      if (state[key] === undefined) {\n        keysToProcess.push(key);\n      }\n    });\n\n    // start the time iterator if not running (read: throttle)\n    if (timeIterator === null) {\n      timeIterator = setInterval(processNextKey, throttle);\n    }\n    lastState = state;\n  };\n  function processNextKey() {\n    if (keysToProcess.length === 0) {\n      if (timeIterator) clearInterval(timeIterator);\n      timeIterator = null;\n      return;\n    }\n    var key = keysToProcess.shift();\n    var endState = transforms.reduce(function (subState, transformer) {\n      return transformer.in(subState, key, lastState);\n    }, lastState[key]);\n    if (endState !== undefined) {\n      try {\n        stagedState[key] = serialize(endState);\n      } catch (err) {\n        console.error('redux-persist/createPersistoid: error serializing state', err);\n      }\n    } else {\n      //if the endState is undefined, no need to persist the existing serialized content\n      delete stagedState[key];\n    }\n    if (keysToProcess.length === 0) {\n      writeStagedState();\n    }\n  }\n  function writeStagedState() {\n    // cleanup any removed keys just before write.\n    Object.keys(stagedState).forEach(function (key) {\n      if (lastState[key] === undefined) {\n        delete stagedState[key];\n      }\n    });\n    writePromise = storage.setItem(storageKey, serialize(stagedState)).catch(onWriteFail);\n  }\n  function passWhitelistBlacklist(key) {\n    if (whitelist && whitelist.indexOf(key) === -1 && key !== '_persist') return false;\n    if (blacklist && blacklist.indexOf(key) !== -1) return false;\n    return true;\n  }\n  function onWriteFail(err) {\n    // @TODO add fail handlers (typically storage full)\n    if (err && process.env.NODE_ENV !== 'production') {\n      console.error('Error storing data', err);\n    }\n  }\n  var flush = function flush() {\n    while (keysToProcess.length !== 0) {\n      processNextKey();\n    }\n    return writePromise || Promise.resolve();\n  };\n\n  // return `persistoid`\n  return {\n    update: update,\n    flush: flush\n  };\n}\n\n// @NOTE in the future this may be exposed via config\nfunction defaultSerialize(data) {\n  return JSON.stringify(data);\n}","map":{"version":3,"names":["KEY_PREFIX","REHYDRATE","createPersistoid","config","blacklist","whitelist","transforms","throttle","storageKey","keyPrefix","undefined","key","storage","serialize","x","defaultSerialize","lastState","stagedState","keysToProcess","timeIterator","writePromise","update","state","Object","keys","forEach","passWhitelistBlacklist","indexOf","push","setInterval","processNextKey","length","clearInterval","shift","endState","reduce","subState","transformer","in","err","console","error","writeStagedState","setItem","catch","onWriteFail","process","env","NODE_ENV","flush","Promise","resolve","data","JSON","stringify"],"sources":["C:/Users/Admin/Desktop/LEARN REACTJS/Frontend-ReactJS-QuickStart/node_modules/redux-persist/es/createPersistoid.js"],"sourcesContent":["import { KEY_PREFIX, REHYDRATE } from './constants';\n\n// @TODO remove once flow < 0.63 support is no longer required.\n\nexport default function createPersistoid(config) {\n  // defaults\n  var blacklist = config.blacklist || null;\n  var whitelist = config.whitelist || null;\n  var transforms = config.transforms || [];\n  var throttle = config.throttle || 0;\n  var storageKey = '' + (config.keyPrefix !== undefined ? config.keyPrefix : KEY_PREFIX) + config.key;\n  var storage = config.storage;\n  var serialize = config.serialize === false ? function (x) {\n    return x;\n  } : defaultSerialize;\n\n  // initialize stateful values\n  var lastState = {};\n  var stagedState = {};\n  var keysToProcess = [];\n  var timeIterator = null;\n  var writePromise = null;\n\n  var update = function update(state) {\n    // add any changed keys to the queue\n    Object.keys(state).forEach(function (key) {\n      if (!passWhitelistBlacklist(key)) return; // is keyspace ignored? noop\n      if (lastState[key] === state[key]) return; // value unchanged? noop\n      if (keysToProcess.indexOf(key) !== -1) return; // is key already queued? noop\n      keysToProcess.push(key); // add key to queue\n    });\n\n    //if any key is missing in the new state which was present in the lastState,\n    //add it for processing too\n    Object.keys(lastState).forEach(function (key) {\n      if (state[key] === undefined) {\n        keysToProcess.push(key);\n      }\n    });\n\n    // start the time iterator if not running (read: throttle)\n    if (timeIterator === null) {\n      timeIterator = setInterval(processNextKey, throttle);\n    }\n\n    lastState = state;\n  };\n\n  function processNextKey() {\n    if (keysToProcess.length === 0) {\n      if (timeIterator) clearInterval(timeIterator);\n      timeIterator = null;\n      return;\n    }\n\n    var key = keysToProcess.shift();\n    var endState = transforms.reduce(function (subState, transformer) {\n      return transformer.in(subState, key, lastState);\n    }, lastState[key]);\n\n    if (endState !== undefined) {\n      try {\n        stagedState[key] = serialize(endState);\n      } catch (err) {\n        console.error('redux-persist/createPersistoid: error serializing state', err);\n      }\n    } else {\n      //if the endState is undefined, no need to persist the existing serialized content\n      delete stagedState[key];\n    }\n\n    if (keysToProcess.length === 0) {\n      writeStagedState();\n    }\n  }\n\n  function writeStagedState() {\n    // cleanup any removed keys just before write.\n    Object.keys(stagedState).forEach(function (key) {\n      if (lastState[key] === undefined) {\n        delete stagedState[key];\n      }\n    });\n\n    writePromise = storage.setItem(storageKey, serialize(stagedState)).catch(onWriteFail);\n  }\n\n  function passWhitelistBlacklist(key) {\n    if (whitelist && whitelist.indexOf(key) === -1 && key !== '_persist') return false;\n    if (blacklist && blacklist.indexOf(key) !== -1) return false;\n    return true;\n  }\n\n  function onWriteFail(err) {\n    // @TODO add fail handlers (typically storage full)\n    if (err && process.env.NODE_ENV !== 'production') {\n      console.error('Error storing data', err);\n    }\n  }\n\n  var flush = function flush() {\n    while (keysToProcess.length !== 0) {\n      processNextKey();\n    }\n    return writePromise || Promise.resolve();\n  };\n\n  // return `persistoid`\n  return {\n    update: update,\n    flush: flush\n  };\n}\n\n// @NOTE in the future this may be exposed via config\nfunction defaultSerialize(data) {\n  return JSON.stringify(data);\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}