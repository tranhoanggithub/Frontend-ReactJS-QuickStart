[{"C:\\Users\\Admin\\Desktop\\LEARN REACTJS\\Frontend-ReactJS-QuickStart\\src\\index.js":"1","C:\\Users\\Admin\\Desktop\\LEARN REACTJS\\Frontend-ReactJS-QuickStart\\src\\redux.js":"2","C:\\Users\\Admin\\Desktop\\LEARN REACTJS\\Frontend-ReactJS-QuickStart\\src\\serviceWorker.js":"3","C:\\Users\\Admin\\Desktop\\LEARN REACTJS\\Frontend-ReactJS-QuickStart\\src\\containers\\App.js":"4","C:\\Users\\Admin\\Desktop\\LEARN REACTJS\\Frontend-ReactJS-QuickStart\\src\\hoc\\IntlProviderWrapper.js":"5","C:\\Users\\Admin\\Desktop\\LEARN REACTJS\\Frontend-ReactJS-QuickStart\\src\\containers\\HomePage\\HomePage.js":"6","C:\\Users\\Admin\\Desktop\\LEARN REACTJS\\Frontend-ReactJS-QuickStart\\src\\hoc\\authentication.js":"7","C:\\Users\\Admin\\Desktop\\LEARN REACTJS\\Frontend-ReactJS-QuickStart\\src\\routes\\Home.js":"8","C:\\Users\\Admin\\Desktop\\LEARN REACTJS\\Frontend-ReactJS-QuickStart\\src\\routes\\System.js":"9","C:\\Users\\Admin\\Desktop\\LEARN REACTJS\\Frontend-ReactJS-QuickStart\\src\\containers\\Auth\\Login.js":"10","C:\\Users\\Admin\\Desktop\\LEARN REACTJS\\Frontend-ReactJS-QuickStart\\src\\components\\CustomToast.js":"11","C:\\Users\\Admin\\Desktop\\LEARN REACTJS\\Frontend-ReactJS-QuickStart\\src\\components\\CustomScrollbars.js":"12","C:\\Users\\Admin\\Desktop\\LEARN REACTJS\\Frontend-ReactJS-QuickStart\\src\\store\\reducers\\rootReducer.js":"13","C:\\Users\\Admin\\Desktop\\LEARN REACTJS\\Frontend-ReactJS-QuickStart\\src\\store\\actions\\actionTypes.js":"14","C:\\Users\\Admin\\Desktop\\LEARN REACTJS\\Frontend-ReactJS-QuickStart\\src\\containers\\HomePage\\HomeHeader.js":"15","C:\\Users\\Admin\\Desktop\\LEARN REACTJS\\Frontend-ReactJS-QuickStart\\src\\containers\\HomePage\\HomeFooter.js":"16","C:\\Users\\Admin\\Desktop\\LEARN REACTJS\\Frontend-ReactJS-QuickStart\\src\\utils\\index.js":"17","C:\\Users\\Admin\\Desktop\\LEARN REACTJS\\Frontend-ReactJS-QuickStart\\src\\containers\\HomePage\\Section\\MedicalFacility.js":"18","C:\\Users\\Admin\\Desktop\\LEARN REACTJS\\Frontend-ReactJS-QuickStart\\src\\containers\\HomePage\\Section\\Specialty.js":"19","C:\\Users\\Admin\\Desktop\\LEARN REACTJS\\Frontend-ReactJS-QuickStart\\src\\containers\\HomePage\\Section\\OutStandingDoctor.js":"20","C:\\Users\\Admin\\Desktop\\LEARN REACTJS\\Frontend-ReactJS-QuickStart\\src\\containers\\HomePage\\Section\\About.js":"21","C:\\Users\\Admin\\Desktop\\LEARN REACTJS\\Frontend-ReactJS-QuickStart\\src\\containers\\HomePage\\Section\\HandBook.js":"22","C:\\Users\\Admin\\Desktop\\LEARN REACTJS\\Frontend-ReactJS-QuickStart\\src\\containers\\System\\Admin\\UserRedux.js":"23","C:\\Users\\Admin\\Desktop\\LEARN REACTJS\\Frontend-ReactJS-QuickStart\\src\\containers\\System\\UserManage.js":"24","C:\\Users\\Admin\\Desktop\\LEARN REACTJS\\Frontend-ReactJS-QuickStart\\src\\containers\\Header\\Header.js":"25","C:\\Users\\Admin\\Desktop\\LEARN REACTJS\\Frontend-ReactJS-QuickStart\\src\\store\\reducers\\userReducer.js":"26","C:\\Users\\Admin\\Desktop\\LEARN REACTJS\\Frontend-ReactJS-QuickStart\\src\\store\\reducers\\appReducer.js":"27","C:\\Users\\Admin\\Desktop\\LEARN REACTJS\\Frontend-ReactJS-QuickStart\\src\\store\\reducers\\adminReducer.js":"28","C:\\Users\\Admin\\Desktop\\LEARN REACTJS\\Frontend-ReactJS-QuickStart\\src\\services\\userService.js":"29","C:\\Users\\Admin\\Desktop\\LEARN REACTJS\\Frontend-ReactJS-QuickStart\\src\\store\\actions\\index.js":"30","C:\\Users\\Admin\\Desktop\\LEARN REACTJS\\Frontend-ReactJS-QuickStart\\src\\utils\\constant.js":"31","C:\\Users\\Admin\\Desktop\\LEARN REACTJS\\Frontend-ReactJS-QuickStart\\src\\utils\\KeyCodeUtils.js":"32","C:\\Users\\Admin\\Desktop\\LEARN REACTJS\\Frontend-ReactJS-QuickStart\\src\\utils\\CommonUtils.js":"33","C:\\Users\\Admin\\Desktop\\LEARN REACTJS\\Frontend-ReactJS-QuickStart\\src\\utils\\ToastUtil.js":"34","C:\\Users\\Admin\\Desktop\\LEARN REACTJS\\Frontend-ReactJS-QuickStart\\src\\utils\\LanguageUtils.js":"35","C:\\Users\\Admin\\Desktop\\LEARN REACTJS\\Frontend-ReactJS-QuickStart\\src\\containers\\Header\\menuApp.js":"36","C:\\Users\\Admin\\Desktop\\LEARN REACTJS\\Frontend-ReactJS-QuickStart\\src\\axios.js":"37","C:\\Users\\Admin\\Desktop\\LEARN REACTJS\\Frontend-ReactJS-QuickStart\\src\\utils\\emitter.js":"38","C:\\Users\\Admin\\Desktop\\LEARN REACTJS\\Frontend-ReactJS-QuickStart\\src\\components\\Navigator.js":"39","C:\\Users\\Admin\\Desktop\\LEARN REACTJS\\Frontend-ReactJS-QuickStart\\src\\containers\\System\\ModalEditUser.js":"40","C:\\Users\\Admin\\Desktop\\LEARN REACTJS\\Frontend-ReactJS-QuickStart\\src\\containers\\System\\ModalUser.js":"41","C:\\Users\\Admin\\Desktop\\LEARN REACTJS\\Frontend-ReactJS-QuickStart\\src\\containers\\System\\Admin\\TableManageUser.js":"42","C:\\Users\\Admin\\Desktop\\LEARN REACTJS\\Frontend-ReactJS-QuickStart\\src\\store\\actions\\userActions.js":"43","C:\\Users\\Admin\\Desktop\\LEARN REACTJS\\Frontend-ReactJS-QuickStart\\src\\store\\actions\\appActions.js":"44","C:\\Users\\Admin\\Desktop\\LEARN REACTJS\\Frontend-ReactJS-QuickStart\\src\\store\\actions\\adminActions.js":"45"},{"size":926,"mtime":1694493850469,"results":"46","hashOfConfig":"47"},{"size":1514,"mtime":1704114055144,"results":"48","hashOfConfig":"47"},{"size":5086,"mtime":1694493850485,"results":"49","hashOfConfig":"47"},{"size":3608,"mtime":1705825916134,"results":"50","hashOfConfig":"47"},{"size":1095,"mtime":1694493850469,"results":"51","hashOfConfig":"47"},{"size":1546,"mtime":1706709051032,"results":"52","hashOfConfig":"47"},{"size":789,"mtime":1706154870587,"results":"53","hashOfConfig":"47"},{"size":638,"mtime":1704515825142,"results":"54","hashOfConfig":"47"},{"size":1605,"mtime":1704383557191,"results":"55","hashOfConfig":"47"},{"size":4221,"mtime":1706158901309,"results":"56","hashOfConfig":"47"},{"size":2282,"mtime":1694493850451,"results":"57","hashOfConfig":"47"},{"size":3173,"mtime":1702602282720,"results":"58","hashOfConfig":"47"},{"size":976,"mtime":1704708247843,"results":"59","hashOfConfig":"47"},{"size":1336,"mtime":1706509398031,"results":"60","hashOfConfig":"47"},{"size":5889,"mtime":1706171861445,"results":"61","hashOfConfig":"47"},{"size":1131,"mtime":1702816554557,"results":"62","hashOfConfig":"47"},{"size":249,"mtime":1694708316859,"results":"63","hashOfConfig":"47"},{"size":2279,"mtime":1704527600661,"results":"64","hashOfConfig":"47"},{"size":2666,"mtime":1706259590154,"results":"65","hashOfConfig":"47"},{"size":3520,"mtime":1706709173294,"results":"66","hashOfConfig":"47"},{"size":2149,"mtime":1702890141094,"results":"67","hashOfConfig":"47"},{"size":2616,"mtime":1702738025251,"results":"68","hashOfConfig":"47"},{"size":17283,"mtime":1706609065277,"results":"69","hashOfConfig":"47"},{"size":5657,"mtime":1706259466827,"results":"70","hashOfConfig":"47"},{"size":2193,"mtime":1704701458381,"results":"71","hashOfConfig":"47"},{"size":830,"mtime":1704697957667,"results":"72","hashOfConfig":"47"},{"size":1186,"mtime":1704877290022,"results":"73","hashOfConfig":"47"},{"size":2072,"mtime":1706631593665,"results":"74","hashOfConfig":"47"},{"size":1083,"mtime":1706353703669,"results":"75","hashOfConfig":"47"},{"size":91,"mtime":1705827159349,"results":"76","hashOfConfig":"47"},{"size":446,"mtime":1706154888644,"results":"77","hashOfConfig":"47"},{"size":684,"mtime":1694493850500,"results":"78","hashOfConfig":"47"},{"size":492,"mtime":1705985613016,"results":"79","hashOfConfig":"47"},{"size":3001,"mtime":1706524961355,"results":"80","hashOfConfig":"47"},{"size":961,"mtime":1694493850500,"results":"81","hashOfConfig":"47"},{"size":2067,"mtime":1704357472653,"results":"82","hashOfConfig":"47"},{"size":2324,"mtime":1706602229577,"results":"83","hashOfConfig":"47"},{"size":140,"mtime":1694493850500,"results":"84","hashOfConfig":"47"},{"size":9326,"mtime":1706252523689,"results":"85","hashOfConfig":"47"},{"size":4494,"mtime":1695023677443,"results":"86","hashOfConfig":"47"},{"size":4636,"mtime":1695023318167,"results":"87","hashOfConfig":"47"},{"size":3676,"mtime":1706761767342,"results":"88","hashOfConfig":"47"},{"size":414,"mtime":1694493850485,"results":"89","hashOfConfig":"47"},{"size":452,"mtime":1706171969845,"results":"90","hashOfConfig":"47"},{"size":6912,"mtime":1706700884649,"results":"91","hashOfConfig":"47"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"9d3dsv",{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"157","messages":"158","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"168","messages":"169","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"177","messages":"178","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"184","messages":"185","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Admin\\Desktop\\LEARN REACTJS\\Frontend-ReactJS-QuickStart\\src\\index.js",[],"C:\\Users\\Admin\\Desktop\\LEARN REACTJS\\Frontend-ReactJS-QuickStart\\src\\redux.js",[],"C:\\Users\\Admin\\Desktop\\LEARN REACTJS\\Frontend-ReactJS-QuickStart\\src\\serviceWorker.js",[],"C:\\Users\\Admin\\Desktop\\LEARN REACTJS\\Frontend-ReactJS-QuickStart\\src\\containers\\App.js",["199"],"import React, { Component, Fragment } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport { ConnectedRouter as Router } from 'connected-react-router';\r\nimport { history } from '../redux'\r\nimport { ToastContainer } from 'react-toastify';\r\nimport { userIsAuthenticated, userIsNotAuthenticated } from '../hoc/authentication';\r\nimport { path } from '../utils'\r\nimport Home from '../routes/Home';\r\nimport Login from './Auth/Login';\r\nimport System from '../routes/System';\r\n\r\nimport { CustomToastCloseButton } from '../components/CustomToast';\r\nimport HomePage from './HomePage/HomePage.js'\r\n// import ConfirmModal from '../components/ConfirmModal';\r\nimport CustomScrollbars from '../components/CustomScrollbars';\r\nclass App extends Component {\r\n\r\n    handlePersistorState = () => {\r\n        const { persistor } = this.props;\r\n        let { bootstrapped } = persistor.getState();\r\n        if (bootstrapped) {\r\n            if (this.props.onBeforeLift) {\r\n                Promise.resolve(this.props.onBeforeLift())\r\n                    .then(() => this.setState({ bootstrapped: true }))\r\n                    .catch(() => this.setState({ bootstrapped: true }));\r\n            } else {\r\n                this.setState({ bootstrapped: true });\r\n            }\r\n        }\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.handlePersistorState();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <Router history={history}>\r\n                    <div className=\"main-container\">\r\n                        {/* <ConfirmModal /> */}\r\n\r\n\r\n                        <div className=\"content-container\">\r\n                            <CustomScrollbars style={{ height: '100vh', with: '100%' }}>\r\n                                <Switch>\r\n                                    <Route path={path.HOME} exact component={(Home)} />\r\n                                    <Route path={path.LOGIN} component={userIsNotAuthenticated(Login)} />\r\n                                    <Route path={path.SYSTEM} component={userIsAuthenticated(System)} />\r\n                                    <Route path={path.HOMEPAGE} component={HomePage} />\r\n                                </Switch>\r\n                            </CustomScrollbars>\r\n                        </div>\r\n{/* \r\n                        <ToastContainer\r\n                            className=\"toast-container\" toastClassName=\"toast-item\" bodyClassName=\"toast-item-body\"\r\n                            autoClose={false} hideProgressBar={true} pauseOnHover={false}\r\n                            pauseOnFocusLoss={true} closeOnClick={false} draggable={false}\r\n                            closeButton={<CustomToastCloseButton />}\r\n                        /> */}\r\n                        <ToastContainer\r\n                            position=\"bottom-right\"\r\n                            autoClose={5000}\r\n                            hideProgressBar={false}\r\n                            newestOnTop={false}\r\n                            closeOnClick\r\n                            rtl={false}\r\n                            pauseOnFocusLoss\r\n                            draggable\r\n                            pauseOnHover\r\n/>\r\n                    </div>\r\n                </Router>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        started: state.app.started,\r\n        isLoggedIn: state.user.isLoggedln\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","C:\\Users\\Admin\\Desktop\\LEARN REACTJS\\Frontend-ReactJS-QuickStart\\src\\hoc\\IntlProviderWrapper.js",[],"C:\\Users\\Admin\\Desktop\\LEARN REACTJS\\Frontend-ReactJS-QuickStart\\src\\containers\\HomePage\\HomePage.js",[],"C:\\Users\\Admin\\Desktop\\LEARN REACTJS\\Frontend-ReactJS-QuickStart\\src\\hoc\\authentication.js",[],"C:\\Users\\Admin\\Desktop\\LEARN REACTJS\\Frontend-ReactJS-QuickStart\\src\\routes\\Home.js",[],"C:\\Users\\Admin\\Desktop\\LEARN REACTJS\\Frontend-ReactJS-QuickStart\\src\\routes\\System.js",[],"C:\\Users\\Admin\\Desktop\\LEARN REACTJS\\Frontend-ReactJS-QuickStart\\src\\containers\\Auth\\Login.js",["200"],"import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { push } from \"connected-react-router\";\r\n\r\nimport * as actions from \"../../store/actions\";\r\nimport \"./Login.scss\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport { handleLoginApi } from \"../../services/userService\";\r\n\r\n\r\n\r\nclass Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      username: \"\",\r\n      password: \"\",\r\n      isShowPassword: false ,\r\n      errMessage:''\r\n    }\r\n  }\r\n  handleOnChangeUsername = (event) => {\r\n    this.setState({ username: event.target.value });\r\n  };\r\n  handleOnChangePassword = (event) => {\r\n    this.setState({ password: event.target.value });\r\n  };\r\n  handleLogin = async () => {\r\n\r\n      this.setState({ \r\n        errMessage:''\r\n      });\r\n      try{\r\n        let data = await handleLoginApi(this.state.username,this.state.password);\r\n        if(data && data.errCode !== 0){\r\n          this.setState({\r\n            errMessage:data.message\r\n          })\r\n        }\r\n        if(data && data.errCode ===0){\r\n          this.props.userLoginSuccess(data.user)\r\n          console.log('login succeeds')\r\n        }\r\n      }catch(error){\r\n        if(error.response){\r\n          if(error.response.data){\r\n            this.setState({\r\n              errorMessage: error.response.data.message\r\n            })\r\n          }\r\n\r\n        }\r\n\r\n\r\n      }\r\n  };\r\n  handleShowHidePassword=()=>{\r\n    this.setState({\r\n      isShowPassword: !this.state.isShowPassword\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"login-background\">\r\n        <div className=\"login-container\">\r\n          <div className=\"login-content\">\r\n            <div>Login</div>\r\n            <div className=\"col-12 text-login\">Login</div>\r\n            <div className=\"col-12 form-group login-input\">\r\n              <label>Username:</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                placeholder=\"Enter your username\"\r\n                value={this.state.username}\r\n                onChange={(e) => this.handleOnChangeUsername(e)}\r\n              />\r\n            </div>\r\n            <div className=\"col-12 form-group login-input\">\r\n              <label>Password:</label>\r\n              <div className=\"custom-input-password\">\r\n                <input\r\n                  className=\"form-control\"\r\n                  type={this.state.isShowPassword ? \"text\" : \"password\"}\r\n                  placeholder=\"Enter your password\"\r\n                  onChange={(event) => {\r\n                    this.handleOnChangePassword(event);\r\n                  }}\r\n                />\r\n                <span onClick={()=>{this.handleShowHidePassword()}}><i className={this.state.isShowPassword?'far fa-eye' : 'far fa-eye-slash'}></i></span>\r\n\r\n              </div>\r\n            </div>\r\n            <div className=\"col-12\" style={{color:'red'}}>\r\n                  {this.state.errMessage}\r\n            </div>\r\n            <div className=\"col-12 \">\r\n              <button\r\n                className=\"btn-login\"\r\n                onClick={() => {\r\n                  this.handleLogin();\r\n                }}\r\n              >\r\n                Login\r\n              </button>\r\n            </div>\r\n\r\n            <div className=\"forgot-password\">\r\n              <span>Forgot your password</span>\r\n            </div>\r\n            <div className=\"col-12 text-center mt-3\">\r\n              <span className=\"text-other login\">Or login with:</span>\r\n            </div>\r\n            <div className=\"col-12 social-login\">\r\n              <i className=\"fab fa-google-plus-g google\"></i>\r\n              <i class=\"fab fa-facebook-f facebook\"></i>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    language: state.app.language,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    navigate: (path) => dispatch(push(path)),\r\n    // userLoginFail: () => dispatch(actions.adminLoginFail()),\r\n    userLoginSuccess:(userInfor) => dispatch(actions.userLoginSuccess(userInfor))\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\r\n","C:\\Users\\Admin\\Desktop\\LEARN REACTJS\\Frontend-ReactJS-QuickStart\\src\\components\\CustomToast.js",[],"C:\\Users\\Admin\\Desktop\\LEARN REACTJS\\Frontend-ReactJS-QuickStart\\src\\components\\CustomScrollbars.js",[],"C:\\Users\\Admin\\Desktop\\LEARN REACTJS\\Frontend-ReactJS-QuickStart\\src\\store\\reducers\\rootReducer.js",["201"],"import { combineReducers } from 'redux';\r\nimport { connectRouter } from 'connected-react-router';\r\nimport appReducer from \"./appReducer\";\r\nimport userReducer from \"./userReducer\"; \r\nimport adminReducer from \"./adminReducer\";   \r\nimport autoMergeLevel2 from 'redux-persist/lib/stateReconciler/autoMergeLevel2';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport { persistReducer } from 'redux-persist';\r\n\r\nconst persistCommonConfig = {\r\n    storage: storage,\r\n    stateReconciler: autoMergeLevel2,\r\n};\r\n\r\n\r\n\r\nconst userPersistConfig = {\r\n    ...persistCommonConfig,\r\n    key: 'user',\r\n    whitelist: ['isLoggedIn', 'userInfo']\r\n};\r\n\r\nconst appPersistConfig = {\r\n    ...persistCommonConfig,\r\n    key: 'app',\r\n    whitelist: ['language']\r\n\r\n}\r\n\r\nexport default (history) => combineReducers({\r\n    router: connectRouter(history),\r\n    user: persistReducer(userPersistConfig, userReducer),\r\n    app: persistReducer(appPersistConfig, appReducer),\r\n    admin: adminReducer\r\n})","C:\\Users\\Admin\\Desktop\\LEARN REACTJS\\Frontend-ReactJS-QuickStart\\src\\store\\actions\\actionTypes.js",[],"C:\\Users\\Admin\\Desktop\\LEARN REACTJS\\Frontend-ReactJS-QuickStart\\src\\containers\\HomePage\\HomeHeader.js",["202"],"import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport './HomeHeader.scss';\r\nimport logo from '../../assets/logo.svg'\r\nimport { FormattedMessage } from 'react-intl';\r\nimport {LANGUAGES} from \"../../utils\";\r\n\r\nimport {changeLanguageApp} from \"../../store/actions\"\r\n\r\nclass HomeHeader extends Component {\r\n\r\n    changeLanguage = (language) => {\r\n        this.props.changeLanguageAppRedux(language)\r\n    }\r\n\r\n    render() {\r\n        let language = this.props.language;\r\n        console.log('check props', language)\r\n\r\n        return (\r\n            <React.Fragment>\r\n            <div className='home-header-container'>\r\n                <div className=\"home-header-content\">\r\n                    <div className=\"left-content\">\r\n                        <i class = \"fas fa-bars\"></i>\r\n                        <img className=\"header-logo\" src={logo}/>\r\n                    </div>\r\n                    <div className=\"center-content\">\r\n                        <div className=\"child-content\">\r\n                            <div><b><FormattedMessage id=\"homeheader.searchdoctor\"/></b></div>\r\n                            <div className='subs-title'><FormattedMessage id=\"homeheader.speciality\"/></div>\r\n                        </div>\r\n                        <div className=\"child-content\">\r\n                            <div><b><FormattedMessage id =\"homeheader.health-facility\"/></b></div>\r\n                            <div className=\"subs-title\"><FormattedMessage id=\"homeheader.select-room\"/></div>\r\n                        </div>\r\n                        <div className=\"child-content\">\r\n                            <div><b><FormattedMessage id=\"homeheader.doctor\"/></b></div>\r\n                            <div className=\"subs-title\"><FormattedMessage id=\"homeheader.select-doctor\"/>\"</div>\r\n                        </div>\r\n                        <div className=\"child-content\">\r\n                            <div><b><FormattedMessage id=\"homeheader.fee\"/></b></div>\r\n                            <div className=\"subs-title\"><FormattedMessage id=\"homeheader.check-health\"/></div>\r\n                        </div>\r\n\r\n\r\n                    </div>\r\n                    <div className=\"right-content\">\r\n                        <div className=\"support\"><i className=\"fas fa-question-circle\"></i>\r\n                            <FormattedMessage id = \"homeheader.support\"/>\r\n                        </div>\r\n                        <div className={language === LANGUAGES.VI ? \"language-vi active\":\"language-vi\"}><span onClick={()=>this.changeLanguage(LANGUAGES.VI)}>VN</span></div>\r\n                        <div className={language === LANGUAGES.EN ? \"language-en active\":\"language-en\"}><span onClick={()=>this.changeLanguage(LANGUAGES.EN)}>EN</span></div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"home-header-banner\">\r\n                    <div className=\"content-up\">\r\n                    <div className=\"title1\"><FormattedMessage id =\"banner.title1\"/></div>\r\n                    <div className=\"title2\"><FormattedMessage id =\"banner.title2\"/></div>\r\n                    <div className=\"search\">\r\n                        <i class = \"fas fa-search\"></i>\r\n                        <input type=\"text\" placeholder=\"Tìm chuyên khoa khám bệnh\" />\r\n                    </div>\r\n                    </div>\r\n                    <div className=\"content-down\">\r\n                        <div className=\"options\">\r\n                            <div className=\"option-child\">\r\n                                <div className=\"icon-child\"><i className=\"far fa-hospital\"></i></div>\r\n                                <div className=\"text-child\"><FormattedMessage id =\"banner.child1\"/></div>\r\n                            </div>\r\n                            <div className=\"option-child\">\r\n                                <div className=\"icon-child\"><i className=\"fas fa-mobile-alt\"></i></div>\r\n                                <div className=\"text-child\"><FormattedMessage id =\"banner.child2\"/></div>\r\n                            </div>\r\n                            <div className=\"option-child\">\r\n                                <div className=\"icon-child\"><i className=\"fas fa-procedures\"></i></div>\r\n                                <div className=\"text-child\"><FormattedMessage id =\"banner.child3\"/></div>\r\n                            </div>\r\n                            <div className=\"option-child\">\r\n                                <div className=\"icon-child\"><i className=\"fas fa-flask\"></i></div>\r\n                                <div className=\"text-child\"><FormattedMessage id =\"banner.child4\"/></div>\r\n                            </div>\r\n                            <div className=\"option-child\">\r\n                                <div className=\"icon-child\"><i className=\"fas fa-user-md\"></i></div>\r\n                                <div className=\"text-child\"><FormattedMessage id =\"banner.child5\"/></div>\r\n                            </div>\r\n                            <div className=\"option-child\">\r\n                                <div className=\"icon-child\"><i className=\"fas fa-briefcase-medical\"></i></div>\r\n                                <div className=\"text-child\"><FormattedMessage id =\"banner.child6\"/></div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isLoggedIn: state.user.isLoggedIn,\r\n        userInfo: state.user.userInfo,\r\n        language: state.app.language,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        changeLanguageAppRedux: (language) => dispatch(changeLanguageApp(language))\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HomeHeader);\r\n","C:\\Users\\Admin\\Desktop\\LEARN REACTJS\\Frontend-ReactJS-QuickStart\\src\\containers\\HomePage\\HomeFooter.js",["203"],"import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { FormattedMessage } from 'react-intl';\r\n\r\n\r\n\r\n// import specialtyImg from \"../../../assets/HomeFooter/co-xuong-khop.jpg\"\r\n\r\n\r\n\r\n\r\n\r\nclass HomeFooter extends Component {\r\n\r\n\r\n \r\n    render() {\r\n\r\n\r\n        // let settings = {\r\n        //     dots: true,\r\n        //     infinite: true,\r\n        //     speed: 500,\r\n        //     slidesToShow: 4,\r\n        //     slidesToScroll: 1,\r\n        //   };\r\n        // let settings = this.props.settings;\r\n        return (\r\n            <div className=\"home-footer\">\r\n                <p>&copy; 2023 Tran Hoang More information , please visit my youtube channel . <a href=\"https://www.youtube.com/watch?v=DXT9dF-WK-I&t=3599s\"> &#8594;Click here &#8592;</a></p>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isLoggedIn: state.user.isLoggedIn,\r\n        language: state.app.language,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HomeFooter);\r\n","C:\\Users\\Admin\\Desktop\\LEARN REACTJS\\Frontend-ReactJS-QuickStart\\src\\utils\\index.js",[],"C:\\Users\\Admin\\Desktop\\LEARN REACTJS\\Frontend-ReactJS-QuickStart\\src\\containers\\HomePage\\Section\\MedicalFacility.js",["204"],"import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport './MedicalFacility.scss';\r\nimport { FormattedMessage } from 'react-intl';\r\n\r\nimport Slider from \"react-slick\";\r\n\r\n\r\n\r\n\r\nclass   MedicalFacility extends Component {\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"section-share section-medical-facility\">\r\n            <div className=\"section-container\">\r\n                <div className=\"section-header\">\r\n                    <span className=\"title-section\">Cơ sở y tế nổi bật</span>\r\n                    <button className=\"btn-section\">xem thêm</button>\r\n                </div>\r\n                <div className=\"section-body\">\r\n                <Slider {...this.props.settings}>\r\n            <div className=\"section-customize\">\r\n                <div className=\"bg-image section-medical-facility\"/>\r\n                <div>Hệ thống Y Tế Thu Cúc 1</div>\r\n            </div>\r\n            <div className=\"section-customize\">\r\n            <div className=\"bg-image section-medical-facility\"/>\r\n                <div>Hệ thống Y Tế Thu Cúc 2</div>\r\n            </div>\r\n            <div className=\"section-customize\">\r\n            <div className=\"bg-image section-medical-facility\"/>\r\n                <div>Hệ thống Y Tế Thu Cúc 3</div>\r\n            </div>\r\n            <div className=\"section-customize\">\r\n            <div className=\"bg-image section-medical-facility\"/>\r\n                <div>Hệ thống Y Tế Thu Cúc 4</div>\r\n            </div>\r\n            <div className=\"section-customize\">\r\n            <div className=\"bg-image section-medical-facility\"/>\r\n                <div>Hệ thống Y Tế Thu Cúc 1</div>\r\n            </div>\r\n            <div className=\"section-customize\">\r\n            <div className=\"bg-image section-medical-facility\"/>\r\n                <div>Hệ thống Y Tế Thu Cúc 5</div>\r\n            </div>  \r\n            </Slider>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isLoggedIn: state.user.isLoggedIn\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MedicalFacility)","C:\\Users\\Admin\\Desktop\\LEARN REACTJS\\Frontend-ReactJS-QuickStart\\src\\containers\\HomePage\\Section\\Specialty.js",["205","206"],"import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport './Specialty.scss';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport Slider from \"react-slick\";\r\n\r\n\r\nimport specialtyImg from \"../../../assets/specialty/co-xuong-khop.jpg\"\r\n\r\n\r\n\r\n\r\n\r\nclass Specialty extends Component {\r\n\r\n\r\n \r\n    render() {\r\n\r\n\r\n        // let settings = {\r\n        //     dots: true,\r\n        //     infinite: true,\r\n        //     speed: 500,\r\n        //     slidesToShow: 4,\r\n        //     slidesToScroll: 1,\r\n        //   };\r\n        // let settings = this.props.settings;\r\n        return (\r\n            <div className=\"section-share section-specialty\">\r\n                <div className=\"section-container\">\r\n                    <div className=\"section-header\">\r\n                        <span className=\"title-section\">Chuyên khoa phổ biến</span>\r\n                        <button className=\"btn-section\">xem thêm</button>\r\n                    </div>\r\n                    <div className=\"section-body\">\r\n                    <Slider {...this.props.settings}>\r\n                <div className=\"section-customize\">\r\n                    <div className=\"bg-image section-specialty\"/>\r\n                    <div>Cơ xương khớp 1</div>\r\n                </div>\r\n                <div className=\"section-customize\">\r\n                <div className=\"bg-image section-specialty\"/>\r\n                    <div>Cơ xương khớp 2</div>\r\n                </div>\r\n                <div className=\"section-customize\">\r\n                <div className=\"bg-image section-specialty\"/>\r\n                    <div>Cơ xương khớp 3</div>\r\n                </div>\r\n                <div className=\"section-customize\">\r\n                <div className=\"bg-image section-specialty\"/>\r\n                    <div>Cơ xương khớp 4</div>\r\n                </div>\r\n                <div className=\"section-customize\">\r\n                <div className=\"bg-image section-specialty\"/>\r\n                    <div>Cơ xương khớp 5</div>\r\n                </div>\r\n                <div className=\"section-customize\">\r\n                <div className=\"bg-image section-specialty\"/>\r\n                    <div>Cơ xương khớp 6</div>\r\n                </div>  \r\n                </Slider>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isLoggedIn: state.user.isLoggedIn,\r\n        language: state.app.language,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Specialty);\r\n","C:\\Users\\Admin\\Desktop\\LEARN REACTJS\\Frontend-ReactJS-QuickStart\\src\\containers\\HomePage\\Section\\OutStandingDoctor.js",[],"C:\\Users\\Admin\\Desktop\\LEARN REACTJS\\Frontend-ReactJS-QuickStart\\src\\containers\\HomePage\\Section\\About.js",["207"],"import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { FormattedMessage } from 'react-intl';\r\n\r\n\r\n\r\n// import specialtyImg from \"../../../assets/About/co-xuong-khop.jpg\"\r\n\r\n\r\n\r\n\r\n\r\nclass About extends Component {\r\n\r\n\r\n \r\n    render() {\r\n\r\n\r\n        // let settings = {\r\n        //     dots: true,\r\n        //     infinite: true,\r\n        //     speed: 500,\r\n        //     slidesToShow: 4,\r\n        //     slidesToScroll: 1,\r\n        //   };\r\n        // let settings = this.props.settings;\r\n        return (\r\n            <div className=\"section-share section-about\">\r\n                <div className='section-about-header'>\r\n                    Truyen thong noi ve chanel Hoi Dan IT\r\n                </div>\r\n                <div className=\"section-about-content\">\r\n                    <div className=\"content-left\">\r\n                        <iframe width=\"60%\" height=\"400px\"\r\n                        src=\"https://www.youtube.com/watch?v=Y21pGtZiVIs\"\r\n                        title='Youtube video player'\r\n                        frameborder=\"0\"\r\n                        allow=\"accelerometer ; autoplay; clipboard-write; encrypted-media; gyroscope\"                        \r\n                        allowfullscreen>\r\n\r\n                        </iframe>\r\n                    </div>\r\n                    <div className=\"content-right\">\r\n                        <p>\r\n                        Trong video này, chúng ta sẽ hoàn tất việc design giao diện theo trang bookingcare.vn. Chúng ta sẽ hoàn thiện những phần đang còn dang dở, để từ video tiếp theo, chúng ta sẽ bắt đầu làm về backend và react để tạo dữ liệu thật cho trang home design này.\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isLoggedIn: state.user.isLoggedIn,\r\n        language: state.app.language,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(About);\r\n","C:\\Users\\Admin\\Desktop\\LEARN REACTJS\\Frontend-ReactJS-QuickStart\\src\\containers\\HomePage\\Section\\HandBook.js",["208"],"import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport Slider from \"react-slick\";\r\n\r\n\r\n// import specialtyImg from \"../../../assets/HandBook/co-xuong-khop.jpg\"\r\n\r\n\r\n\r\n\r\n\r\nclass HandBook extends Component {\r\n\r\n\r\n \r\n    render() {\r\n\r\n\r\n        // let settings = {\r\n        //     dots: true,\r\n        //     infinite: true,\r\n        //     speed: 500,\r\n        //     slidesToShow: 4,\r\n        //     slidesToScroll: 1,\r\n        //   };\r\n        // let settings = this.props.settings;\r\n        return (\r\n            <div className=\"section-share section-handbook\">\r\n                <div className=\"section-container\">\r\n                    <div className=\"section-header\">\r\n                        <span className=\"title-section\">Cẩm nang</span>\r\n                        <button className=\"btn-section\">xem thêm</button>\r\n                    </div>\r\n                    <div className=\"section-body\">\r\n                    <Slider {...this.props.settings}>\r\n                <div className=\"section-customize\">\r\n                    <div className=\"bg-image section-handbook\"/>\r\n                    <div>Cơ xương khớp 1</div>\r\n                </div>\r\n                <div className=\"section-customize\">\r\n                <div className=\"bg-image section-handbook\"/>\r\n                    <div>Cơ xương khớp 2</div>\r\n                </div>\r\n                <div className=\"section-customize\">\r\n                <div className=\"bg-image section-handbook\"/>\r\n                    <div>Cơ xương khớp 3</div>\r\n                </div>\r\n                <div className=\"section-customize\">\r\n                <div className=\"bg-image section-handbook\"/>\r\n                    <div>Cơ xương khớp 4</div>\r\n                </div>\r\n                <div className=\"section-customize\">\r\n                <div className=\"bg-image section-handbook\"/>\r\n                    <div>Cơ xương khớp 5</div>\r\n                </div>\r\n                <div className=\"section-customize\">\r\n                <div className=\"bg-image section-handbook\"/>\r\n                    <div>Cơ xương khớp 6</div>\r\n                </div>  \r\n                </Slider>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isLoggedIn: state.user.isLoggedIn,\r\n        language: state.app.language,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HandBook);\r\n","C:\\Users\\Admin\\Desktop\\LEARN REACTJS\\Frontend-ReactJS-QuickStart\\src\\containers\\System\\Admin\\UserRedux.js",["209","210","211"],"import React, { Component } from 'react';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport { connect } from 'react-redux';\r\nimport { getAllCodeService } from '../../../services/userService';\r\nimport { LANGUAGES, CRUD_ACTIONS, CommonUtils } from \"../../../utils\";\r\nimport * as actions from \"../../../store/actions\"\r\nimport './UserRedux.scss'\r\nimport Lightbox from 'react-image-lightbox';\r\nimport 'react-image-lightbox/style.css';\r\nimport TableManageUser from './TableManageUser';\r\nclass UserRedux extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            genderArr: [],\r\n            positionArr: [],\r\n            roleArr: [],\r\n            previewImgURL: '',\r\n            isOpen: false,\r\n\r\n            isUserCreated: false,\r\n\r\n            email: '',\r\n            password: '',\r\n            firstName: '',\r\n            lastName: '',\r\n            phoneNumber: '',\r\n            address: '',\r\n            gender: '',\r\n            position: '',\r\n            role: '',\r\n            avatar: '',\r\n            action: '',\r\n            userEditId: '',\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        this.props.getGenderStart();\r\n        this.props.getPositionStart();\r\n        this.props.getRoleStart();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        console.log('prevProps UserRedux la', prevProps)\r\n        //render => didupdate\r\n        //hiện tại và quá khứ\r\n        if (prevProps.genderRedux !== this.props.genderRedux) {\r\n            let arrGenders = this.props.genderRedux;\r\n            this.setState({\r\n                genderArr: arrGenders,\r\n                gender: arrGenders && arrGenders.length > 0 ? arrGenders[0].keyMap : ''\r\n            })\r\n        }\r\n        if (prevProps.roleRedux !== this.props.roleRedux) {\r\n            let arrRoles = this.props.roleRedux;\r\n\r\n\r\n\r\n            this.setState({\r\n                roleArr: arrRoles,\r\n                role: arrRoles && arrRoles.length > 0 ? arrRoles[0].keyMap : ''\r\n            })\r\n\r\n\r\n\r\n        }\r\n        if (prevProps.positionRedux !== this.props.positionRedux) {\r\n            let arrPositions = this.props.positionRedux;\r\n            this.setState({\r\n                positionArr: arrPositions,\r\n                position: arrPositions && arrPositions.length > 0 ? arrPositions[0].keyMap : ''\r\n            })\r\n        }\r\n        if (prevProps.listUsers !== this.props.listUsers) {\r\n            let arrGenders = this.props.genderRedux;\r\n            let arrRoles = this.props.roleRedux;\r\n            let arrPositions = this.props.positionRedux;\r\n            this.setState({\r\n                email: '',\r\n                password: '',\r\n                firstName: '',\r\n                lastName: '',\r\n                phoneNumber: '',\r\n                address: '',\r\n                gender: arrGenders && arrGenders.length > 0 ? arrGenders[0].keyMap : '',\r\n                role: arrRoles && arrRoles.length > 0 ? arrRoles[0].keyMap : '',\r\n                position: arrPositions && arrPositions.length > 0 ? arrPositions[0].keyMap : '',\r\n                avatar: '',\r\n                action: CRUD_ACTIONS.CREATE,\r\n                previewImgURL :''  \r\n            })\r\n        }\r\n    }\r\n\r\n    handleOnchangeImage = async (event) => {\r\n        let data = event.target.files;\r\n        let file = data[0];\r\n        if (file) {\r\n            let base64 = await CommonUtils.getBase64(file);\r\n            console.log('chuoi text base64 Image la ', base64)\r\n            let objectUrl = URL.createObjectURL(file);\r\n            this.setState({\r\n                previewImgURL: objectUrl,\r\n                avatar: base64\r\n            })\r\n        }\r\n\r\n    }\r\n    openPreviewImage = () => {\r\n        if (!this.state.previewImgURL) return;\r\n        this.setState({\r\n            isOpen: true\r\n        })\r\n    }\r\n    handleSaveUser = () => {\r\n        let isValid = this.checkValidateInput();\r\n        if (isValid === false) return;\r\n\r\n        // this.setState({\r\n        //     ...this.state,\r\n        //     isUserCreated: false\r\n        // })\r\n        let { action } = this.state;\r\n        if (action === CRUD_ACTIONS.CREATE) {\r\n            //fire redux action\r\n            this.props.createNewUser({\r\n                email: this.state.email,\r\n                password: this.state.password,\r\n                firstName: this.state.firstName,\r\n                lastName: this.state.lastName,\r\n                address: this.state.address,\r\n                phonenumber: this.state.phoneNumber,\r\n                gender: this.state.gender,\r\n                roleId: this.state.role,\r\n                positionId: this.state.position,\r\n                avatar: this.state.avatar\r\n                // avatar: '',  \r\n                // action: CRUD_ACTIONS.EDIT,\r\n            })\r\n\r\n        }\r\n        if (action === CRUD_ACTIONS.EDIT) {\r\n            this.props.editAUserRedux({\r\n                id: this.state.userEditId,\r\n                email: this.state.email,\r\n                password: this.state.password,\r\n                firstName: this.state.firstName,\r\n                lastName: this.state.lastName,\r\n                address: this.state.address,\r\n                phonenumber: this.state.phoneNumber,\r\n                gender: this.state.gender,\r\n                roleId: this.state.role,\r\n                positionId: this.state.position,    \r\n                avatar: this.state.avatar\r\n                // action: CRUD_ACTIONS.CREATE,\r\n\r\n                // avatar: this.state.avatar\r\n                // action: CRUD_ACTIONS.EDIT,\r\n            })\r\n            //fire redux edit user\r\n        }\r\n        // this.props.fetchUserRedux();\r\n        // setTimeout(()=>{\r\n        //     this.props.fetchUserRedux();\r\n        // },1000)\r\n        // this.props.fetchUserRedux()\r\n    }\r\n\r\n    checkValidateInput = () => {\r\n        let isValid = true;\r\n        let arrCheck = ['email', 'password', 'firstName', 'lastName', 'phoneNumber', 'address']\r\n        for (let i = 0; i < arrCheck.length; i++) {\r\n            if (!this.state[arrCheck[i]]) {\r\n                isValid = false;\r\n                break;\r\n            }\r\n        }\r\n\r\n        return isValid;\r\n    }\r\n    onChangeInput = (event, id) => {\r\n        let copyState = { ...this.state }\r\n        copyState[id] = event.target.value;\r\n        this.setState({\r\n            ...copyState\r\n        })\r\n    }\r\n\r\n    handleEditUserFromParent = (user) => {\r\n        let imageBase64 = '';\r\n        if (user.image) {\r\n            imageBase64 = new Buffer(user.image, 'base64').toString('binary');\r\n        }\r\n        this.setState({\r\n            email: user.email,\r\n            password: 'HARDCODE',\r\n            firstName: user.firstName,\r\n            lastName: user.lastName,\r\n            phoneNumber: user.phonenumber,\r\n            address: user.address,\r\n            gender: user.gender,\r\n            role: user.roleId,\r\n            position: user.positionId,\r\n            avatar: '',\r\n            previewImgURL: imageBase64,\r\n            action: CRUD_ACTIONS.EDIT,\r\n            userEditId: user.id\r\n        })\r\n    }\r\n    render() {\r\n        let genders = this.state.genderArr;\r\n        let roles = this.state.roleArr;\r\n        let position = this.state.positionArr;\r\n        let language = this.props.language;\r\n        let isGetGenders = this.props.isLoadingGender;\r\n        console.log('hoidanit check props from redux ', this.state)\r\n\r\n        let { email, password, firstName, lastName, phoneNumber, address, gender, positioninput, role, avatar } = this.state\r\n        return (\r\n            <div className=\"user-redux-container\">\r\n                <div className='title'>\r\n                    User Redux hoi dan it\r\n                </div>\r\n                <div>{isGetGenders === true ? 'Loading genders' : ''}</div>\r\n                <div className=\"user-redux-body\" >\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12 my-3\"><FormattedMessage id=\"manage-user.add\" /></div>\r\n                            <div className=\"col-12\">{isGetGenders === true ? 'Loading genders' : ''}</div>\r\n                            <div className=\"col-3\">\r\n                                <label><FormattedMessage id=\"manage-user.email\" /></label>\r\n                                <input className=\"form-control\" type=\"email\"\r\n                                    value={email}\r\n                                    onChange={(event) => { this.onChangeInput(event, 'email') }}\r\n                                    disabled={this.state.action === CRUD_ACTIONS.EDIT ? true : false}\r\n                                />\r\n                            </div>\r\n                            <div className=\"col-3\">\r\n                                <label><FormattedMessage id=\"manage-user.password\" /></label>\r\n                                <input className=\"form-control\" type=\"password\"\r\n                                    value={password}\r\n                                    onChange={(event) => { this.onChangeInput(event, 'password') }}\r\n                                    disabled={this.state.action === CRUD_ACTIONS.EDIT ? true : false}\r\n                                />\r\n                            </div>\r\n                            <div className=\"col-3\">\r\n                                <label><FormattedMessage id=\"manage-user.first-name\" /></label>\r\n                                <input className=\"form-control\" type=\"text\"\r\n                                    value={firstName}\r\n                                    onChange={(event) => { this.onChangeInput(event, 'firstName') }} />\r\n                            </div>\r\n                            <div className=\"col-3\">\r\n                                <label><FormattedMessage id=\"manage-user.last-name\" /></label>\r\n                                <input className=\"form-control\" type=\"text\"\r\n                                    value={lastName}\r\n                                    onChange={(event) => { this.onChangeInput(event, 'lastName') }}\r\n                                />\r\n                            </div>\r\n                            <div className=\"col-3\">\r\n                                <label><FormattedMessage id=\"manage-user.phone-number\" /></label>\r\n                                <input className=\"form-control\" type=\"text\"\r\n                                    value={phoneNumber}\r\n                                    onChange={(event) => { this.onChangeInput(event, 'phoneNumber') }} />\r\n                            </div>\r\n                            <div className=\"col-9\">\r\n                                <label><FormattedMessage id=\"manage-user.address\" /></label>\r\n                                <input className=\"form-control\" type=\"text\"\r\n                                    value={address}\r\n                                    onChange={(event) => { this.onChangeInput(event, 'address') }} />\r\n                            </div>\r\n                            <div className=\"col-9\">\r\n                                <label><FormattedMessage id=\"manage-user.gender\" /></label>\r\n                                <select className=\"form-control\"\r\n                                    onChange={(event) => { this.onChangeInput(event, 'gender') }}\r\n                                    value={gender}\r\n                                >\r\n                                    {genders && genders.length > 0 &&\r\n                                        genders.map((item, index) => {\r\n                                            return (\r\n                                                <option key={index} value={item.keyMap}>{language === LANGUAGES.VI ? item.valueVi : item.valueEn}</option>\r\n                                            )\r\n                                        })\r\n                                    }\r\n                                </select>\r\n                                <input className=\"form-control\" type=\"text\" />\r\n                            </div>\r\n                            <div className=\"col-3\">\r\n                                <label><FormattedMessage id=\"manage-user.position\" /></label>\r\n                                <select class=\"form-control\"\r\n                                    value={position}\r\n                                    onChange={(event) => { this.onChangeInput(event, 'position') }}>\r\n                                    {position && position.length > 0\r\n                                        && position.map((item, index) => {\r\n                                            return (\r\n                                                <option key={index} value={item.keyMap}>{language === LANGUAGES.VI ? item.valueVi : item.valueEn}</option>\r\n                                            )\r\n                                        })}\r\n                                </select>\r\n                            </div>\r\n                            <div className=\"col-3\">\r\n                                <label><FormattedMessage id=\"manage-user.role\" /></label>\r\n                                <select class=\"form-control\"\r\n                                    onChange={(event) => { this.onChangeInput(event, 'role') }}\r\n                                    value={role}\r\n                                >\r\n                                    {roles && roles.length > 0\r\n                                        && roles.map((item, index) => {\r\n                                            return (\r\n                                                <option key={index} value={item.keyMap}>{language === LANGUAGES.VI ? item.valueVi : item.valueEn}</option>\r\n                                            )\r\n                                        })}\r\n\r\n                                </select>\r\n                            </div>\r\n\r\n                            <div className=\"col-3\">\r\n                                <label><FormattedMessage id=\"manage-user.image\" /></label>\r\n                                <div className=\"preview-img-container\">\r\n                                    <input id=\"previewImg\" type=\"file\" hidden\r\n                                        onChange={(event) => this.handleOnchangeImage(event)}\r\n                                    />\r\n                                    <label className=\"label-upload\" htmlFor=\"previewImg\" >Tải ảnh<i className=\"fas fa-upload\"  ></i></label>\r\n                                    <div className=\"preview-image\" style={{ backgroundImage: `url(${this.state.previewImgURL})` }} onClick={() => this.openPreviewImage()}>\r\n\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-12 my-3\">\r\n                                <button\r\n                                    className={this.state.action === CRUD_ACTIONS.EDIT ? \"btn btn-warning\" : \"btn btn-primary\"}\r\n                                    onClick={() => this.handleSaveUser()}>\r\n                                    {this.state.action === CRUD_ACTIONS.EDIT ?\r\n                                        <FormattedMessage id=\"manage-user.edit\" />\r\n                                        :\r\n                                        <FormattedMessage id=\"manage-user.save\" />\r\n                                    }\r\n                                </button>\r\n                            </div>\r\n                            <div className=\"col-12 mb-5\">\r\n                                <TableManageUser\r\n                                    handleEditUserFromParentKey={this.handleEditUserFromParent}\r\n                                    action={this.state.action}\r\n                                />\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {this.state.isOpen === true &&\r\n                    <Lightbox\r\n                        mainSrc={this.state.previewImgURL}\r\n                        onCloseRequest={() => this.setState({ isOpen: false })}\r\n                    />\r\n                }\r\n            </div>\r\n\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        language: state.app.language,\r\n        genderRedux: state.admin.genders,\r\n        roleRedux: state.admin.roles,\r\n        positionRedux: state.admin.position,\r\n        isLoadingGender: state.admin.isLoadingGender,\r\n        listUsers: state.admin.users\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        getGenderStart: () => dispatch(actions.fetchGenderStart()),\r\n        getPositionStart: () => dispatch(actions.fetchPositionStart()),\r\n        getRoleStart: () => dispatch(actions.fetchRoleStart()),\r\n        createNewUser: (data) => dispatch(actions.createNewUser(data)),\r\n        fetchUserRedux: () => dispatch(actions.fetchAllUsersStart()),\r\n        editAUserRedux: (data) => dispatch(actions.editAUser(data)),\r\n\r\n        // fetchUserRedux: (data) => dispatch(actions.fetchAllUsersStart(data))\r\n        // processLogout: () => dispatch(actions.processLogout()),\r\n        // changeLanguageAppRedux: (language) => dispatch(actions.changeLanguageApp(language))\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserRedux);\r\n","C:\\Users\\Admin\\Desktop\\LEARN REACTJS\\Frontend-ReactJS-QuickStart\\src\\containers\\System\\UserManage.js",["212"],"import React, { Component } from 'react';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport { connect } from 'react-redux';\r\nimport './UserManage.scss'\r\nimport { getAllUsers ,createNewUserService , deleteUserService , editUserService} from '../../services/userService';\r\nimport ModalUser from './ModalUser';\r\nimport ModalEditUser from './ModalEditUser';\r\nimport { emitter } from '../../utils/emitter';\r\nclass UserManage extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n          arrUsers: [],\r\n          isOpenModalUser: false,\r\n          isOpenModalEditUser : false,\r\n          userEdit: {}\r\n        };\r\n    }\r\n\r\n    // state = {\r\n\r\n    // }\r\n\r\n    async componentDidMount() {\r\n      await this.getAllUsersFromReact();\r\n    } \r\n    handleAddNewUser = ()=> {\r\n      this.setState({\r\n        isOpenModalUser:true,\r\n      })\r\n    }\r\n\r\n    toggleUserModal = ()=> {\r\n      this.setState({\r\n        isOpenModalUser: !this.state.isOpenModalUser,\r\n      })\r\n    }\r\n\r\n    toggleUserEditModal = () => {\r\n      this.setState({\r\n        isOpenModalEditUser:!this.state.isOpenModalEditUser,\r\n      })\r\n    }\r\n\r\n    getAllUsersFromReact = async()=> {\r\n      let response = await getAllUsers('ALL');\r\n      if(response && response.errCode === 0 ){\r\n        this.setState({\r\n          arrUsers: response.users\r\n        })\r\n\r\n      }\r\n    }\r\n    createNewUser = async (data)=> {\r\n      try{\r\n        let response = await createNewUserService(data);\r\n        console.log('response create user:', response)\r\n        if(response && response.errCode!==0){\r\n          alert(response.errMessage)\r\n        }else{\r\n          await this.getAllUsersFromReact();\r\n          this.setState({\r\n            isOpenModalUser : false\r\n          })\r\n          emitter.emit('EVENT_CLEAR_MODAL_DATA',{'id':'your id'})\r\n        }\r\n      }catch(e){\r\n        console.log(e)  \r\n      }\r\n    }\r\n\r\n    handleEditUser   = (user) =>{\r\n      console.log('check edit user' , user);\r\n      this.setState({\r\n        isOpenModalEditUser : true,\r\n        userEdit: user\r\n\r\n      })\r\n    }\r\n\r\n    doEditUser = async(user) => {\r\n      try{\r\n        let res = await  editUserService(user);\r\n        if(res && res.errCode === 0){\r\n          this.setState({\r\n            isOpenModalEditUser : false\r\n          })\r\n         await this.getAllUsersFromReact()\r\n        }else {\r\n          alert(res.errCode)\r\n        }\r\n      }catch(e){\r\n        console.log (e);\r\n      }\r\n\r\n\r\n    }\r\n    // Life cycle \r\n    // Run component:\r\n    // 1.Run constructor => init state\r\n    // 2.Did mount ( set state)\r\n    // 3.Render (re-render)\r\n\r\n    handleDeleteUser = async (user) =>{\r\n      console.log('Click delete' , user)\r\n      try{\r\n        let res = await deleteUserService(user.id);\r\n        if( res && res.errCode === 0){\r\n          await this.getAllUsersFromReact();\r\n        }else{\r\n          alert (res.errMessage);\r\n        }\r\n        console.log(res)\r\n      }catch(e){\r\n        console.log(e);\r\n      }\r\n    }\r\n    render() {\r\n\r\n      let arrUsers = this.state.arrUsers;\r\n      console.log(arrUsers)\r\n        return (\r\n            <div className=\"users-container\">\r\n              <ModalUser\r\n              isOpen={this.state.isOpenModalUser}\r\n              toggleFromParent={this.toggleUserModal}\r\n              createNewUser = {this.createNewUser}\r\n              // test = {'abc'}\r\n              \r\n              />\r\n              {\r\n                this.state.isOpenModalEditUser&&\r\n              <ModalEditUser\r\n              isOpen={this.state.isOpenModalEditUser}\r\n              toggleFromParent={this.toggleUserEditModal}\r\n              currentUser = {this.state.userEdit}\r\n              editUser = {this.doEditUser}\r\n              // toggleFromParent={this.toggleUserModal}\r\n              // createNewUser = {this.createNewUser}\r\n              />\r\n              } \r\n                <div className=\"title text-center\">Manage users with Eric</div>\r\n                <div className=\"mx-1\">\r\n                  <button className=\"btn btn-primary px-3\" onClick={()=>this.handleAddNewUser()}><i className=\"fas fa-plus\"></i>Add new users</button>\r\n                </div>\r\n                <div className=\"users-table mt-4 mx-3\">\r\n                <table id=\"customers\">\r\n                <tbody>\r\n  <tr>\r\n    <th>Email</th>\r\n    <th>First Name</th>\r\n    <th>Last Name</th>\r\n    <th>Address</th>\r\n    <th>Actions</th>\r\n  </tr>\r\n\r\n  {arrUsers && arrUsers.map((item , index)=>{\r\n      console.log('eric check map', item , index)\r\n      return(\r\n        \r\n        <tr key= {index}>\r\n          <td>{item.email}</td>\r\n          <td>{item.firstName}</td>\r\n          <td>{item.lastName}</td>\r\n          <td>{item.address}</td>\r\n          <td>\r\n          <i class=\"fa-solid fa-delete-right\"></i>\r\n          <i class=\"fa-solid fa-house\"></i>\r\n          {/* <i class=\"fas fa-pencil-alt\"></i>\r\n          <i class=\"fa-sharp fa-regular fa-trash\"></i> */}\r\n           <button className=\"btn-edit \" onClick={()=>this.handleEditUser(item)}>EDIT<i className=\"fas fa-edit\"></i></button>\r\n           <button className=\"btn-delete\" onClick={()=> this.handleDeleteUser(item)}>DELETE<i className=\"fa-sharp fa-regular fa-trash\"></i></button>\r\n          </td>\r\n        </tr>\r\n      )\r\n    })\r\n    }\r\n  </tbody>\r\n\r\n    {/* <td>Alfreds Futterkiste</td>\r\n    <td>Maria Anders</td>\r\n    <td>Germany</td> */}\r\n\r\n</table>\r\n\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserManage);\r\n","C:\\Users\\Admin\\Desktop\\LEARN REACTJS\\Frontend-ReactJS-QuickStart\\src\\containers\\Header\\Header.js",[],"C:\\Users\\Admin\\Desktop\\LEARN REACTJS\\Frontend-ReactJS-QuickStart\\src\\store\\reducers\\userReducer.js",[],"C:\\Users\\Admin\\Desktop\\LEARN REACTJS\\Frontend-ReactJS-QuickStart\\src\\store\\reducers\\appReducer.js",[],"C:\\Users\\Admin\\Desktop\\LEARN REACTJS\\Frontend-ReactJS-QuickStart\\src\\store\\reducers\\adminReducer.js",["213","214"],"import actionTypes from '../actions/actionTypes';\r\nimport { getAllCodeService, createNewUserService } from '../../services/userService';\r\n\r\nconst initialState = {\r\n    isLoadingGender: false,\r\n    genders: [],\r\n    roles: [],\r\n    position: [],\r\n    users: [],\r\n    topDoctors: []\r\n}\r\n\r\nconst adminReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.FETCH_GENDER_START:\r\n            let copyState = { ...state };\r\n            copyState.isLoadingGender = true;\r\n            return {\r\n                ...copyState,\r\n            }\r\n        case actionTypes.FETCH_GENDER_SUCCESS:\r\n            state.genders = action.data;\r\n            state.isLoadingGender = false;\r\n            return {\r\n                ...state,\r\n            }\r\n        case actionTypes.FETCH_POSITION_SUCCESS:\r\n            state.position = action.data;\r\n            return {\r\n                ...state\r\n            }\r\n        case actionTypes.FETCH_POSITION_FAILDED:\r\n            state.position = [];\r\n            return {\r\n                ...state\r\n            }\r\n        case actionTypes.FETCH_ROLE_SUCCESS:\r\n            state.roles = action.data;\r\n            return {\r\n                ...state\r\n            }\r\n        case actionTypes.FETCH_ROLE_FAILDED:\r\n            state.roles = [];\r\n            return {\r\n                ...state\r\n            }\r\n        case actionTypes.FETCH_ALL_USERS_SUCCESS:\r\n            state.users = action.users;\r\n            return {\r\n                ...state\r\n            }\r\n        case actionTypes.FETCH_ALL_USERS_FAILDED:\r\n            state.users = [];\r\n            return {\r\n                ...state\r\n            }\r\n        case actionTypes.FETCH_TOP_DOCTORS_SUCCESS:\r\n            state.topDoctors = action.dataDoctors;\r\n            return {\r\n                ...state\r\n            }\r\n        case actionTypes.FETCH_TOP_DOCTORS_FAILDED:\r\n            state.topDoctors = [];\r\n            return {\r\n                ...state\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default adminReducer;","C:\\Users\\Admin\\Desktop\\LEARN REACTJS\\Frontend-ReactJS-QuickStart\\src\\services\\userService.js",[],"C:\\Users\\Admin\\Desktop\\LEARN REACTJS\\Frontend-ReactJS-QuickStart\\src\\store\\actions\\index.js",[],"C:\\Users\\Admin\\Desktop\\LEARN REACTJS\\Frontend-ReactJS-QuickStart\\src\\utils\\constant.js",[],"C:\\Users\\Admin\\Desktop\\LEARN REACTJS\\Frontend-ReactJS-QuickStart\\src\\utils\\KeyCodeUtils.js",[],"C:\\Users\\Admin\\Desktop\\LEARN REACTJS\\Frontend-ReactJS-QuickStart\\src\\utils\\CommonUtils.js",["215"],"import { reject } from \"lodash\";\r\n\r\nclass CommonUtils {\r\n    static isNumber1(number) {\r\n        if (number === 1) return true;\r\n        return false;\r\n    }\r\n    static getBase64(file) {\r\n        return new Promise((resolve, reject) => {\r\n            const reader = new FileReader();\r\n            reader.readAsDataURL(file);\r\n            reader.onload = () => resolve(reader.result);\r\n            reader.onerror = error => reject(error);\r\n        });\r\n    }\r\n}\r\n\r\nexport default CommonUtils;","C:\\Users\\Admin\\Desktop\\LEARN REACTJS\\Frontend-ReactJS-QuickStart\\src\\utils\\ToastUtil.js",[],"C:\\Users\\Admin\\Desktop\\LEARN REACTJS\\Frontend-ReactJS-QuickStart\\src\\utils\\LanguageUtils.js",[],"C:\\Users\\Admin\\Desktop\\LEARN REACTJS\\Frontend-ReactJS-QuickStart\\src\\containers\\Header\\menuApp.js",[],"C:\\Users\\Admin\\Desktop\\LEARN REACTJS\\Frontend-ReactJS-QuickStart\\src\\axios.js",["216","217"],"import axios from 'axios';\r\nimport _ from 'lodash';\r\n// import config from './config';\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'http://localhost:8080', // Đặt URL của backend cùng với cổng 8080\r\n    withCredentials: true\r\n});\r\n\r\n// const createError = (httpStatusCode, statusCode, errorMessage, problems, errorCode = '') => {\r\n//     const error = new Error();\r\n//     error.httpStatusCode = httpStatusCode;\r\n//     error.statusCode = statusCode;\r\n//     error.errorMessage = errorMessage;\r\n//     error.problems = problems;\r\n//     error.errorCode = errorCode + \"\";\r\n//     return error;\r\n// };\r\n\r\nexport const isSuccessStatusCode = (s) => {\r\n    // May be string or number\r\n    const statusType = typeof s;\r\n    return (statusType === 'number' && s === 0) || (statusType === 'string' && s.toUpperCase() === 'OK');\r\n};\r\n\r\ninstance.interceptors.response.use(\r\n    (response) => {\r\n        // Thrown error for request with OK status code\r\n        const { data } = response;\r\n        // if (data.hasOwnProperty('s') && !isSuccessStatusCode(data['s']) && data.hasOwnProperty('errmsg')) {\r\n        //     return Promise.reject(createError(response.status, data['s'], data['errmsg'], null, data['errcode'] ? data['errcode'] : \"\"));\r\n        // }\r\n\r\n        // // Return direct data to callback\r\n        // if (data.hasOwnProperty('s') && data.hasOwnProperty('d')) {\r\n        //     return data['d'];\r\n        // }\r\n        // // Handle special case\r\n        // if (data.hasOwnProperty('s') && _.keys(data).length === 1) {\r\n        //     return null;\r\n        // }\r\n        return response.data;\r\n    },\r\n    (error) => {\r\n        // const { response } = error;\r\n        // if (response == null) {\r\n        //     return Promise.reject(error);\r\n        // }\r\n\r\n        // const { data } = response;\r\n\r\n        // if (data.hasOwnProperty('s') && data.hasOwnProperty('errmsg')) {\r\n        //     return Promise.reject(createError(response.status, data['s'], data['errmsg']));\r\n        // }\r\n\r\n        // if (data.hasOwnProperty('code') && data.hasOwnProperty('message')) {\r\n        //     return Promise.reject(createError(response.status, data['code'], data['message'], data['problems']));\r\n        // }\r\n\r\n        // return Promise.reject(createError(response.status));\r\n    }\r\n);\r\n\r\nexport default instance;\r\n","C:\\Users\\Admin\\Desktop\\LEARN REACTJS\\Frontend-ReactJS-QuickStart\\src\\utils\\emitter.js",[],"C:\\Users\\Admin\\Desktop\\LEARN REACTJS\\Frontend-ReactJS-QuickStart\\src\\components\\Navigator.js",[],"C:\\Users\\Admin\\Desktop\\LEARN REACTJS\\Frontend-ReactJS-QuickStart\\src\\containers\\System\\ModalEditUser.js",["218","219"],"import React, { Component } from \"react\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport { connect } from \"react-redux\";\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\r\nimport {emitter} from \"../../utils/emitter\";\r\nimport _ from 'lodash';\r\nclass ModalEditUser extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email:'',\r\n      password:'',\r\n      firstName:'',\r\n      lastName:'',\r\n      address:'',\r\n    };\r\n\r\n\r\n  }\r\n\r\n  componentDidMount() {\r\n    let user = this.props.currentUser;\r\n    // console.log('mouting modal')\r\n    if(user && ! _.isEmpty(user)){\r\n      this.setState({\r\n        id: user.id,\r\n        email:user.email,\r\n        password:'harcode',\r\n        firstName:user.firstName,\r\n        lastName:user.lastName,\r\n        address:user.address,\r\n    })\r\n    }\r\n    console.log('didmout edit modal', this.props.currentUser)\r\n  }\r\n\r\n//   toggle = () => {\r\n//     this.props.toggleFromParent();\r\n//   };\r\n  handleOnChangeInput = (event , id) => {\r\n    //good code\r\n    let copyState={...this.state};\r\n    copyState[id] = event.target.value;\r\n\r\n    this.setState({...copyState});\r\n\r\n\r\n\r\n  };\r\n  checkValideInput = () =>{\r\n    let isValid = true;\r\n    let arrInput = ['email', 'password', 'firstName', 'lastName', 'address'];\r\n    for(let i=0; i<arrInput.length; i++){\r\n      console.log('check inside loop', this.state[arrInput[i]],arrInput[i]);\r\n      if(!this.state[arrInput[i]]){\r\n        isValid = false;\r\n        alert('Missing parameter ' + arrInput[i]);\r\n        break;\r\n      }\r\n    }\r\n    \r\n    return isValid;\r\n  }\r\n  handleSaveUser = () => {\r\n    let isValid = this.checkValideInput();\r\n    if(isValid === true){\r\n      //call api edit user modal\r\n      this.props.editUser(this.state);\r\n    }\r\n    this.checkValideInput();\r\n    console.log('data modal' , this.state)\r\n  }\r\n  render() {\r\n    // console.log(\"check child props\", this.props);\r\n    // console.log(\"check child open modal\", this.props.isOpen);\r\n    console.log('check props from parent', this.props)\r\n    return (\r\n      <Modal\r\n        isOpen={this.props.isOpen}\r\n        toggle={() => {\r\n          this.toggle();\r\n        }}\r\n        className={\"modal-user-container\"}\r\n        size=\"lg\"\r\n        centered\r\n      >\r\n        <ModalHeader\r\n          toggle={() => {\r\n            this.toggle();\r\n          }}\r\n        >\r\n          Edist a new user\r\n        </ModalHeader>\r\n        <ModalBody>\r\n          <div className=\"modal-user-body\">\r\n            <div className=\"input-container\">\r\n              <label>Email</label>\r\n              <input type=\"text\"  onChange={(event)=>{this.handleOnChangeInput(event , \"email\")}} value={this.state.email} disabled/>\r\n            </div>\r\n            <div className=\"input-container\">\r\n              <label>Password</label>\r\n              <input type=\"password\" onChange={(event)=>{this.handleOnChangeInput(event, \"password\")}} value={this.state.password} disabled/>\r\n            </div>\r\n            <div className=\"input-container\">\r\n              <label>First name</label>\r\n              <input type=\"text \" onChange={(event)=>{this.handleOnChangeInput(event, \"firstName\")}} value={this.state.firstName} />\r\n            </div>\r\n            <div className=\"input-container\">\r\n              <label>Last name</label>\r\n              <input type=\"text\" onChange={(event)=>{this.handleOnChangeInput(event, \"lastName\")}} value={this.state.lastName} />\r\n            </div>\r\n            <div className=\"input-container max-width-input\">\r\n              <label>Address</label>\r\n              <input type=\"text\" onChange={(event)=>{this.handleOnChangeInput(event, \"address\")}} value={this.state.address} />\r\n            </div>\r\n          </div>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button\r\n            color=\"primary\"\r\n            className=\"px-3\"\r\n            onClick={() => {\r\n              // this.toggle();\r\n              this.handleSaveUser();\r\n            }}\r\n          >\r\n            Save changes\r\n          </Button>{\" \"}\r\n          <Button\r\n            color=\"secondary\"\r\n            className=\"px-3\"\r\n            onClick={() => {\r\n            \r\n            }}\r\n          >\r\n            Close\r\n          </Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {};\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {};\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ModalEditUser);\r\n","C:\\Users\\Admin\\Desktop\\LEARN REACTJS\\Frontend-ReactJS-QuickStart\\src\\containers\\System\\ModalUser.js",["220"],"import React, { Component } from \"react\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport { connect } from \"react-redux\";\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\r\nimport {emitter} from \"../../utils/emitter\";\r\nclass ModalUser extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      id : '',\r\n      email:'',\r\n      password:'',\r\n      firstName:'',\r\n      lastName:'',\r\n      address:'',\r\n    };\r\n\r\n    this.listenToEmiiter();\r\n  }\r\n  listenToEmiiter() {\r\n    emitter.on('EVENT_CLEAR_MODAL_DATA', ()=>{\r\n      //reset state\r\n      this.setState({\r\n        email:'',\r\n        password:'',\r\n        firstName:'',\r\n        lastName:'',\r\n        address:'',\r\n      })\r\n    })\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log('mouting modal')\r\n  }\r\n\r\n  toggle = () => {\r\n    this.props.toggleFromParent();\r\n  };\r\n  handleOnChangeInput = (event , id) => {\r\n    // console.log('event 1',event.target.value,id);\r\n    // this.state[id] = event.target.value;\r\n    // this.setState({\r\n    //   ...this.state\r\n    // },()=>{\r\n    //   console.log('check bad state:',this.state)\r\n    // })\r\n\r\n    //good code\r\n    let copyState={...this.state};\r\n    copyState[id] = event.target.value;\r\n\r\n    this.setState({...copyState});\r\n\r\n\r\n\r\n  };\r\n  checkValideInput = () =>{\r\n    let isValid = true;\r\n    let arrInput = ['email', 'password', 'firstName', 'lastName', 'address'];\r\n    for(let i=0; i<arrInput.length; i++){\r\n      console.log('check inside loop', this.state[arrInput[i]],arrInput[i]);\r\n      if(!this.state[arrInput[i]]){\r\n        isValid = false;\r\n        alert('Missing parameter ' + arrInput[i]);\r\n        break;\r\n      }\r\n    }\r\n    \r\n    return isValid;\r\n  }\r\n  handleAddNewUser = () => {\r\n    let isValid = this.checkValideInput();\r\n    if(isValid === true){\r\n      //call api create modal\r\n      console.log('check props child', this.props)\r\n      this.props.createNewUser(this.state);\r\n      console.log('data modal', this.state)\r\n    }\r\n    this.checkValideInput();\r\n    console.log('data modal' , this.state)\r\n  }\r\n  render() {\r\n    console.log(\"check child props\", this.props);\r\n    console.log(\"check child open modal\", this.props.isOpen);\r\n    return (\r\n      <Modal\r\n        isOpen={this.props.isOpen}\r\n        toggle={() => {\r\n          this.toggle();\r\n        }}\r\n        className={\"modal-user-container\"}\r\n        size=\"lg\"\r\n        centered\r\n      >\r\n        <ModalHeader\r\n          toggle={() => {\r\n            this.toggle();\r\n          }}\r\n        >\r\n          Create a new user\r\n        </ModalHeader>\r\n        <ModalBody>\r\n          <div className=\"modal-user-body\">\r\n            <div className=\"input-container\">\r\n              <label>Email</label>\r\n              <input type=\"text\"  onChange={(event)=>{this.handleOnChangeInput(event , \"email\")}} value={this.state.email}/>\r\n            </div>\r\n            <div className=\"input-container\">\r\n              <label>Password</label>\r\n              <input type=\"password\" onChange={(event)=>{this.handleOnChangeInput(event, \"password\")}} value={this.state.password}/>\r\n            </div>\r\n            <div className=\"input-container\">\r\n              <label>First name</label>\r\n              <input type=\"text \" onChange={(event)=>{this.handleOnChangeInput(event, \"firstName\")}} value={this.state.firstName} />\r\n            </div>\r\n            <div className=\"input-container\">\r\n              <label>Last name</label>\r\n              <input type=\"text\" onChange={(event)=>{this.handleOnChangeInput(event, \"lastName\")}} value={this.state.lastName} />\r\n            </div>\r\n            <div className=\"input-container max-width-input\">\r\n              <label>Address</label>\r\n              <input type=\"text\" onChange={(event)=>{this.handleOnChangeInput(event, \"address\")}} value={this.state.address} />\r\n            </div>\r\n          </div>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button\r\n            color=\"primary\"\r\n            className=\"px-3\"\r\n            onClick={() => {\r\n              // this.toggle();\r\n              this.handleAddNewUser();\r\n            }}\r\n          >\r\n            Save changes\r\n          </Button>{\" \"}\r\n          <Button\r\n            color=\"secondary\"\r\n            className=\"px-3\"\r\n            onClick={() => {\r\n            \r\n            }}\r\n          >\r\n            Close\r\n          </Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {};\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {};\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ModalUser);\r\n","C:\\Users\\Admin\\Desktop\\LEARN REACTJS\\Frontend-ReactJS-QuickStart\\src\\containers\\System\\Admin\\TableManageUser.js",["221"],"import React, { Component } from 'react';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport { connect } from 'react-redux';\r\nimport './TableManageUser.scss'\r\nimport * as actions from \"../../../store/actions\"\r\nimport MarkdownIt from 'markdown-it';\r\nimport MdEditor from 'react-markdown-editor-lite';\r\n// import style manually\r\nimport 'react-markdown-editor-lite/lib/index.css';\r\n\r\n// Register plugins if required\r\n// MdEditor.use(YOUR_PLUGINS_HERE);\r\n\r\n// Initialize a markdown parser\r\nconst mdParser = new MarkdownIt(/* Markdown-it options */);\r\n\r\n// Finish!\r\nfunction handleEditorChange({ html, text }) {\r\n    console.log('handleEditorChange', html, text);\r\n}\r\n\r\nclass TableManageUser extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            usersRedux: []\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.fetchUserRedux();\r\n    }\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        console.log('TableManageUser la', prevProps)\r\n        if (prevProps.listUsers !== this.props.listUsers) {\r\n            this.setState({\r\n                usersRedux: this.props.listUsers\r\n            })\r\n\r\n        }\r\n    }\r\n    handleDeleteUser = (user) => {\r\n        this.props.deleteAUserRedux(user.id)\r\n    }\r\n    handleEditUser = (user) => {\r\n        console.log(' check user edit', user)\r\n        this.props.handleEditUserFromParentKey(user)\r\n    }\r\n    render() {\r\n        let arrUsers = this.state.usersRedux;\r\n        return (\r\n            <React.Fragment>\r\n                <table id=\"TableManageUser\">\r\n                    <tbody>\r\n                        <tr>\r\n                            <th>Email</th>\r\n                            <th>First Name</th>\r\n                            <th>Last Name</th>\r\n                            <th>Address</th>\r\n                            <th>Actions</th>\r\n                        </tr>\r\n                        {arrUsers && arrUsers.length > 0 &&\r\n                            arrUsers.map((item, index) => {\r\n                                return (\r\n                                    <tr key={index}>\r\n                                        <td>{item.email}</td>\r\n                                        <td>{item.firstName}</td>\r\n                                        <td>{item.lastName}</td>\r\n                                        <td>{item.address}</td>\r\n                                        <td>\r\n                                            <button\r\n                                                onClick={() => this.handleEditUser(item)}\r\n                                                className=\"btn-edit \"><i className=\"fas fa-pencil-alt\"></i></button>\r\n                                            <button onClick={() => this.handleDeleteUser(item)} className=\"btn-delete\"><i className=\"fas fa-trash\"></i></button>\r\n                                        </td>\r\n                                    </tr>\r\n                                )\r\n                            })\r\n                        }\r\n\r\n                    </tbody>\r\n                </table>\r\n                <MdEditor style={{ height: '500px' }} renderHTML={text => mdParser.render(text)} onChange={handleEditorChange} />\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        listUsers: state.admin.users\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        fetchUserRedux: () => dispatch(actions.fetchAllUsersStart()),\r\n        deleteAUserRedux: (id) => dispatch(actions.deleteAUser(id))\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TableManageUser);\r\n","C:\\Users\\Admin\\Desktop\\LEARN REACTJS\\Frontend-ReactJS-QuickStart\\src\\store\\actions\\userActions.js",[],"C:\\Users\\Admin\\Desktop\\LEARN REACTJS\\Frontend-ReactJS-QuickStart\\src\\store\\actions\\appActions.js",[],"C:\\Users\\Admin\\Desktop\\LEARN REACTJS\\Frontend-ReactJS-QuickStart\\src\\store\\actions\\adminActions.js",[],{"ruleId":"222","severity":1,"message":"223","line":13,"column":10,"nodeType":"224","messageId":"225","endLine":13,"endColumn":32},{"ruleId":"222","severity":1,"message":"226","line":7,"column":10,"nodeType":"224","messageId":"225","endLine":7,"endColumn":26},{"ruleId":"227","severity":1,"message":"228","line":30,"column":1,"nodeType":"229","endLine":35,"endColumn":3},{"ruleId":"230","severity":1,"message":"231","line":26,"column":25,"nodeType":"232","endLine":26,"endColumn":66},{"ruleId":"222","severity":1,"message":"226","line":3,"column":10,"nodeType":"224","messageId":"225","endLine":3,"endColumn":26},{"ruleId":"222","severity":1,"message":"226","line":4,"column":10,"nodeType":"224","messageId":"225","endLine":4,"endColumn":26},{"ruleId":"222","severity":1,"message":"226","line":4,"column":10,"nodeType":"224","messageId":"225","endLine":4,"endColumn":26},{"ruleId":"222","severity":1,"message":"233","line":8,"column":8,"nodeType":"224","messageId":"225","endLine":8,"endColumn":20},{"ruleId":"222","severity":1,"message":"226","line":3,"column":10,"nodeType":"224","messageId":"225","endLine":3,"endColumn":26},{"ruleId":"222","severity":1,"message":"226","line":3,"column":10,"nodeType":"224","messageId":"225","endLine":3,"endColumn":26},{"ruleId":"222","severity":1,"message":"234","line":4,"column":10,"nodeType":"224","messageId":"225","endLine":4,"endColumn":27},{"ruleId":"222","severity":1,"message":"235","line":220,"column":83,"nodeType":"224","messageId":"225","endLine":220,"endColumn":96},{"ruleId":"222","severity":1,"message":"236","line":220,"column":104,"nodeType":"224","messageId":"225","endLine":220,"endColumn":110},{"ruleId":"222","severity":1,"message":"226","line":2,"column":10,"nodeType":"224","messageId":"225","endLine":2,"endColumn":26},{"ruleId":"222","severity":1,"message":"234","line":2,"column":10,"nodeType":"224","messageId":"225","endLine":2,"endColumn":27},{"ruleId":"222","severity":1,"message":"237","line":2,"column":29,"nodeType":"224","messageId":"225","endLine":2,"endColumn":49},{"ruleId":"222","severity":1,"message":"238","line":1,"column":10,"nodeType":"224","messageId":"225","endLine":1,"endColumn":16},{"ruleId":"222","severity":1,"message":"239","line":2,"column":8,"nodeType":"224","messageId":"225","endLine":2,"endColumn":9},{"ruleId":"222","severity":1,"message":"240","line":29,"column":17,"nodeType":"224","messageId":"225","endLine":29,"endColumn":21},{"ruleId":"222","severity":1,"message":"226","line":2,"column":10,"nodeType":"224","messageId":"225","endLine":2,"endColumn":26},{"ruleId":"222","severity":1,"message":"241","line":5,"column":9,"nodeType":"224","messageId":"225","endLine":5,"endColumn":16},{"ruleId":"222","severity":1,"message":"226","line":2,"column":10,"nodeType":"224","messageId":"225","endLine":2,"endColumn":26},{"ruleId":"222","severity":1,"message":"226","line":2,"column":10,"nodeType":"224","messageId":"225","endLine":2,"endColumn":26},"no-unused-vars","'CustomToastCloseButton' is defined but never used.","Identifier","unusedVar","'FormattedMessage' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'specialtyImg' is defined but never used.","'getAllCodeService' is defined but never used.","'positioninput' is assigned a value but never used.","'avatar' is assigned a value but never used.","'createNewUserService' is defined but never used.","'reject' is defined but never used.","'_' is defined but never used.","'data' is assigned a value but never used.","'emitter' is defined but never used."]