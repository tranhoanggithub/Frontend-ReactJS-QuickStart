{"ast":null,"code":"import { logger } from \"redux-logger\";\nimport thunkMiddleware from \"redux-thunk\";\nimport { routerMiddleware } from 'connected-react-router';\nimport { createBrowserHistory } from 'history';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport { createStateSyncMiddleware } from 'redux-state-sync';\nimport { persistStore } from 'redux-persist';\nimport createRootReducer from './store/reducers/rootReducer';\nimport actionTypes from './store/actions/actionTypes';\nconst environment = process.env.NODE_ENV || \"development\";\nlet isDevelopment = environment === \"development\";\n\n//hide redux logs\nisDevelopment = false;\nexport const history = createBrowserHistory({\n  basename: process.env.REACT_APP_ROUTER_BASE_NAME\n});\nconst reduxStateSyncConfig = {\n  whitelist: [actionTypes.APP_START_UP_COMPLETE]\n};\nconst rootReducer = createRootReducer(history);\nconst middleware = [routerMiddleware(history), thunkMiddleware, createStateSyncMiddleware(reduxStateSyncConfig)];\nif (isDevelopment) middleware.push(logger);\nconst composeEnhancers = isDevelopment && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ : compose;\nconst reduxStore = createStore(rootReducer, composeEnhancers(applyMiddleware(...middleware)));\nexport const dispatch = reduxStore.dispatch;\nexport const persistor = persistStore(reduxStore);\nexport default reduxStore;","map":{"version":3,"names":["logger","thunkMiddleware","routerMiddleware","createBrowserHistory","createStore","applyMiddleware","compose","createStateSyncMiddleware","persistStore","createRootReducer","actionTypes","environment","process","env","NODE_ENV","isDevelopment","history","basename","REACT_APP_ROUTER_BASE_NAME","reduxStateSyncConfig","whitelist","APP_START_UP_COMPLETE","rootReducer","middleware","push","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","reduxStore","dispatch","persistor"],"sources":["C:/Users/Admin/Desktop/LEARN REACTJS/Frontend-ReactJS-QuickStart/src/redux.js"],"sourcesContent":["import { logger } from \"redux-logger\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport { routerMiddleware } from 'connected-react-router';\r\nimport { createBrowserHistory } from 'history';\r\n\r\nimport { createStore, applyMiddleware, compose } from 'redux';\r\nimport { createStateSyncMiddleware } from 'redux-state-sync';\r\nimport { persistStore } from 'redux-persist';\r\n\r\nimport createRootReducer from './store/reducers/rootReducer';\r\nimport actionTypes from './store/actions/actionTypes';\r\n\r\nconst environment = process.env.NODE_ENV || \"development\";\r\nlet isDevelopment = environment === \"development\";\r\n\r\n//hide redux logs\r\nisDevelopment = false;\r\n\r\n\r\nexport const history = createBrowserHistory({ basename: process.env.REACT_APP_ROUTER_BASE_NAME });\r\n\r\nconst reduxStateSyncConfig = {\r\n    whitelist: [\r\n        actionTypes.APP_START_UP_COMPLETE,\r\n    ]\r\n}\r\n\r\nconst rootReducer = createRootReducer(history);\r\nconst middleware = [\r\n    routerMiddleware(history),\r\n    thunkMiddleware,\r\n    createStateSyncMiddleware(reduxStateSyncConfig),\r\n]\r\nif (isDevelopment) middleware.push(logger);\r\n\r\nconst composeEnhancers = (isDevelopment && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ : compose;\r\n\r\nconst reduxStore = createStore(\r\n    rootReducer,\r\n    composeEnhancers(applyMiddleware(...middleware)),\r\n)\r\n\r\nexport const dispatch = reduxStore.dispatch;\r\n\r\nexport const persistor = persistStore(reduxStore);\r\n\r\nexport default reduxStore;"],"mappings":"AAAA,SAASA,MAAM,QAAQ,cAAc;AACrC,OAAOC,eAAe,MAAM,aAAa;AACzC,SAASC,gBAAgB,QAAQ,wBAAwB;AACzD,SAASC,oBAAoB,QAAQ,SAAS;AAE9C,SAASC,WAAW,EAAEC,eAAe,EAAEC,OAAO,QAAQ,OAAO;AAC7D,SAASC,yBAAyB,QAAQ,kBAAkB;AAC5D,SAASC,YAAY,QAAQ,eAAe;AAE5C,OAAOC,iBAAiB,MAAM,8BAA8B;AAC5D,OAAOC,WAAW,MAAM,6BAA6B;AAErD,MAAMC,WAAW,GAAGC,OAAO,CAACC,GAAG,CAACC,QAAQ,IAAI,aAAa;AACzD,IAAIC,aAAa,GAAGJ,WAAW,KAAK,aAAa;;AAEjD;AACAI,aAAa,GAAG,KAAK;AAGrB,OAAO,MAAMC,OAAO,GAAGb,oBAAoB,CAAC;EAAEc,QAAQ,EAAEL,OAAO,CAACC,GAAG,CAACK;AAA2B,CAAC,CAAC;AAEjG,MAAMC,oBAAoB,GAAG;EACzBC,SAAS,EAAE,CACPV,WAAW,CAACW,qBAAqB;AAEzC,CAAC;AAED,MAAMC,WAAW,GAAGb,iBAAiB,CAACO,OAAO,CAAC;AAC9C,MAAMO,UAAU,GAAG,CACfrB,gBAAgB,CAACc,OAAO,CAAC,EACzBf,eAAe,EACfM,yBAAyB,CAACY,oBAAoB,CAAC,CAClD;AACD,IAAIJ,aAAa,EAAEQ,UAAU,CAACC,IAAI,CAACxB,MAAM,CAAC;AAE1C,MAAMyB,gBAAgB,GAAIV,aAAa,IAAIW,MAAM,CAACC,oCAAoC,GAAID,MAAM,CAACC,oCAAoC,GAAGrB,OAAO;AAE/I,MAAMsB,UAAU,GAAGxB,WAAW,CAC1BkB,WAAW,EACXG,gBAAgB,CAACpB,eAAe,CAAC,GAAGkB,UAAU,CAAC,CACnD,CAAC;AAED,OAAO,MAAMM,QAAQ,GAAGD,UAAU,CAACC,QAAQ;AAE3C,OAAO,MAAMC,SAAS,GAAGtB,YAAY,CAACoB,UAAU,CAAC;AAEjD,eAAeA,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}