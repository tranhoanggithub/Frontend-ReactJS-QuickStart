{"ast":null,"code":"var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n  return target;\n};\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n  return target;\n}\nimport { FLUSH, PAUSE, PERSIST, PURGE, REHYDRATE, DEFAULT_VERSION } from './constants';\nimport autoMergeLevel1 from './stateReconciler/autoMergeLevel1';\nimport createPersistoid from './createPersistoid';\nimport defaultGetStoredState from './getStoredState';\nimport purgeStoredState from './purgeStoredState';\nvar DEFAULT_TIMEOUT = 5000;\n/*\r\n  @TODO add validation / handling for:\r\n  - persisting a reducer which has nested _persist\r\n  - handling actions that fire before reydrate is called\r\n*/\nexport default function persistReducer(config, baseReducer) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (!config) throw new Error('config is required for persistReducer');\n    if (!config.key) throw new Error('key is required in persistor config');\n    if (!config.storage) throw new Error(\"redux-persist: config.storage is required. Try using one of the provided storage engines `import storage from 'redux-persist/lib/storage'`\");\n  }\n  var version = config.version !== undefined ? config.version : DEFAULT_VERSION;\n  var debug = config.debug || false;\n  var stateReconciler = config.stateReconciler === undefined ? autoMergeLevel1 : config.stateReconciler;\n  var getStoredState = config.getStoredState || defaultGetStoredState;\n  var timeout = config.timeout !== undefined ? config.timeout : DEFAULT_TIMEOUT;\n  var _persistoid = null;\n  var _purge = false;\n  var _paused = true;\n  var conditionalUpdate = function conditionalUpdate(state) {\n    // update the persistoid only if we are rehydrated and not paused\n    state._persist.rehydrated && _persistoid && !_paused && _persistoid.update(state);\n    return state;\n  };\n  return function (state, action) {\n    var _ref = state || {},\n      _persist = _ref._persist,\n      rest = _objectWithoutProperties(_ref, ['_persist']);\n    var restState = rest;\n    if (action.type === PERSIST) {\n      var _sealed = false;\n      var _rehydrate = function _rehydrate(payload, err) {\n        // dev warning if we are already sealed\n        if (process.env.NODE_ENV !== 'production' && _sealed) console.error('redux-persist: rehydrate for \"' + config.key + '\" called after timeout.', payload, err);\n\n        // only rehydrate if we are not already sealed\n        if (!_sealed) {\n          action.rehydrate(config.key, payload, err);\n          _sealed = true;\n        }\n      };\n      timeout && setTimeout(function () {\n        !_sealed && _rehydrate(undefined, new Error('redux-persist: persist timed out for persist key \"' + config.key + '\"'));\n      }, timeout);\n\n      // @NOTE PERSIST resumes if paused.\n      _paused = false;\n\n      // @NOTE only ever create persistoid once, ensure we call it at least once, even if _persist has already been set\n      if (!_persistoid) _persistoid = createPersistoid(config);\n\n      // @NOTE PERSIST can be called multiple times, noop after the first\n      if (_persist) return state;\n      if (typeof action.rehydrate !== 'function' || typeof action.register !== 'function') throw new Error('redux-persist: either rehydrate or register is not a function on the PERSIST action. This can happen if the action is being replayed. This is an unexplored use case, please open an issue and we will figure out a resolution.');\n      action.register(config.key);\n      getStoredState(config).then(function (restoredState) {\n        var migrate = config.migrate || function (s, v) {\n          return Promise.resolve(s);\n        };\n        migrate(restoredState, version).then(function (migratedState) {\n          _rehydrate(migratedState);\n        }, function (migrateErr) {\n          if (process.env.NODE_ENV !== 'production' && migrateErr) console.error('redux-persist: migration error', migrateErr);\n          _rehydrate(undefined, migrateErr);\n        });\n      }, function (err) {\n        _rehydrate(undefined, err);\n      });\n      return _extends({}, baseReducer(restState, action), {\n        _persist: {\n          version: version,\n          rehydrated: false\n        }\n      });\n    } else if (action.type === PURGE) {\n      _purge = true;\n      action.result(purgeStoredState(config));\n      return _extends({}, baseReducer(restState, action), {\n        _persist: _persist\n      });\n    } else if (action.type === FLUSH) {\n      action.result(_persistoid && _persistoid.flush());\n      return _extends({}, baseReducer(restState, action), {\n        _persist: _persist\n      });\n    } else if (action.type === PAUSE) {\n      _paused = true;\n    } else if (action.type === REHYDRATE) {\n      // noop on restState if purging\n      if (_purge) return _extends({}, restState, {\n        _persist: _extends({}, _persist, {\n          rehydrated: true\n        })\n\n        // @NOTE if key does not match, will continue to default else below\n      });\n      if (action.key === config.key) {\n        var reducedState = baseReducer(restState, action);\n        var inboundState = action.payload;\n        // only reconcile state if stateReconciler and inboundState are both defined\n        var reconciledRest = stateReconciler !== false && inboundState !== undefined ? stateReconciler(inboundState, state, reducedState, config) : reducedState;\n        var _newState = _extends({}, reconciledRest, {\n          _persist: _extends({}, _persist, {\n            rehydrated: true\n          })\n        });\n        return conditionalUpdate(_newState);\n      }\n    }\n\n    // if we have not already handled PERSIST, straight passthrough\n    if (!_persist) return baseReducer(state, action);\n\n    // run base reducer:\n    // is state modified ? return original : return updated\n    var newState = baseReducer(restState, action);\n    if (newState === restState) return state;else {\n      newState._persist = _persist;\n      return conditionalUpdate(newState);\n    }\n  };\n}","map":{"version":3,"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","_objectWithoutProperties","obj","keys","indexOf","FLUSH","PAUSE","PERSIST","PURGE","REHYDRATE","DEFAULT_VERSION","autoMergeLevel1","createPersistoid","defaultGetStoredState","purgeStoredState","DEFAULT_TIMEOUT","persistReducer","config","baseReducer","process","env","NODE_ENV","Error","storage","version","undefined","debug","stateReconciler","getStoredState","timeout","_persistoid","_purge","_paused","conditionalUpdate","state","_persist","rehydrated","update","action","_ref","rest","restState","type","_sealed","_rehydrate","payload","err","console","error","rehydrate","setTimeout","register","then","restoredState","migrate","s","v","Promise","resolve","migratedState","migrateErr","result","flush","reducedState","inboundState","reconciledRest","_newState","newState"],"sources":["C:/Users/Admin/Desktop/LEARN REACTJS/Frontend-ReactJS-QuickStart/node_modules/redux-persist/es/persistReducer.js"],"sourcesContent":["var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\r\n\r\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\r\n\r\nimport { FLUSH, PAUSE, PERSIST, PURGE, REHYDRATE, DEFAULT_VERSION } from './constants';\r\n\r\nimport autoMergeLevel1 from './stateReconciler/autoMergeLevel1';\r\nimport createPersistoid from './createPersistoid';\r\nimport defaultGetStoredState from './getStoredState';\r\nimport purgeStoredState from './purgeStoredState';\r\n\r\nvar DEFAULT_TIMEOUT = 5000;\r\n/*\r\n  @TODO add validation / handling for:\r\n  - persisting a reducer which has nested _persist\r\n  - handling actions that fire before reydrate is called\r\n*/\r\nexport default function persistReducer(config, baseReducer) {\r\n  if (process.env.NODE_ENV !== 'production') {\r\n    if (!config) throw new Error('config is required for persistReducer');\r\n    if (!config.key) throw new Error('key is required in persistor config');\r\n    if (!config.storage) throw new Error(\"redux-persist: config.storage is required. Try using one of the provided storage engines `import storage from 'redux-persist/lib/storage'`\");\r\n  }\r\n\r\n  var version = config.version !== undefined ? config.version : DEFAULT_VERSION;\r\n  var debug = config.debug || false;\r\n  var stateReconciler = config.stateReconciler === undefined ? autoMergeLevel1 : config.stateReconciler;\r\n  var getStoredState = config.getStoredState || defaultGetStoredState;\r\n  var timeout = config.timeout !== undefined ? config.timeout : DEFAULT_TIMEOUT;\r\n  var _persistoid = null;\r\n  var _purge = false;\r\n  var _paused = true;\r\n  var conditionalUpdate = function conditionalUpdate(state) {\r\n    // update the persistoid only if we are rehydrated and not paused\r\n    state._persist.rehydrated && _persistoid && !_paused && _persistoid.update(state);\r\n    return state;\r\n  };\r\n\r\n  return function (state, action) {\r\n    var _ref = state || {},\r\n        _persist = _ref._persist,\r\n        rest = _objectWithoutProperties(_ref, ['_persist']);\r\n\r\n    var restState = rest;\r\n\r\n    if (action.type === PERSIST) {\r\n      var _sealed = false;\r\n      var _rehydrate = function _rehydrate(payload, err) {\r\n        // dev warning if we are already sealed\r\n        if (process.env.NODE_ENV !== 'production' && _sealed) console.error('redux-persist: rehydrate for \"' + config.key + '\" called after timeout.', payload, err);\r\n\r\n        // only rehydrate if we are not already sealed\r\n        if (!_sealed) {\r\n          action.rehydrate(config.key, payload, err);\r\n          _sealed = true;\r\n        }\r\n      };\r\n      timeout && setTimeout(function () {\r\n        !_sealed && _rehydrate(undefined, new Error('redux-persist: persist timed out for persist key \"' + config.key + '\"'));\r\n      }, timeout);\r\n\r\n      // @NOTE PERSIST resumes if paused.\r\n      _paused = false;\r\n\r\n      // @NOTE only ever create persistoid once, ensure we call it at least once, even if _persist has already been set\r\n      if (!_persistoid) _persistoid = createPersistoid(config);\r\n\r\n      // @NOTE PERSIST can be called multiple times, noop after the first\r\n      if (_persist) return state;\r\n      if (typeof action.rehydrate !== 'function' || typeof action.register !== 'function') throw new Error('redux-persist: either rehydrate or register is not a function on the PERSIST action. This can happen if the action is being replayed. This is an unexplored use case, please open an issue and we will figure out a resolution.');\r\n\r\n      action.register(config.key);\r\n\r\n      getStoredState(config).then(function (restoredState) {\r\n        var migrate = config.migrate || function (s, v) {\r\n          return Promise.resolve(s);\r\n        };\r\n        migrate(restoredState, version).then(function (migratedState) {\r\n          _rehydrate(migratedState);\r\n        }, function (migrateErr) {\r\n          if (process.env.NODE_ENV !== 'production' && migrateErr) console.error('redux-persist: migration error', migrateErr);\r\n          _rehydrate(undefined, migrateErr);\r\n        });\r\n      }, function (err) {\r\n        _rehydrate(undefined, err);\r\n      });\r\n\r\n      return _extends({}, baseReducer(restState, action), {\r\n        _persist: { version: version, rehydrated: false }\r\n      });\r\n    } else if (action.type === PURGE) {\r\n      _purge = true;\r\n      action.result(purgeStoredState(config));\r\n      return _extends({}, baseReducer(restState, action), {\r\n        _persist: _persist\r\n      });\r\n    } else if (action.type === FLUSH) {\r\n      action.result(_persistoid && _persistoid.flush());\r\n      return _extends({}, baseReducer(restState, action), {\r\n        _persist: _persist\r\n      });\r\n    } else if (action.type === PAUSE) {\r\n      _paused = true;\r\n    } else if (action.type === REHYDRATE) {\r\n      // noop on restState if purging\r\n      if (_purge) return _extends({}, restState, {\r\n        _persist: _extends({}, _persist, { rehydrated: true })\r\n\r\n        // @NOTE if key does not match, will continue to default else below\r\n      });if (action.key === config.key) {\r\n        var reducedState = baseReducer(restState, action);\r\n        var inboundState = action.payload;\r\n        // only reconcile state if stateReconciler and inboundState are both defined\r\n        var reconciledRest = stateReconciler !== false && inboundState !== undefined ? stateReconciler(inboundState, state, reducedState, config) : reducedState;\r\n\r\n        var _newState = _extends({}, reconciledRest, {\r\n          _persist: _extends({}, _persist, { rehydrated: true })\r\n        });\r\n        return conditionalUpdate(_newState);\r\n      }\r\n    }\r\n\r\n    // if we have not already handled PERSIST, straight passthrough\r\n    if (!_persist) return baseReducer(state, action);\r\n\r\n    // run base reducer:\r\n    // is state modified ? return original : return updated\r\n    var newState = baseReducer(restState, action);\r\n    if (newState === restState) return state;else {\r\n      newState._persist = _persist;\r\n      return conditionalUpdate(newState);\r\n    }\r\n  };\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}