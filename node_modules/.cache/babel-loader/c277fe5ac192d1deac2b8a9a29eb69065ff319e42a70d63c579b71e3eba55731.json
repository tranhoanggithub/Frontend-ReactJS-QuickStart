{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SetNumberFormatDigitOptions = void 0;\nvar GetNumberOption_1 = require(\"../GetNumberOption\");\nvar DefaultNumberOption_1 = require(\"../DefaultNumberOption\");\n/**\n * https://tc39.es/ecma402/#sec-setnfdigitoptions\n */\nfunction SetNumberFormatDigitOptions(internalSlots, opts, mnfdDefault, mxfdDefault, notation) {\n  var mnid = GetNumberOption_1.GetNumberOption(opts, 'minimumIntegerDigits', 1, 21, 1);\n  var mnfd = opts.minimumFractionDigits;\n  var mxfd = opts.maximumFractionDigits;\n  var mnsd = opts.minimumSignificantDigits;\n  var mxsd = opts.maximumSignificantDigits;\n  internalSlots.minimumIntegerDigits = mnid;\n  if (mnsd !== undefined || mxsd !== undefined) {\n    internalSlots.roundingType = 'significantDigits';\n    mnsd = DefaultNumberOption_1.DefaultNumberOption(mnsd, 1, 21, 1);\n    mxsd = DefaultNumberOption_1.DefaultNumberOption(mxsd, mnsd, 21, 21);\n    internalSlots.minimumSignificantDigits = mnsd;\n    internalSlots.maximumSignificantDigits = mxsd;\n  } else if (mnfd !== undefined || mxfd !== undefined) {\n    internalSlots.roundingType = 'fractionDigits';\n    mnfd = DefaultNumberOption_1.DefaultNumberOption(mnfd, 0, 20, mnfdDefault);\n    var mxfdActualDefault = Math.max(mnfd, mxfdDefault);\n    mxfd = DefaultNumberOption_1.DefaultNumberOption(mxfd, mnfd, 20, mxfdActualDefault);\n    internalSlots.minimumFractionDigits = mnfd;\n    internalSlots.maximumFractionDigits = mxfd;\n  } else if (notation === 'compact') {\n    internalSlots.roundingType = 'compactRounding';\n  } else {\n    internalSlots.roundingType = 'fractionDigits';\n    internalSlots.minimumFractionDigits = mnfdDefault;\n    internalSlots.maximumFractionDigits = mxfdDefault;\n  }\n}\nexports.SetNumberFormatDigitOptions = SetNumberFormatDigitOptions;","map":{"version":3,"names":["Object","defineProperty","exports","value","SetNumberFormatDigitOptions","GetNumberOption_1","require","DefaultNumberOption_1","internalSlots","opts","mnfdDefault","mxfdDefault","notation","mnid","GetNumberOption","mnfd","minimumFractionDigits","mxfd","maximumFractionDigits","mnsd","minimumSignificantDigits","mxsd","maximumSignificantDigits","minimumIntegerDigits","undefined","roundingType","DefaultNumberOption","mxfdActualDefault","Math","max"],"sources":["C:/Users/Admin/Desktop/LEARN REACTJS/Frontend-ReactJS-QuickStart/node_modules/@formatjs/intl-pluralrules/node_modules/@formatjs/ecma402-abstract/NumberFormat/SetNumberFormatDigitOptions.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SetNumberFormatDigitOptions = void 0;\nvar GetNumberOption_1 = require(\"../GetNumberOption\");\nvar DefaultNumberOption_1 = require(\"../DefaultNumberOption\");\n/**\n * https://tc39.es/ecma402/#sec-setnfdigitoptions\n */\nfunction SetNumberFormatDigitOptions(internalSlots, opts, mnfdDefault, mxfdDefault, notation) {\n    var mnid = GetNumberOption_1.GetNumberOption(opts, 'minimumIntegerDigits', 1, 21, 1);\n    var mnfd = opts.minimumFractionDigits;\n    var mxfd = opts.maximumFractionDigits;\n    var mnsd = opts.minimumSignificantDigits;\n    var mxsd = opts.maximumSignificantDigits;\n    internalSlots.minimumIntegerDigits = mnid;\n    if (mnsd !== undefined || mxsd !== undefined) {\n        internalSlots.roundingType = 'significantDigits';\n        mnsd = DefaultNumberOption_1.DefaultNumberOption(mnsd, 1, 21, 1);\n        mxsd = DefaultNumberOption_1.DefaultNumberOption(mxsd, mnsd, 21, 21);\n        internalSlots.minimumSignificantDigits = mnsd;\n        internalSlots.maximumSignificantDigits = mxsd;\n    }\n    else if (mnfd !== undefined || mxfd !== undefined) {\n        internalSlots.roundingType = 'fractionDigits';\n        mnfd = DefaultNumberOption_1.DefaultNumberOption(mnfd, 0, 20, mnfdDefault);\n        var mxfdActualDefault = Math.max(mnfd, mxfdDefault);\n        mxfd = DefaultNumberOption_1.DefaultNumberOption(mxfd, mnfd, 20, mxfdActualDefault);\n        internalSlots.minimumFractionDigits = mnfd;\n        internalSlots.maximumFractionDigits = mxfd;\n    }\n    else if (notation === 'compact') {\n        internalSlots.roundingType = 'compactRounding';\n    }\n    else {\n        internalSlots.roundingType = 'fractionDigits';\n        internalSlots.minimumFractionDigits = mnfdDefault;\n        internalSlots.maximumFractionDigits = mxfdDefault;\n    }\n}\nexports.SetNumberFormatDigitOptions = SetNumberFormatDigitOptions;\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,2BAA2B,GAAG,KAAK,CAAC;AAC5C,IAAIC,iBAAiB,GAAGC,OAAO,CAAC,oBAAoB,CAAC;AACrD,IAAIC,qBAAqB,GAAGD,OAAO,CAAC,wBAAwB,CAAC;AAC7D;AACA;AACA;AACA,SAASF,2BAA2BA,CAACI,aAAa,EAAEC,IAAI,EAAEC,WAAW,EAAEC,WAAW,EAAEC,QAAQ,EAAE;EAC1F,IAAIC,IAAI,GAAGR,iBAAiB,CAACS,eAAe,CAACL,IAAI,EAAE,sBAAsB,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;EACpF,IAAIM,IAAI,GAAGN,IAAI,CAACO,qBAAqB;EACrC,IAAIC,IAAI,GAAGR,IAAI,CAACS,qBAAqB;EACrC,IAAIC,IAAI,GAAGV,IAAI,CAACW,wBAAwB;EACxC,IAAIC,IAAI,GAAGZ,IAAI,CAACa,wBAAwB;EACxCd,aAAa,CAACe,oBAAoB,GAAGV,IAAI;EACzC,IAAIM,IAAI,KAAKK,SAAS,IAAIH,IAAI,KAAKG,SAAS,EAAE;IAC1ChB,aAAa,CAACiB,YAAY,GAAG,mBAAmB;IAChDN,IAAI,GAAGZ,qBAAqB,CAACmB,mBAAmB,CAACP,IAAI,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;IAChEE,IAAI,GAAGd,qBAAqB,CAACmB,mBAAmB,CAACL,IAAI,EAAEF,IAAI,EAAE,EAAE,EAAE,EAAE,CAAC;IACpEX,aAAa,CAACY,wBAAwB,GAAGD,IAAI;IAC7CX,aAAa,CAACc,wBAAwB,GAAGD,IAAI;EACjD,CAAC,MACI,IAAIN,IAAI,KAAKS,SAAS,IAAIP,IAAI,KAAKO,SAAS,EAAE;IAC/ChB,aAAa,CAACiB,YAAY,GAAG,gBAAgB;IAC7CV,IAAI,GAAGR,qBAAqB,CAACmB,mBAAmB,CAACX,IAAI,EAAE,CAAC,EAAE,EAAE,EAAEL,WAAW,CAAC;IAC1E,IAAIiB,iBAAiB,GAAGC,IAAI,CAACC,GAAG,CAACd,IAAI,EAAEJ,WAAW,CAAC;IACnDM,IAAI,GAAGV,qBAAqB,CAACmB,mBAAmB,CAACT,IAAI,EAAEF,IAAI,EAAE,EAAE,EAAEY,iBAAiB,CAAC;IACnFnB,aAAa,CAACQ,qBAAqB,GAAGD,IAAI;IAC1CP,aAAa,CAACU,qBAAqB,GAAGD,IAAI;EAC9C,CAAC,MACI,IAAIL,QAAQ,KAAK,SAAS,EAAE;IAC7BJ,aAAa,CAACiB,YAAY,GAAG,iBAAiB;EAClD,CAAC,MACI;IACDjB,aAAa,CAACiB,YAAY,GAAG,gBAAgB;IAC7CjB,aAAa,CAACQ,qBAAqB,GAAGN,WAAW;IACjDF,aAAa,CAACU,qBAAqB,GAAGP,WAAW;EACrD;AACJ;AACAT,OAAO,CAACE,2BAA2B,GAAGA,2BAA2B"},"metadata":{},"sourceType":"script","externalDependencies":[]}