{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\LEARN REACTJS\\\\Frontend-ReactJS-QuickStart\\\\src\\\\containers\\\\System\\\\Admin\\\\TableManageUser.js\";\nimport React, { Component } from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { connect } from 'react-redux';\nimport './TableManageUser.scss';\nimport * as actions from \"../../../store/actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass TableManageUser extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleDeleteUser = user => {\n      this.props.deleteAUserRedux(user.id);\n    };\n\n    this.handleEditUser = user => {\n      console.log(' check user edit', user);\n      this.props.handleEditUserFromParentKey(user);\n    };\n\n    this.state = {\n      usersRedux: []\n    };\n  }\n\n  componentDidMount() {\n    this.props.fetchUserRedux();\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    console.log('TableManageUser la', prevProps);\n\n    if (prevProps.listUsers !== this.props.listUsers) {\n      this.setState({\n        usersRedux: this.props.listUsers\n      });\n    }\n  }\n\n  render() {\n    console.log('check all users', this.props.listUsers);\n    console.log('check state', this.state.usersRedux);\n    let arrUsers = this.state.usersRedux;\n    return /*#__PURE__*/_jsxDEV(\"table\", {\n      id: \"TableManageUser\",\n      children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"First Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Last Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this), arrUsers && arrUsers.length > 0 && arrUsers.map((item, index) => {\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.firstName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.lastName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.address\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => this.handleEditUser(item),\n                className: \"btn-edit \",\n                children: /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"fas fa-pencil-alt\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 59,\n                  columnNumber: 63\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => this.handleDeleteUser(item),\n                className: \"btn-delete\",\n                children: /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"fas fa-trash\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 60,\n                  columnNumber: 116\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 37\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 33\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    listUsers: state.admin.users\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchUserRedux: () => dispatch(actions.fetchAllUsersStart()),\n    deleteAUserRedux: id => dispatch(actions.deleteAUser(id))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TableManageUser);","map":{"version":3,"sources":["C:/Users/Admin/Desktop/LEARN REACTJS/Frontend-ReactJS-QuickStart/src/containers/System/Admin/TableManageUser.js"],"names":["React","Component","FormattedMessage","connect","actions","TableManageUser","constructor","props","handleDeleteUser","user","deleteAUserRedux","id","handleEditUser","console","log","handleEditUserFromParentKey","state","usersRedux","componentDidMount","fetchUserRedux","componentDidUpdate","prevProps","prevState","snapshot","listUsers","setState","render","arrUsers","length","map","item","index","email","firstName","lastName","address","mapStateToProps","admin","users","mapDispatchToProps","dispatch","fetchAllUsersStart","deleteAUser"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,gBAAT,QAAiC,YAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,wBAAP;AACA,OAAO,KAAKC,OAAZ,MAAyB,wBAAzB;;;AACA,MAAMC,eAAN,SAA8BJ,SAA9B,CAAwC;AACpCK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAmBnBC,gBAnBmB,GAmBCC,IAAD,IAAU;AAC1B,WAAKF,KAAL,CAAWG,gBAAX,CAA4BD,IAAI,CAACE,EAAjC;AACF,KArBkB;;AAAA,SAsBnBC,cAtBmB,GAsBDH,IAAD,IAAU;AACvBI,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCL,IAAhC;AACA,WAAKF,KAAL,CAAWQ,2BAAX,CAAuCN,IAAvC;AACH,KAzBkB;;AAEf,SAAKO,KAAL,GAAa;AACTC,MAAAA,UAAU,EAAE;AADH,KAAb;AAGH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChB,SAAKX,KAAL,CAAWY,cAAX;AACH;;AACDC,EAAAA,kBAAkB,CAACC,SAAD,EAAYC,SAAZ,EAAuBC,QAAvB,EAAiC;AAC/CV,IAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCO,SAAlC;;AACA,QAAIA,SAAS,CAACG,SAAV,KAAwB,KAAKjB,KAAL,CAAWiB,SAAvC,EAAkD;AAC9C,WAAKC,QAAL,CAAc;AACVR,QAAAA,UAAU,EAAE,KAAKV,KAAL,CAAWiB;AADb,OAAd;AAIH;AACJ;;AAQDE,EAAAA,MAAM,GAAG;AACLb,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+B,KAAKP,KAAL,CAAWiB,SAA1C;AACAX,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2B,KAAKE,KAAL,CAAWC,UAAtC;AACA,QAAIU,QAAQ,GAAG,KAAKX,KAAL,CAAWC,UAA1B;AACA,wBAEI;AAAO,MAAA,EAAE,EAAC,iBAAV;AAAA,6BACI;AAAA,gCACI;AAAA,kCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAQKU,QAAQ,IAAIA,QAAQ,CAACC,MAAT,GAAkB,CAA9B,IACGD,QAAQ,CAACE,GAAT,CAAa,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAC1B,8BACI;AAAA,oCACI;AAAA,wBAAKD,IAAI,CAACE;AAAV;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAA,wBAAKF,IAAI,CAACG;AAAV;AAAA;AAAA;AAAA;AAAA,oBAFJ,eAGI;AAAA,wBAAKH,IAAI,CAACI;AAAV;AAAA;AAAA;AAAA;AAAA,oBAHJ,eAII;AAAA,wBAAKJ,IAAI,CAACK;AAAV;AAAA;AAAA;AAAA;AAAA,oBAJJ,eAKI;AAAA,sCACI;AACA,gBAAA,OAAO,EAAE,MAAI,KAAKvB,cAAL,CAAoBkB,IAApB,CADb;AAEA,gBAAA,SAAS,EAAC,WAFV;AAAA,uCAEsB;AAAG,kBAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AAFtB;AAAA;AAAA;AAAA;AAAA,sBADJ,eAII;AAAQ,gBAAA,OAAO,EAAE,MAAM,KAAKtB,gBAAL,CAAsBsB,IAAtB,CAAvB;AAAoD,gBAAA,SAAS,EAAC,YAA9D;AAAA,uCAA2E;AAAG,kBAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AAA3E;AAAA;AAAA;AAAA;AAAA,sBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBALJ;AAAA,aAASC,KAAT;AAAA;AAAA;AAAA;AAAA,kBADJ;AAcH,SAfD,CATR;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAFJ;AAiCH;;AAhEmC;;AAoExC,MAAMK,eAAe,GAAGpB,KAAK,IAAI;AAC7B,SAAO;AACHQ,IAAAA,SAAS,EAAER,KAAK,CAACqB,KAAN,CAAYC;AADpB,GAAP;AAGH,CAJD;;AAMA,MAAMC,kBAAkB,GAAGC,QAAQ,IAAI;AACnC,SAAO;AACHrB,IAAAA,cAAc,EAAE,MAAMqB,QAAQ,CAACpC,OAAO,CAACqC,kBAAR,EAAD,CAD3B;AAEH/B,IAAAA,gBAAgB,EAAGC,EAAD,IAAQ6B,QAAQ,CAACpC,OAAO,CAACsC,WAAR,CAAoB/B,EAApB,CAAD;AAF/B,GAAP;AAIH,CALD;;AAOA,eAAeR,OAAO,CAACiC,eAAD,EAAkBG,kBAAlB,CAAP,CAA6ClC,eAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport { connect } from 'react-redux';\r\nimport './TableManageUser.scss'\r\nimport * as actions from \"../../../store/actions\"\r\nclass TableManageUser extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            usersRedux: []\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.fetchUserRedux();\r\n    }\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        console.log('TableManageUser la', prevProps)\r\n        if (prevProps.listUsers !== this.props.listUsers) {\r\n            this.setState({\r\n                usersRedux: this.props.listUsers\r\n            })\r\n\r\n        }\r\n    }\r\n    handleDeleteUser = (user) => {\r\n       this.props.deleteAUserRedux(user.id)\r\n    }\r\n    handleEditUser = (user) => {\r\n        console.log(' check user edit', user)\r\n        this.props.handleEditUserFromParentKey(user)\r\n    }\r\n    render() {\r\n        console.log('check all users', this.props.listUsers)\r\n        console.log('check state', this.state.usersRedux)\r\n        let arrUsers = this.state.usersRedux;\r\n        return (\r\n\r\n            <table id=\"TableManageUser\">\r\n                <tbody>\r\n                    <tr>\r\n                        <th>Email</th>\r\n                        <th>First Name</th>\r\n                        <th>Last Name</th>\r\n                        <th>Address</th>\r\n                        <th>Actions</th>\r\n                    </tr>\r\n                    {arrUsers && arrUsers.length > 0 &&\r\n                        arrUsers.map((item, index) => {\r\n                            return (\r\n                                <tr key={index}>\r\n                                    <td>{item.email}</td>\r\n                                    <td>{item.firstName}</td>\r\n                                    <td>{item.lastName}</td>\r\n                                    <td>{item.address}</td>\r\n                                    <td>\r\n                                        <button\r\n                                        onClick={()=>this.handleEditUser(item)}\r\n                                        className=\"btn-edit \"><i className=\"fas fa-pencil-alt\"></i></button>\r\n                                        <button onClick={() => this.handleDeleteUser(item)} className=\"btn-delete\"><i className=\"fas fa-trash\"></i></button>\r\n                                    </td>\r\n                                </tr>\r\n                            )\r\n                        })\r\n                    }\r\n\r\n                </tbody>\r\n            </table>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        listUsers: state.admin.users\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        fetchUserRedux: () => dispatch(actions.fetchAllUsersStart()),\r\n        deleteAUserRedux: (id) => dispatch(actions.deleteAUser(id))\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TableManageUser);\r\n"]},"metadata":{},"sourceType":"module"}