{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MakePartsList = void 0;\nvar PartitionPattern_1 = require(\"../PartitionPattern\");\nvar utils_1 = require(\"../utils\");\nfunction MakePartsList(pattern, unit, parts) {\n  var patternParts = PartitionPattern_1.PartitionPattern(pattern);\n  var result = [];\n  for (var _i = 0, patternParts_1 = patternParts; _i < patternParts_1.length; _i++) {\n    var patternPart = patternParts_1[_i];\n    if (patternPart.type === 'literal') {\n      result.push({\n        type: 'literal',\n        value: patternPart.value\n      });\n    } else {\n      utils_1.invariant(patternPart.type === '0', \"Malformed pattern \" + pattern);\n      for (var _a = 0, parts_1 = parts; _a < parts_1.length; _a++) {\n        var part = parts_1[_a];\n        result.push({\n          type: part.type,\n          value: part.value,\n          unit: unit\n        });\n      }\n    }\n  }\n  return result;\n}\nexports.MakePartsList = MakePartsList;","map":{"version":3,"names":["Object","defineProperty","exports","value","MakePartsList","PartitionPattern_1","require","utils_1","pattern","unit","parts","patternParts","PartitionPattern","result","_i","patternParts_1","length","patternPart","type","push","invariant","_a","parts_1","part"],"sources":["C:/Users/Admin/Desktop/LEARN REACTJS/Frontend-ReactJS-QuickStart/node_modules/@formatjs/intl-relativetimeformat/node_modules/@formatjs/ecma402-abstract/RelativeTimeFormat/MakePartsList.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MakePartsList = void 0;\nvar PartitionPattern_1 = require(\"../PartitionPattern\");\nvar utils_1 = require(\"../utils\");\nfunction MakePartsList(pattern, unit, parts) {\n    var patternParts = PartitionPattern_1.PartitionPattern(pattern);\n    var result = [];\n    for (var _i = 0, patternParts_1 = patternParts; _i < patternParts_1.length; _i++) {\n        var patternPart = patternParts_1[_i];\n        if (patternPart.type === 'literal') {\n            result.push({\n                type: 'literal',\n                value: patternPart.value,\n            });\n        }\n        else {\n            utils_1.invariant(patternPart.type === '0', \"Malformed pattern \" + pattern);\n            for (var _a = 0, parts_1 = parts; _a < parts_1.length; _a++) {\n                var part = parts_1[_a];\n                result.push({\n                    type: part.type,\n                    value: part.value,\n                    unit: unit,\n                });\n            }\n        }\n    }\n    return result;\n}\nexports.MakePartsList = MakePartsList;\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,aAAa,GAAG,KAAK,CAAC;AAC9B,IAAIC,kBAAkB,GAAGC,OAAO,CAAC,qBAAqB,CAAC;AACvD,IAAIC,OAAO,GAAGD,OAAO,CAAC,UAAU,CAAC;AACjC,SAASF,aAAaA,CAACI,OAAO,EAAEC,IAAI,EAAEC,KAAK,EAAE;EACzC,IAAIC,YAAY,GAAGN,kBAAkB,CAACO,gBAAgB,CAACJ,OAAO,CAAC;EAC/D,IAAIK,MAAM,GAAG,EAAE;EACf,KAAK,IAAIC,EAAE,GAAG,CAAC,EAAEC,cAAc,GAAGJ,YAAY,EAAEG,EAAE,GAAGC,cAAc,CAACC,MAAM,EAAEF,EAAE,EAAE,EAAE;IAC9E,IAAIG,WAAW,GAAGF,cAAc,CAACD,EAAE,CAAC;IACpC,IAAIG,WAAW,CAACC,IAAI,KAAK,SAAS,EAAE;MAChCL,MAAM,CAACM,IAAI,CAAC;QACRD,IAAI,EAAE,SAAS;QACff,KAAK,EAAEc,WAAW,CAACd;MACvB,CAAC,CAAC;IACN,CAAC,MACI;MACDI,OAAO,CAACa,SAAS,CAACH,WAAW,CAACC,IAAI,KAAK,GAAG,EAAE,oBAAoB,GAAGV,OAAO,CAAC;MAC3E,KAAK,IAAIa,EAAE,GAAG,CAAC,EAAEC,OAAO,GAAGZ,KAAK,EAAEW,EAAE,GAAGC,OAAO,CAACN,MAAM,EAAEK,EAAE,EAAE,EAAE;QACzD,IAAIE,IAAI,GAAGD,OAAO,CAACD,EAAE,CAAC;QACtBR,MAAM,CAACM,IAAI,CAAC;UACRD,IAAI,EAAEK,IAAI,CAACL,IAAI;UACff,KAAK,EAAEoB,IAAI,CAACpB,KAAK;UACjBM,IAAI,EAAEA;QACV,CAAC,CAAC;MACN;IACJ;EACJ;EACA,OAAOI,MAAM;AACjB;AACAX,OAAO,CAACE,aAAa,GAAGA,aAAa"},"metadata":{},"sourceType":"script","externalDependencies":[]}