{"ast":null,"code":"/**\n * this is a set which automatically forgets\n * a given entry when a new entry is set and the ttl\n * of the old one is over\n * @constructor\n */\nvar ObliviousSet = function ObliviousSet(ttl) {\n  var set = new Set();\n  var timeMap = new Map();\n  this.has = set.has.bind(set);\n  this.add = function (value) {\n    timeMap.set(value, now());\n    set.add(value);\n    _removeTooOldValues();\n  };\n  this.clear = function () {\n    set.clear();\n    timeMap.clear();\n  };\n  function _removeTooOldValues() {\n    var olderThen = now() - ttl;\n    var iterator = set[Symbol.iterator]();\n    while (true) {\n      var value = iterator.next().value;\n      if (!value) return; // no more elements\n\n      var time = timeMap.get(value);\n      if (time < olderThen) {\n        timeMap[\"delete\"](value);\n        set[\"delete\"](value);\n      } else {\n        // we reached a value that is not old enough\n        return;\n      }\n    }\n  }\n};\nfunction now() {\n  return new Date().getTime();\n}\nexport default ObliviousSet;","map":{"version":3,"names":["ObliviousSet","ttl","set","Set","timeMap","Map","has","bind","add","value","now","_removeTooOldValues","clear","olderThen","iterator","Symbol","next","time","get","Date","getTime"],"sources":["C:/Users/Admin/Desktop/LEARN REACTJS/Frontend-ReactJS-QuickStart/node_modules/broadcast-channel/dist/es/oblivious-set.js"],"sourcesContent":["/**\n * this is a set which automatically forgets\n * a given entry when a new entry is set and the ttl\n * of the old one is over\n * @constructor\n */\nvar ObliviousSet = function ObliviousSet(ttl) {\n  var set = new Set();\n  var timeMap = new Map();\n  this.has = set.has.bind(set);\n\n  this.add = function (value) {\n    timeMap.set(value, now());\n    set.add(value);\n\n    _removeTooOldValues();\n  };\n\n  this.clear = function () {\n    set.clear();\n    timeMap.clear();\n  };\n\n  function _removeTooOldValues() {\n    var olderThen = now() - ttl;\n    var iterator = set[Symbol.iterator]();\n\n    while (true) {\n      var value = iterator.next().value;\n      if (!value) return; // no more elements\n\n      var time = timeMap.get(value);\n\n      if (time < olderThen) {\n        timeMap[\"delete\"](value);\n        set[\"delete\"](value);\n      } else {\n        // we reached a value that is not old enough\n        return;\n      }\n    }\n  }\n};\n\nfunction now() {\n  return new Date().getTime();\n}\n\nexport default ObliviousSet;"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIA,YAAY,GAAG,SAASA,YAAYA,CAACC,GAAG,EAAE;EAC5C,IAAIC,GAAG,GAAG,IAAIC,GAAG,CAAC,CAAC;EACnB,IAAIC,OAAO,GAAG,IAAIC,GAAG,CAAC,CAAC;EACvB,IAAI,CAACC,GAAG,GAAGJ,GAAG,CAACI,GAAG,CAACC,IAAI,CAACL,GAAG,CAAC;EAE5B,IAAI,CAACM,GAAG,GAAG,UAAUC,KAAK,EAAE;IAC1BL,OAAO,CAACF,GAAG,CAACO,KAAK,EAAEC,GAAG,CAAC,CAAC,CAAC;IACzBR,GAAG,CAACM,GAAG,CAACC,KAAK,CAAC;IAEdE,mBAAmB,CAAC,CAAC;EACvB,CAAC;EAED,IAAI,CAACC,KAAK,GAAG,YAAY;IACvBV,GAAG,CAACU,KAAK,CAAC,CAAC;IACXR,OAAO,CAACQ,KAAK,CAAC,CAAC;EACjB,CAAC;EAED,SAASD,mBAAmBA,CAAA,EAAG;IAC7B,IAAIE,SAAS,GAAGH,GAAG,CAAC,CAAC,GAAGT,GAAG;IAC3B,IAAIa,QAAQ,GAAGZ,GAAG,CAACa,MAAM,CAACD,QAAQ,CAAC,CAAC,CAAC;IAErC,OAAO,IAAI,EAAE;MACX,IAAIL,KAAK,GAAGK,QAAQ,CAACE,IAAI,CAAC,CAAC,CAACP,KAAK;MACjC,IAAI,CAACA,KAAK,EAAE,OAAO,CAAC;;MAEpB,IAAIQ,IAAI,GAAGb,OAAO,CAACc,GAAG,CAACT,KAAK,CAAC;MAE7B,IAAIQ,IAAI,GAAGJ,SAAS,EAAE;QACpBT,OAAO,CAAC,QAAQ,CAAC,CAACK,KAAK,CAAC;QACxBP,GAAG,CAAC,QAAQ,CAAC,CAACO,KAAK,CAAC;MACtB,CAAC,MAAM;QACL;QACA;MACF;IACF;EACF;AACF,CAAC;AAED,SAASC,GAAGA,CAAA,EAAG;EACb,OAAO,IAAIS,IAAI,CAAC,CAAC,CAACC,OAAO,CAAC,CAAC;AAC7B;AAEA,eAAepB,YAAY"},"metadata":{},"sourceType":"module"}