{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Desktop/Frontend-ReactJS-QuickStart/src/routes/Home.js\";\nimport React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Home extends Component {\n  render() {\n    const {\n      isLoggedIn\n    } = this.props;\n    let linkToRedirect = isLoggedIn ? '/system/user-manage' : '/login';\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: linkToRedirect\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    isLoggedIn: state.user.isLoggedIn\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);","map":{"version":3,"sources":["/Users/macbook/Desktop/Frontend-ReactJS-QuickStart/src/routes/Home.js"],"names":["React","Component","Redirect","connect","Home","render","isLoggedIn","props","linkToRedirect","mapStateToProps","state","user","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,SAASC,OAAT,QAAwB,aAAxB;;;AAEA,MAAMC,IAAN,SAAmBH,SAAnB,CAA6B;AAEzBI,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEC,MAAAA;AAAF,QAAiB,KAAKC,KAA5B;AACA,QAAIC,cAAc,GAAGF,UAAU,GAAG,qBAAH,GAA2B,QAA1D;AAEA,wBACI,QAAC,QAAD;AAAU,MAAA,EAAE,EAAEE;AAAd;AAAA;AAAA;AAAA;AAAA,YADJ;AAGH;;AATwB;;AAa7B,MAAMC,eAAe,GAAGC,KAAK,IAAI;AAC7B,SAAO;AACHJ,IAAAA,UAAU,EAAEI,KAAK,CAACC,IAAN,CAAWL;AADpB,GAAP;AAGH,CAJD;;AAMA,MAAMM,kBAAkB,GAAGC,QAAQ,IAAI;AACnC,SAAO,EAAP;AAEH,CAHD;;AAKA,eAAeV,OAAO,CAACM,eAAD,EAAkBG,kBAAlB,CAAP,CAA6CR,IAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nclass Home extends Component {\n\n    render() {\n        const { isLoggedIn } = this.props;\n        let linkToRedirect = isLoggedIn ? '/system/user-manage' : '/login';\n\n        return (\n            <Redirect to={linkToRedirect} />\n        );\n    }\n\n}\n\nconst mapStateToProps = state => {\n    return {\n        isLoggedIn: state.user.isLoggedIn\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\n"]},"metadata":{},"sourceType":"module"}