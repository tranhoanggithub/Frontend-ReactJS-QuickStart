{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\LEARN REACTJS\\\\Frontend-ReactJS-QuickStart\\\\src\\\\containers\\\\Patient\\\\Doctor\\\\DoctorExtraInfor.js\";\nimport React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport HomeHeader from \"../../HomePage/HomeHeader\";\nimport '../Doctor/DoctorExTraInfor.scss';\nimport { Select } from 'react-select/dist/Select-fd7cb895.cjs.prod';\nimport moment from 'moment';\nimport localization from 'moment/locale/vi';\nimport { LANGUAGES } from '../../../utils';\nimport { getExtraInforDoctorById } from '../../../services/userService';\nimport { FormattedMessage } from 'react-intl';\nimport NumberFormat from 'react-number-format';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass DoctorExtraInfor extends Component {\n  constructor(props) {\n    super(props);\n\n    this.isShowDetailInfor = status => {\n      this.setState({\n        isShowDetailInfor: status\n      });\n    };\n\n    this.state = {\n      isShowDetailInfor: false,\n      extraInfor: {}\n    };\n  }\n\n  async componentDidMount() {}\n\n  async componentDidUpdate(prevProps, prevState, snapshot) {\n    if (this.props.language !== prevProps.language) {}\n\n    if (this.props.doctorIdFromParent !== prevProps.doctorIdFromParent) {\n      let res = await getExtraInforDoctorById(this.props.doctorIdFromParent);\n\n      if (res && res.errCode === 0) {\n        this.setState({\n          extraInfor: res.data\n        });\n      }\n\n      this.setState({\n        extraInfor: res.data\n      });\n    }\n  }\n\n  render() {\n    let {\n      isShowDetailInfor,\n      extraInfor\n    } = this.state;\n    let {\n      language\n    } = this.props;\n    console.log(\"ooooooooooooo\", this.state);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"doctor-extra-infor-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content-up\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-address\",\n          children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n            id: \"patient.extra-infor-doctor.text-address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"name-clinic\",\n          children: extraInfor && extraInfor.nameClinic ? extraInfor.nameClinic : ''\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"detail-address\",\n          children: extraInfor && extraInfor.addressClinic ? extraInfor.addressClinic : ''\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content-down\",\n        children: [isShowDetailInfor === false && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"short-infor\",\n          children: [/*#__PURE__*/_jsxDEV(FormattedMessage, {\n            id: \"patient.extra-infor-doctor.price\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 29\n          }, this), extraInfor && extraInfor.priceTypeData && language === LANGUAGES.VI && /*#__PURE__*/_jsxDEV(NumberFormat, {\n            className: \"currency\",\n            value: extraInfor.priceTypeData.valueVi,\n            displayType: 'text',\n            thousandSeparator: true,\n            suffix: 'VNĐ'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 33\n          }, this), extraInfor && extraInfor.priceTypeData && language === LANGUAGES.EN && /*#__PURE__*/_jsxDEV(NumberFormat, {\n            className: \"currency\",\n            value: extraInfor.priceTypeData.valueEn,\n            displayType: 'text',\n            thousandSeparator: true,\n            suffix: '$'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"detail\",\n            onClick: () => this.isShowDetailInfor(true),\n            children: [\" \", /*#__PURE__*/_jsxDEV(FormattedMessage, {\n              id: \"patient.extra-infor-doctor.detail\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 100\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 25\n        }, this), isShowDetailInfor === true && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"title-price\",\n            children: [\" \", /*#__PURE__*/_jsxDEV(FormattedMessage, {\n              id: \"patient.extra-infor-doctor.price\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 59\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"detail-infor\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"price\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"left\",\n                children: [\" \", /*#__PURE__*/_jsxDEV(FormattedMessage, {\n                  id: \"patient.extra-infor-doctor.price\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 97,\n                  columnNumber: 61\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"right\",\n                children: [extraInfor && extraInfor.priceTypeData && language === LANGUAGES.VI && /*#__PURE__*/_jsxDEV(NumberFormat, {\n                  className: \"currency\",\n                  value: extraInfor.priceTypeData.valueVi,\n                  displayType: 'text',\n                  thousandSeparator: true,\n                  suffix: 'VNĐ'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 101,\n                  columnNumber: 45\n                }, this), extraInfor && extraInfor.priceTypeData && language === LANGUAGES.EN && /*#__PURE__*/_jsxDEV(NumberFormat, {\n                  className: \"currency\",\n                  value: extraInfor.priceTypeData.valueEn,\n                  displayType: 'text',\n                  thousandSeparator: true,\n                  suffix: '$'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 112,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"note\",\n              children: extraInfor && extraInfor.note ? extraInfor.note : ''\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"payment\",\n            children: [\"   \", /*#__PURE__*/_jsxDEV(FormattedMessage, {\n              id: \"patient.extra-infor-doctor.payment\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 57\n            }, this), extraInfor && extraInfor.paymentTypeData && language === LANGUAGES.VI ? extraInfor.paymentTypeData.valueVi : '', extraInfor && extraInfor.paymentTypeData && language === LANGUAGES.EN ? extraInfor.paymentTypeData.valueEn : '']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"hide-price\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              onClick: () => this.isShowDetailInfor(false),\n              children: [\"   \", /*#__PURE__*/_jsxDEV(FormattedMessage, {\n                id: \"patient.extra-infor-doctor.hide-price\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 112\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 57\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    language: state.app.language\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DoctorExtraInfor);","map":{"version":3,"sources":["C:/Users/Admin/Desktop/LEARN REACTJS/Frontend-ReactJS-QuickStart/src/containers/Patient/Doctor/DoctorExtraInfor.js"],"names":["React","Component","connect","HomeHeader","Select","moment","localization","LANGUAGES","getExtraInforDoctorById","FormattedMessage","NumberFormat","DoctorExtraInfor","constructor","props","isShowDetailInfor","status","setState","state","extraInfor","componentDidMount","componentDidUpdate","prevProps","prevState","snapshot","language","doctorIdFromParent","res","errCode","data","render","console","log","nameClinic","addressClinic","priceTypeData","VI","valueVi","EN","valueEn","note","paymentTypeData","mapStateToProps","app","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,OAAO,iCAAP;AACA,SAASC,MAAT,QAAuB,4CAAvB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,YAAP,MAAyB,kBAAzB;AACA,SAASC,SAAT,QAA0B,gBAA1B;AACA,SAASC,uBAAT,QAAwC,+BAAxC;AACA,SAASC,gBAAT,QAAiC,YAAjC;AACA,OAAOC,YAAP,MAAyB,qBAAzB;;;;AAKA,MAAMC,gBAAN,SAA+BV,SAA/B,CAAyC;AACrCW,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SA4BnBC,iBA5BmB,GA4BEC,MAAD,IAAY;AAC5B,WAAKC,QAAL,CAAc;AACVF,QAAAA,iBAAiB,EAAEC;AADT,OAAd;AAGH,KAhCkB;;AAEf,SAAKE,KAAL,GAAa;AACTH,MAAAA,iBAAiB,EAAE,KADV;AAETI,MAAAA,UAAU,EAAE;AAFH,KAAb;AAIH;;AAEsB,QAAjBC,iBAAiB,GAAG,CAEzB;;AACuB,QAAlBC,kBAAkB,CAACC,SAAD,EAAYC,SAAZ,EAAuBC,QAAvB,EAAiC;AACrD,QAAI,KAAKV,KAAL,CAAWW,QAAX,KAAwBH,SAAS,CAACG,QAAtC,EAAgD,CAE/C;;AACD,QAAI,KAAKX,KAAL,CAAWY,kBAAX,KAAkCJ,SAAS,CAACI,kBAAhD,EAAoE;AAChE,UAAIC,GAAG,GAAG,MAAMlB,uBAAuB,CAAC,KAAKK,KAAL,CAAWY,kBAAZ,CAAvC;;AACA,UAAIC,GAAG,IAAIA,GAAG,CAACC,OAAJ,KAAgB,CAA3B,EAA8B;AAC1B,aAAKX,QAAL,CAAc;AACVE,UAAAA,UAAU,EAAEQ,GAAG,CAACE;AADN,SAAd;AAGH;;AACD,WAAKZ,QAAL,CAAc;AACVE,QAAAA,UAAU,EAAEQ,GAAG,CAACE;AADN,OAAd;AAGH;AACJ;;AAODC,EAAAA,MAAM,GAAG;AACL,QAAI;AAAEf,MAAAA,iBAAF;AAAqBI,MAAAA;AAArB,QAAoC,KAAKD,KAA7C;AACA,QAAI;AAAEO,MAAAA;AAAF,QAAe,KAAKX,KAAxB;AACAiB,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6B,KAAKd,KAAlC;AACA,wBACI;AAAK,MAAA,SAAS,EAAC,8BAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC,cAAf;AAAA,iCACI,QAAC,gBAAD;AAAkB,YAAA,EAAE,EAAC;AAArB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAII;AAAK,UAAA,SAAS,EAAC,aAAf;AAAA,oBAA8BC,UAAU,IAAIA,UAAU,CAACc,UAAzB,GAAsCd,UAAU,CAACc,UAAjD,GAA8D;AAA5F;AAAA;AAAA;AAAA;AAAA,gBAJJ,eAKI;AAAK,UAAA,SAAS,EAAC,gBAAf;AAAA,oBAAiCd,UAAU,IAAIA,UAAU,CAACe,aAAzB,GAAyCf,UAAU,CAACe,aAApD,GAAoE;AAArG;AAAA;AAAA;AAAA;AAAA,gBALJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAQI;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,mBACKnB,iBAAiB,KAAK,KAAtB,iBACG;AAAK,UAAA,SAAS,EAAC,aAAf;AAAA,kCACI,QAAC,gBAAD;AAAkB,YAAA,EAAE,EAAC;AAArB;AAAA;AAAA;AAAA;AAAA,kBADJ,EAEKI,UAAU,IAAIA,UAAU,CAACgB,aAAzB,IAA0CV,QAAQ,KAAKjB,SAAS,CAAC4B,EAAjE,iBAEG,QAAC,YAAD;AACI,YAAA,SAAS,EAAC,UADd;AAEI,YAAA,KAAK,EAAEjB,UAAU,CAACgB,aAAX,CAAyBE,OAFpC;AAGI,YAAA,WAAW,EAAE,MAHjB;AAII,YAAA,iBAAiB,EAAE,IAJvB;AAKI,YAAA,MAAM,EAAE;AALZ;AAAA;AAAA;AAAA;AAAA,kBAJR,EAaKlB,UAAU,IAAIA,UAAU,CAACgB,aAAzB,IAA0CV,QAAQ,KAAKjB,SAAS,CAAC8B,EAAjE,iBAEG,QAAC,YAAD;AACI,YAAA,SAAS,EAAC,UADd;AAEI,YAAA,KAAK,EAAEnB,UAAU,CAACgB,aAAX,CAAyBI,OAFpC;AAGI,YAAA,WAAW,EAAE,MAHjB;AAII,YAAA,iBAAiB,EAAE,IAJvB;AAKI,YAAA,MAAM,EAAE;AALZ;AAAA;AAAA;AAAA;AAAA,kBAfR,eAwBI;AAAM,YAAA,SAAS,EAAC,QAAhB;AAAyB,YAAA,OAAO,EAAE,MAAM,KAAKxB,iBAAL,CAAuB,IAAvB,CAAxC;AAAA,uBAAsE,GAAtE,eAAuE,QAAC,gBAAD;AAAkB,cAAA,EAAE,EAAC;AAArB;AAAA;AAAA;AAAA;AAAA,oBAAvE;AAAA;AAAA;AAAA;AAAA;AAAA,kBAxBJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFR,EA6BKA,iBAAiB,KAAK,IAAtB,iBACG;AAAA,kCACI;AAAK,YAAA,SAAS,EAAC,aAAf;AAAA,uBAA6B,GAA7B,eAA8B,QAAC,gBAAD;AAAkB,cAAA,EAAE,EAAC;AAArB;AAAA;AAAA;AAAA;AAAA,oBAA9B;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAK,YAAA,SAAS,EAAC,cAAf;AAAA,oCACI;AAAK,cAAA,SAAS,EAAC,OAAf;AAAA,sCACI;AAAM,gBAAA,SAAS,EAAC,MAAhB;AAAA,2BAAuB,GAAvB,eAAwB,QAAC,gBAAD;AAAkB,kBAAA,EAAE,EAAC;AAArB;AAAA;AAAA;AAAA;AAAA,wBAAxB;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI;AAAM,gBAAA,SAAS,EAAC,OAAhB;AAAA,2BACKI,UAAU,IAAIA,UAAU,CAACgB,aAAzB,IAA0CV,QAAQ,KAAKjB,SAAS,CAAC4B,EAAjE,iBAEG,QAAC,YAAD;AACI,kBAAA,SAAS,EAAC,UADd;AAEI,kBAAA,KAAK,EAAEjB,UAAU,CAACgB,aAAX,CAAyBE,OAFpC;AAGI,kBAAA,WAAW,EAAE,MAHjB;AAII,kBAAA,iBAAiB,EAAE,IAJvB;AAKI,kBAAA,MAAM,EAAE;AALZ;AAAA;AAAA;AAAA;AAAA,wBAHR,EAYKlB,UAAU,IAAIA,UAAU,CAACgB,aAAzB,IAA0CV,QAAQ,KAAKjB,SAAS,CAAC8B,EAAjE,iBAEG,QAAC,YAAD;AACI,kBAAA,SAAS,EAAC,UADd;AAEI,kBAAA,KAAK,EAAEnB,UAAU,CAACgB,aAAX,CAAyBI,OAFpC;AAGI,kBAAA,WAAW,EAAE,MAHjB;AAII,kBAAA,iBAAiB,EAAE,IAJvB;AAKI,kBAAA,MAAM,EAAE;AALZ;AAAA;AAAA;AAAA;AAAA,wBAdR;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eA2BI;AAAK,cAAA,SAAS,EAAC,MAAf;AAAA,wBACKpB,UAAU,IAAIA,UAAU,CAACqB,IAAzB,GAAgCrB,UAAU,CAACqB,IAA3C,GAAkD;AADvD;AAAA;AAAA;AAAA;AAAA,oBA3BJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAiCI;AAAK,YAAA,SAAS,EAAC,SAAf;AAAA,uBAAyB,KAAzB,eAA4B,QAAC,gBAAD;AAAkB,cAAA,EAAE,EAAC;AAArB;AAAA;AAAA;AAAA;AAAA,oBAA5B,EACKrB,UAAU,IAAIA,UAAU,CAACsB,eAAzB,IAA4ChB,QAAQ,KAAKjB,SAAS,CAAC4B,EAAnE,GAAwEjB,UAAU,CAACsB,eAAX,CAA2BJ,OAAnG,GAA6G,EADlH,EAEKlB,UAAU,IAAIA,UAAU,CAACsB,eAAzB,IAA4ChB,QAAQ,KAAKjB,SAAS,CAAC8B,EAAnE,GAAwEnB,UAAU,CAACsB,eAAX,CAA2BF,OAAnG,GAA6G,EAFlH;AAAA;AAAA;AAAA;AAAA;AAAA,kBAjCJ,eAqCI;AAAK,YAAA,SAAS,EAAC,YAAf;AAAA,mCAA4B;AAAM,cAAA,OAAO,EAAE,MAAM,KAAKxB,iBAAL,CAAuB,KAAvB,CAArB;AAAA,yBAAoD,KAApD,eAAuD,QAAC,gBAAD;AAAkB,gBAAA,EAAE,EAAC;AAArB;AAAA;AAAA;AAAA;AAAA,sBAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAA5B;AAAA;AAAA;AAAA;AAAA,kBArCJ;AAAA,wBA9BR;AAAA;AAAA;AAAA;AAAA;AAAA,cARJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAkFH;;AAxHoC;;AA2HzC,MAAM2B,eAAe,GAAGxB,KAAK,IAAI;AAC7B,SAAO;AACHO,IAAAA,QAAQ,EAAEP,KAAK,CAACyB,GAAN,CAAUlB;AADjB,GAAP;AAGH,CAJD;;AAMA,MAAMmB,kBAAkB,GAAGC,QAAQ,IAAI;AACnC,SAAO,EAAP;AAEH,CAHD;;AAKA,eAAe1C,OAAO,CAACuC,eAAD,EAAkBE,kBAAlB,CAAP,CAA6ChC,gBAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport HomeHeader from \"../../HomePage/HomeHeader\";\r\nimport '../Doctor/DoctorExTraInfor.scss';\r\nimport { Select } from 'react-select/dist/Select-fd7cb895.cjs.prod';\r\nimport moment from 'moment';\r\nimport localization from 'moment/locale/vi';\r\nimport { LANGUAGES } from '../../../utils';\r\nimport { getExtraInforDoctorById } from '../../../services/userService';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport NumberFormat from 'react-number-format';\r\n\r\n\r\n\r\n\r\nclass DoctorExtraInfor extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isShowDetailInfor: false,\r\n            extraInfor: {}\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n\r\n    }\r\n    async componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.language !== prevProps.language) {\r\n\r\n        }\r\n        if (this.props.doctorIdFromParent !== prevProps.doctorIdFromParent) {\r\n            let res = await getExtraInforDoctorById(this.props.doctorIdFromParent);\r\n            if (res && res.errCode === 0) {\r\n                this.setState({\r\n                    extraInfor: res.data\r\n                })\r\n            }\r\n            this.setState({\r\n                extraInfor: res.data\r\n            })\r\n        }\r\n    }\r\n\r\n    isShowDetailInfor = (status) => {\r\n        this.setState({\r\n            isShowDetailInfor: status\r\n        })\r\n    }\r\n    render() {\r\n        let { isShowDetailInfor, extraInfor } = this.state;\r\n        let { language } = this.props;\r\n        console.log(\"ooooooooooooo\", this.state)\r\n        return (\r\n            <div className=\"doctor-extra-infor-container\">\r\n                <div className=\"content-up\">\r\n                    <div className=\"text-address\">\r\n                        <FormattedMessage id=\"patient.extra-infor-doctor.text-address\" />\r\n                    </div>\r\n                    <div className=\"name-clinic\">{extraInfor && extraInfor.nameClinic ? extraInfor.nameClinic : ''}</div>\r\n                    <div className=\"detail-address\">{extraInfor && extraInfor.addressClinic ? extraInfor.addressClinic : ''}</div>\r\n                </div>\r\n                <div className=\"content-down\">\r\n                    {isShowDetailInfor === false &&\r\n                        <div className=\"short-infor\">\r\n                            <FormattedMessage id=\"patient.extra-infor-doctor.price\" />\r\n                            {extraInfor && extraInfor.priceTypeData && language === LANGUAGES.VI\r\n                                &&\r\n                                <NumberFormat\r\n                                    className=\"currency\"\r\n                                    value={extraInfor.priceTypeData.valueVi}\r\n                                    displayType={'text'}\r\n                                    thousandSeparator={true}\r\n                                    suffix={'VNĐ'}\r\n                                />\r\n\r\n                            }\r\n                            {extraInfor && extraInfor.priceTypeData && language === LANGUAGES.EN\r\n                                &&\r\n                                <NumberFormat\r\n                                    className=\"currency\"\r\n                                    value={extraInfor.priceTypeData.valueEn}\r\n                                    displayType={'text'}\r\n                                    thousandSeparator={true}\r\n                                    suffix={'$'}\r\n                                />\r\n                            }\r\n\r\n                            <span className=\"detail\" onClick={() => this.isShowDetailInfor(true)}> <FormattedMessage id=\"patient.extra-infor-doctor.detail\" /></span>\r\n                        </div>\r\n                    }\r\n                    {isShowDetailInfor === true &&\r\n                        <>\r\n                            <div className=\"title-price\"> <FormattedMessage id=\"patient.extra-infor-doctor.price\" /></div>\r\n                            <div className=\"detail-infor\">\r\n                                <div className=\"price\">\r\n                                    <span className=\"left\"> <FormattedMessage id=\"patient.extra-infor-doctor.price\" /></span>\r\n                                    <span className=\"right\">\r\n                                        {extraInfor && extraInfor.priceTypeData && language === LANGUAGES.VI\r\n                                            &&\r\n                                            <NumberFormat\r\n                                                className=\"currency\"\r\n                                                value={extraInfor.priceTypeData.valueVi}\r\n                                                displayType={'text'}\r\n                                                thousandSeparator={true}\r\n                                                suffix={'VNĐ'}\r\n                                            />\r\n\r\n                                        }\r\n                                        {extraInfor && extraInfor.priceTypeData && language === LANGUAGES.EN\r\n                                            &&\r\n                                            <NumberFormat\r\n                                                className=\"currency\"\r\n                                                value={extraInfor.priceTypeData.valueEn}\r\n                                                displayType={'text'}\r\n                                                thousandSeparator={true}\r\n                                                suffix={'$'}\r\n                                            />\r\n                                        }\r\n                                    </span>\r\n                                </div>\r\n                                <div className=\"note\">\r\n                                    {extraInfor && extraInfor.note ? extraInfor.note : ''}\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"payment\">   <FormattedMessage id=\"patient.extra-infor-doctor.payment\" />\r\n                                {extraInfor && extraInfor.paymentTypeData && language === LANGUAGES.VI ? extraInfor.paymentTypeData.valueVi : ''}\r\n                                {extraInfor && extraInfor.paymentTypeData && language === LANGUAGES.EN ? extraInfor.paymentTypeData.valueEn : ''}\r\n                            </div>\r\n                            <div className=\"hide-price\"><span onClick={() => this.isShowDetailInfor(false)}>   <FormattedMessage id=\"patient.extra-infor-doctor.hide-price\" /></span></div>\r\n                        </>\r\n                    }\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        language: state.app.language,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DoctorExtraInfor);\r\n"]},"metadata":{},"sourceType":"module"}