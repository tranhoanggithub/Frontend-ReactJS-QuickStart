{"ast":null,"code":"import { getAllCodeService } from '../../services/userService';\nimport actionTypes from './actionTypes'; // export const fetchGenderStart = () => ({\n//     type: actionTypes.FETCH_GENDER_START\n// })\n\nexport const fetchGenderStart = () => {\n  return async (dispatch, getState) => {\n    try {\n      dispatch({\n        type: actionTypes.FETCH_GENDER_START\n      });\n      let res = await getAllCodeService(\"GENDER\");\n\n      if (res && res.errCode === 0) {\n        console.log('hoidanit check get state', getState);\n        dispatch(fetchGenderSuccess(res.data));\n      } else {\n        dispatch(fetchGenderFailed());\n      }\n    } catch (e) {\n      dispatch(fetchGenderFailed());\n      console.log('fetchGenderStart error', e);\n    }\n  };\n}; // type: actionTypes.FETCH_GENDER_START\n\nexport const fetchGenderSuccess = genderData => ({\n  type: actionTypes.FETCH_GENDER_SUCCESS,\n  data: genderData\n});\nexport const fetchGenderFailed = () => ({\n  type: actionTypes.FETCH_GENDER_FAIDED\n});\nexport const fetchPositionSuccess = positionData => ({\n  type: actionTypes.FETCH_POSITION_SUCCESS,\n  data: positionData\n});\nexport const fetchPositionFailed = () => ({\n  type: actionTypes.FETCH_POSITION_FAIDED\n}); //start doing end\n\nexport const fetchRoleSuccess = roleData => ({\n  type: actionTypes.FETCH_ROLE_SUCCESS,\n  data: roleData\n});\nexport const fetchRoleFailed = () => ({\n  type: actionTypes.FETCH_POSITION_SUCCESS\n});\nexport const fetchPositionStart = () => {\n  return async (dispatch, getState) => {\n    try {\n      let res = await getAllCodeService(\"POSITION\");\n\n      if (res && res.errCode === 0) {\n        dispatch(fetchPositionSuccess(res.data));\n      } else {\n        dispatch(fetchPositionFailed());\n      }\n    } catch (e) {\n      dispatch(fetchPositionFailed());\n      console.log('fetchGenderStart error', e);\n    }\n  };\n};\nexport const fetchRoleStart = () => {\n  return async (dispatch, getState) => {\n    try {\n      let res = await getAllCodeService(\"ROLE\");\n\n      if (res && res.errCode === 0) {\n        dispatch(fetchRoleSuccess(res.data));\n      } else {\n        dispatch(fetchRoleFailed());\n      }\n    } catch (e) {\n      dispatch(fetchPositionFailed());\n      console.log('fetchRole error', e);\n    }\n  };\n};","map":{"version":3,"sources":["C:/Users/Admin/Desktop/LEARN REACTJS/Frontend-ReactJS-QuickStart/src/store/actions/adminActions.js"],"names":["getAllCodeService","actionTypes","fetchGenderStart","dispatch","getState","type","FETCH_GENDER_START","res","errCode","console","log","fetchGenderSuccess","data","fetchGenderFailed","e","genderData","FETCH_GENDER_SUCCESS","FETCH_GENDER_FAIDED","fetchPositionSuccess","positionData","FETCH_POSITION_SUCCESS","fetchPositionFailed","FETCH_POSITION_FAIDED","fetchRoleSuccess","roleData","FETCH_ROLE_SUCCESS","fetchRoleFailed","fetchPositionStart","fetchRoleStart"],"mappings":"AAAA,SAASA,iBAAT,QAAkC,4BAAlC;AACA,OAAOC,WAAP,MAAwB,eAAxB,C,CAEA;AACA;AACA;;AAEA,OAAO,MAAMC,gBAAgB,GAAG,MAAM;AAClC,SAAO,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AACjC,QAAI;AACAD,MAAAA,QAAQ,CAAC;AACLE,QAAAA,IAAI,EAAEJ,WAAW,CAACK;AADb,OAAD,CAAR;AAGA,UAAIC,GAAG,GAAG,MAAMP,iBAAiB,CAAC,QAAD,CAAjC;;AACA,UAAIO,GAAG,IAAIA,GAAG,CAACC,OAAJ,KAAgB,CAA3B,EAA8B;AAC1BC,QAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ,EAAwCN,QAAxC;AACAD,QAAAA,QAAQ,CAACQ,kBAAkB,CAACJ,GAAG,CAACK,IAAL,CAAnB,CAAR;AACH,OAHD,MAGO;AACHT,QAAAA,QAAQ,CAACU,iBAAiB,EAAlB,CAAR;AACH;AACJ,KAXD,CAWE,OAAOC,CAAP,EAAU;AACRX,MAAAA,QAAQ,CAACU,iBAAiB,EAAlB,CAAR;AACAJ,MAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ,EAAsCI,CAAtC;AACH;AACJ,GAhBD;AAiBH,CAlBM,C,CAmBP;;AAEA,OAAO,MAAMH,kBAAkB,GAAII,UAAD,KAAiB;AAC/CV,EAAAA,IAAI,EAAEJ,WAAW,CAACe,oBAD6B;AAE/CJ,EAAAA,IAAI,EAAEG;AAFyC,CAAjB,CAA3B;AAKP,OAAO,MAAMF,iBAAiB,GAAG,OAAO;AACpCR,EAAAA,IAAI,EAAEJ,WAAW,CAACgB;AADkB,CAAP,CAA1B;AAIP,OAAO,MAAMC,oBAAoB,GAAIC,YAAD,KAAmB;AACnDd,EAAAA,IAAI,EAAEJ,WAAW,CAACmB,sBADiC;AAEnDR,EAAAA,IAAI,EAAEO;AAF6C,CAAnB,CAA7B;AAKP,OAAO,MAAME,mBAAmB,GAAG,OAAO;AACtChB,EAAAA,IAAI,EAAEJ,WAAW,CAACqB;AADoB,CAAP,CAA5B,C,CAGP;;AAEA,OAAO,MAAMC,gBAAgB,GAAIC,QAAD,KAAe;AAC3CnB,EAAAA,IAAI,EAAEJ,WAAW,CAACwB,kBADyB;AAE3Cb,EAAAA,IAAI,EAAEY;AAFqC,CAAf,CAAzB;AAIP,OAAO,MAAME,eAAe,GAAG,OAAO;AAClCrB,EAAAA,IAAI,EAAEJ,WAAW,CAACmB;AADgB,CAAP,CAAxB;AAGP,OAAO,MAAMO,kBAAkB,GAAG,MAAM;AACpC,SAAO,OAAOxB,QAAP,EAAiBC,QAAjB,KAA8B;AACjC,QAAI;AACA,UAAIG,GAAG,GAAG,MAAMP,iBAAiB,CAAC,UAAD,CAAjC;;AACA,UAAIO,GAAG,IAAIA,GAAG,CAACC,OAAJ,KAAgB,CAA3B,EAA8B;AAC1BL,QAAAA,QAAQ,CAACe,oBAAoB,CAACX,GAAG,CAACK,IAAL,CAArB,CAAR;AACH,OAFD,MAEO;AACHT,QAAAA,QAAQ,CAACkB,mBAAmB,EAApB,CAAR;AACH;AACJ,KAPD,CAOE,OAAOP,CAAP,EAAU;AACRX,MAAAA,QAAQ,CAACkB,mBAAmB,EAApB,CAAR;AACAZ,MAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ,EAAsCI,CAAtC;AACH;AACJ,GAZD;AAaH,CAdM;AAgBP,OAAO,MAAMc,cAAc,GAAG,MAAM;AAChC,SAAO,OAAOzB,QAAP,EAAiBC,QAAjB,KAA8B;AACjC,QAAI;AACA,UAAIG,GAAG,GAAG,MAAMP,iBAAiB,CAAC,MAAD,CAAjC;;AACA,UAAIO,GAAG,IAAIA,GAAG,CAACC,OAAJ,KAAgB,CAA3B,EAA8B;AAC1BL,QAAAA,QAAQ,CAACoB,gBAAgB,CAAChB,GAAG,CAACK,IAAL,CAAjB,CAAR;AACH,OAFD,MAEO;AACHT,QAAAA,QAAQ,CAACuB,eAAe,EAAhB,CAAR;AACH;AACJ,KAPD,CAOE,OAAOZ,CAAP,EAAU;AACRX,MAAAA,QAAQ,CAACkB,mBAAmB,EAApB,CAAR;AACAZ,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BI,CAA/B;AACH;AACJ,GAZD;AAaH,CAdM","sourcesContent":["import { getAllCodeService } from '../../services/userService';\r\nimport actionTypes from './actionTypes';\r\n\r\n// export const fetchGenderStart = () => ({\r\n//     type: actionTypes.FETCH_GENDER_START\r\n// })\r\n\r\nexport const fetchGenderStart = () => {\r\n    return async (dispatch, getState) => {\r\n        try {\r\n            dispatch({\r\n                type: actionTypes.FETCH_GENDER_START\r\n            })\r\n            let res = await getAllCodeService(\"GENDER\");\r\n            if (res && res.errCode === 0) {\r\n                console.log('hoidanit check get state', getState)\r\n                dispatch(fetchGenderSuccess(res.data));\r\n            } else {\r\n                dispatch(fetchGenderFailed());\r\n            }\r\n        } catch (e) {\r\n            dispatch(fetchGenderFailed());\r\n            console.log('fetchGenderStart error', e)\r\n        }\r\n    }\r\n}\r\n// type: actionTypes.FETCH_GENDER_START\r\n\r\nexport const fetchGenderSuccess = (genderData) => ({\r\n    type: actionTypes.FETCH_GENDER_SUCCESS,\r\n    data: genderData\r\n})\r\n\r\nexport const fetchGenderFailed = () => ({\r\n    type: actionTypes.FETCH_GENDER_FAIDED\r\n})\r\n\r\nexport const fetchPositionSuccess = (positionData) => ({\r\n    type: actionTypes.FETCH_POSITION_SUCCESS,\r\n    data: positionData\r\n})\r\n\r\nexport const fetchPositionFailed = () => ({\r\n    type: actionTypes.FETCH_POSITION_FAIDED\r\n})\r\n//start doing end\r\n\r\nexport const fetchRoleSuccess = (roleData) => ({\r\n    type: actionTypes.FETCH_ROLE_SUCCESS,\r\n    data: roleData\r\n})\r\nexport const fetchRoleFailed = () => ({\r\n    type: actionTypes.FETCH_POSITION_SUCCESS,\r\n})\r\nexport const fetchPositionStart = () => {\r\n    return async (dispatch, getState) => {\r\n        try {\r\n            let res = await getAllCodeService(\"POSITION\");\r\n            if (res && res.errCode === 0) {\r\n                dispatch(fetchPositionSuccess(res.data));\r\n            } else {\r\n                dispatch(fetchPositionFailed());\r\n            }\r\n        } catch (e) {\r\n            dispatch(fetchPositionFailed());\r\n            console.log('fetchGenderStart error', e)\r\n        }\r\n    }\r\n}\r\n\r\nexport const fetchRoleStart = () => {\r\n    return async (dispatch, getState) => {\r\n        try {\r\n            let res = await getAllCodeService(\"ROLE\");\r\n            if (res && res.errCode === 0) {\r\n                dispatch(fetchRoleSuccess(res.data));\r\n            } else {\r\n                dispatch(fetchRoleFailed());\r\n            }\r\n        } catch (e) {\r\n            dispatch(fetchPositionFailed());\r\n            console.log('fetchRole error', e)\r\n        }\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}