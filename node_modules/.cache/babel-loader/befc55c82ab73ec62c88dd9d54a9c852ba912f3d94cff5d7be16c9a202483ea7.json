{"ast":null,"code":"/*\r\n * Copyright 2015, Yahoo Inc.\r\n * Copyrights licensed under the New BSD License.\r\n * See the accompanying LICENSE file for terms.\r\n */\nimport { __assign, __extends, __rest, __spreadArray } from \"tslib\";\nimport * as React from 'react';\nimport { Provider } from './injectIntl';\nimport { DEFAULT_INTL_CONFIG, invariantIntlContext, assignUniqueKeysToParts, shallowEqual } from '../utils';\nimport { formatMessage as coreFormatMessage, createIntl as coreCreateIntl, createIntlCache } from '@formatjs/intl';\nimport { isFormatXMLElementFn } from 'intl-messageformat';\nfunction processIntlConfig(config) {\n  return {\n    locale: config.locale,\n    timeZone: config.timeZone,\n    formats: config.formats,\n    textComponent: config.textComponent,\n    messages: config.messages,\n    defaultLocale: config.defaultLocale,\n    defaultFormats: config.defaultFormats,\n    onError: config.onError,\n    wrapRichTextChunksInFragment: config.wrapRichTextChunksInFragment,\n    defaultRichTextElements: config.defaultRichTextElements\n  };\n}\nfunction assignUniqueKeysToFormatXMLElementFnArgument(values) {\n  if (!values) {\n    return values;\n  }\n  return Object.keys(values).reduce(function (acc, k) {\n    var v = values[k];\n    acc[k] = isFormatXMLElementFn(v) ? assignUniqueKeysToParts(v) : v;\n    return acc;\n  }, {});\n}\nvar formatMessage = function (config, formatters, descriptor, rawValues) {\n  var rest = [];\n  for (var _i = 4; _i < arguments.length; _i++) {\n    rest[_i - 4] = arguments[_i];\n  }\n  var values = assignUniqueKeysToFormatXMLElementFnArgument(rawValues);\n  var chunks = coreFormatMessage.apply(void 0, __spreadArray([config, formatters, descriptor, values], rest));\n  if (Array.isArray(chunks)) {\n    return React.Children.toArray(chunks);\n  }\n  return chunks;\n};\n/**\r\n * Create intl object\r\n * @param config intl config\r\n * @param cache cache for formatter instances to prevent memory leak\r\n */\nexport var createIntl = function (_a, cache) {\n  var rawDefaultRichTextElements = _a.defaultRichTextElements,\n    config = __rest(_a, [\"defaultRichTextElements\"]);\n  var defaultRichTextElements = assignUniqueKeysToFormatXMLElementFnArgument(rawDefaultRichTextElements);\n  var coreIntl = coreCreateIntl(__assign(__assign(__assign({}, DEFAULT_INTL_CONFIG), config), {\n    defaultRichTextElements: defaultRichTextElements\n  }), cache);\n  return __assign(__assign({}, coreIntl), {\n    formatMessage: formatMessage.bind(null, {\n      locale: coreIntl.locale,\n      timeZone: coreIntl.timeZone,\n      formats: coreIntl.formats,\n      defaultLocale: coreIntl.defaultLocale,\n      defaultFormats: coreIntl.defaultFormats,\n      messages: coreIntl.messages,\n      onError: coreIntl.onError,\n      defaultRichTextElements: defaultRichTextElements\n    }, coreIntl.formatters)\n  });\n};\nvar IntlProvider = /** @class */function (_super) {\n  __extends(IntlProvider, _super);\n  function IntlProvider() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.cache = createIntlCache();\n    _this.state = {\n      cache: _this.cache,\n      intl: createIntl(processIntlConfig(_this.props), _this.cache),\n      prevConfig: processIntlConfig(_this.props)\n    };\n    return _this;\n  }\n  IntlProvider.getDerivedStateFromProps = function (props, _a) {\n    var prevConfig = _a.prevConfig,\n      cache = _a.cache;\n    var config = processIntlConfig(props);\n    if (!shallowEqual(prevConfig, config)) {\n      return {\n        intl: createIntl(config, cache),\n        prevConfig: config\n      };\n    }\n    return null;\n  };\n  IntlProvider.prototype.render = function () {\n    invariantIntlContext(this.state.intl);\n    return React.createElement(Provider, {\n      value: this.state.intl\n    }, this.props.children);\n  };\n  IntlProvider.displayName = 'IntlProvider';\n  IntlProvider.defaultProps = DEFAULT_INTL_CONFIG;\n  return IntlProvider;\n}(React.PureComponent);\nexport default IntlProvider;","map":{"version":3,"names":["__assign","__extends","__rest","__spreadArray","React","Provider","DEFAULT_INTL_CONFIG","invariantIntlContext","assignUniqueKeysToParts","shallowEqual","formatMessage","coreFormatMessage","createIntl","coreCreateIntl","createIntlCache","isFormatXMLElementFn","processIntlConfig","config","locale","timeZone","formats","textComponent","messages","defaultLocale","defaultFormats","onError","wrapRichTextChunksInFragment","defaultRichTextElements","assignUniqueKeysToFormatXMLElementFnArgument","values","Object","keys","reduce","acc","k","v","formatters","descriptor","rawValues","rest","_i","arguments","length","chunks","apply","Array","isArray","Children","toArray","_a","cache","rawDefaultRichTextElements","coreIntl","bind","IntlProvider","_super","_this","state","intl","props","prevConfig","getDerivedStateFromProps","prototype","render","createElement","value","children","displayName","defaultProps","PureComponent"],"sources":["C:/Users/Admin/Desktop/LEARN REACTJS/Frontend-ReactJS-QuickStart/node_modules/react-intl/lib/src/components/provider.js"],"sourcesContent":["/*\r\n * Copyright 2015, Yahoo Inc.\r\n * Copyrights licensed under the New BSD License.\r\n * See the accompanying LICENSE file for terms.\r\n */\r\nimport { __assign, __extends, __rest, __spreadArray } from \"tslib\";\r\nimport * as React from 'react';\r\nimport { Provider } from './injectIntl';\r\nimport { DEFAULT_INTL_CONFIG, invariantIntlContext, assignUniqueKeysToParts, shallowEqual, } from '../utils';\r\nimport { formatMessage as coreFormatMessage, createIntl as coreCreateIntl, createIntlCache, } from '@formatjs/intl';\r\nimport { isFormatXMLElementFn, } from 'intl-messageformat';\r\nfunction processIntlConfig(config) {\r\n    return {\r\n        locale: config.locale,\r\n        timeZone: config.timeZone,\r\n        formats: config.formats,\r\n        textComponent: config.textComponent,\r\n        messages: config.messages,\r\n        defaultLocale: config.defaultLocale,\r\n        defaultFormats: config.defaultFormats,\r\n        onError: config.onError,\r\n        wrapRichTextChunksInFragment: config.wrapRichTextChunksInFragment,\r\n        defaultRichTextElements: config.defaultRichTextElements,\r\n    };\r\n}\r\nfunction assignUniqueKeysToFormatXMLElementFnArgument(values) {\r\n    if (!values) {\r\n        return values;\r\n    }\r\n    return Object.keys(values).reduce(function (acc, k) {\r\n        var v = values[k];\r\n        acc[k] = isFormatXMLElementFn(v)\r\n            ? assignUniqueKeysToParts(v)\r\n            : v;\r\n        return acc;\r\n    }, {});\r\n}\r\nvar formatMessage = function (config, formatters, descriptor, rawValues) {\r\n    var rest = [];\r\n    for (var _i = 4; _i < arguments.length; _i++) {\r\n        rest[_i - 4] = arguments[_i];\r\n    }\r\n    var values = assignUniqueKeysToFormatXMLElementFnArgument(rawValues);\r\n    var chunks = coreFormatMessage.apply(void 0, __spreadArray([config,\r\n        formatters,\r\n        descriptor, values], rest));\r\n    if (Array.isArray(chunks)) {\r\n        return React.Children.toArray(chunks);\r\n    }\r\n    return chunks;\r\n};\r\n/**\r\n * Create intl object\r\n * @param config intl config\r\n * @param cache cache for formatter instances to prevent memory leak\r\n */\r\nexport var createIntl = function (_a, cache) {\r\n    var rawDefaultRichTextElements = _a.defaultRichTextElements, config = __rest(_a, [\"defaultRichTextElements\"]);\r\n    var defaultRichTextElements = assignUniqueKeysToFormatXMLElementFnArgument(rawDefaultRichTextElements);\r\n    var coreIntl = coreCreateIntl(__assign(__assign(__assign({}, DEFAULT_INTL_CONFIG), config), { defaultRichTextElements: defaultRichTextElements }), cache);\r\n    return __assign(__assign({}, coreIntl), { formatMessage: formatMessage.bind(null, {\r\n            locale: coreIntl.locale,\r\n            timeZone: coreIntl.timeZone,\r\n            formats: coreIntl.formats,\r\n            defaultLocale: coreIntl.defaultLocale,\r\n            defaultFormats: coreIntl.defaultFormats,\r\n            messages: coreIntl.messages,\r\n            onError: coreIntl.onError,\r\n            defaultRichTextElements: defaultRichTextElements,\r\n        }, coreIntl.formatters) });\r\n};\r\nvar IntlProvider = /** @class */ (function (_super) {\r\n    __extends(IntlProvider, _super);\r\n    function IntlProvider() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.cache = createIntlCache();\r\n        _this.state = {\r\n            cache: _this.cache,\r\n            intl: createIntl(processIntlConfig(_this.props), _this.cache),\r\n            prevConfig: processIntlConfig(_this.props),\r\n        };\r\n        return _this;\r\n    }\r\n    IntlProvider.getDerivedStateFromProps = function (props, _a) {\r\n        var prevConfig = _a.prevConfig, cache = _a.cache;\r\n        var config = processIntlConfig(props);\r\n        if (!shallowEqual(prevConfig, config)) {\r\n            return {\r\n                intl: createIntl(config, cache),\r\n                prevConfig: config,\r\n            };\r\n        }\r\n        return null;\r\n    };\r\n    IntlProvider.prototype.render = function () {\r\n        invariantIntlContext(this.state.intl);\r\n        return React.createElement(Provider, { value: this.state.intl }, this.props.children);\r\n    };\r\n    IntlProvider.displayName = 'IntlProvider';\r\n    IntlProvider.defaultProps = DEFAULT_INTL_CONFIG;\r\n    return IntlProvider;\r\n}(React.PureComponent));\r\nexport default IntlProvider;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}