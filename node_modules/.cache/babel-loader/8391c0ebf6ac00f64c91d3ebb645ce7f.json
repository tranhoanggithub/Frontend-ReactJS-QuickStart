{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Desktop/Frontend-ReactJS-QuickStart/src/containers/System/ModalUser.js\";\nimport React, { Component } from \"react\";\nimport { FormattedMessage } from \"react-intl\";\nimport { connect } from \"react-redux\";\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ModalUser extends Component {\n  constructor(props) {\n    super(props);\n\n    this.toggle = () => {\n      this.props.toggleFromParent();\n    };\n\n    this.handleOnChangeInput = (event, id) => {\n      console.log('event 1', event.target.value, id);\n    };\n\n    this.state = {\n      email: '',\n      password: '',\n      firstName: '',\n      lastName: '',\n      address: ''\n    };\n  }\n\n  componentDidMount() {}\n\n  render() {\n    console.log(\"check child props\", this.props);\n    console.log(\"check child open modal\", this.props.isOpen);\n    return /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: this.props.isOpen,\n      toggle: () => {\n        this.toggle();\n      },\n      className: \"modal-user-container\",\n      size: \"lg\",\n      centered: true,\n      children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n        toggle: () => {\n          this.toggle();\n        },\n        children: \"Create a new user\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-user-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              onChange: event => {\n                this.handleOnChangeInput(event, \"EMAIL\");\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              onChange: event => {\n                this.handleOnChangeInput(event);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"First name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Last name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-container max-width-input\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ModalFooter, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          color: \"primary\",\n          className: \"px-3\",\n          onClick: () => {\n            this.toggle();\n          },\n          children: \"Save changes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), \" \", /*#__PURE__*/_jsxDEV(Button, {\n          color: \"secondary\",\n          className: \"px-3\",\n          onClick: () => {\n            this.toggle();\n          },\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {};\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ModalUser);","map":{"version":3,"sources":["/Users/macbook/Desktop/Frontend-ReactJS-QuickStart/src/containers/System/ModalUser.js"],"names":["React","Component","FormattedMessage","connect","Button","Modal","ModalHeader","ModalBody","ModalFooter","ModalUser","constructor","props","toggle","toggleFromParent","handleOnChangeInput","event","id","console","log","target","value","state","email","password","firstName","lastName","address","componentDidMount","render","isOpen","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { FormattedMessage } from \"react-intl\";\nimport { connect } from \"react-redux\";\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\nclass ModalUser extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email:'',\n      password:'',\n      firstName:'',\n      lastName:'',\n      address:'',\n    };\n  }\n\n  componentDidMount() {}\n\n  toggle = () => {\n    this.props.toggleFromParent();\n  };\n  handleOnChangeInput = (event , id) => {\n    console.log('event 1',event.target.value,id);\n  };\n  render() {\n    console.log(\"check child props\", this.props);\n    console.log(\"check child open modal\", this.props.isOpen);\n    return (\n      <Modal\n        isOpen={this.props.isOpen}\n        toggle={() => {\n          this.toggle();\n        }}\n        className={\"modal-user-container\"}\n        size=\"lg\"\n        centered\n      >\n        <ModalHeader\n          toggle={() => {\n            this.toggle();\n          }}\n        >\n          Create a new user\n        </ModalHeader>\n        <ModalBody>\n          <div className=\"modal-user-body\">\n            <div className=\"input-container\">\n              <label>Email</label>\n              <input type=\"text\"  onChange={(event)=>{this.handleOnChangeInput(event , \"EMAIL\")}}/>\n            </div>\n            <div className=\"input-container\">\n              <label>Password</label>\n              <input type=\"password\" onChange={(event)=>{this.handleOnChangeInput(event)}}/>\n            </div>\n            <div className=\"input-container\">\n              <label>First name</label>\n              <input type=\"text \" />\n            </div>\n            <div className=\"input-container\">\n              <label>Last name</label>\n              <input type=\"text\" />\n            </div>\n            <div className=\"input-container max-width-input\">\n              <label>Address</label>\n              <input type=\"text\" />\n            </div>\n          </div>\n        </ModalBody>\n        <ModalFooter>\n          <Button\n            color=\"primary\"\n            className=\"px-3\"\n            onClick={() => {\n              this.toggle();\n            }}\n          >\n            Save changes\n          </Button>{\" \"}\n          <Button\n            color=\"secondary\"\n            className=\"px-3\"\n            onClick={() => {\n              this.toggle();\n            }}\n          >\n            Close\n          </Button>\n        </ModalFooter>\n      </Modal>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {};\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ModalUser);\n"]},"metadata":{},"sourceType":"module"}