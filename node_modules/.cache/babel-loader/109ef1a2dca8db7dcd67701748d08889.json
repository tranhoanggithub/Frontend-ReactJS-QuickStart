{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\LEARN REACTJS\\\\Frontend-ReactJS-QuickStart\\\\src\\\\containers\\\\System\\\\ModalUser.js\";\nimport React, { Component } from \"react\";\nimport { FormattedMessage } from \"react-intl\";\nimport { connect } from \"react-redux\";\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\nimport { emitter } from \"../../utils/emitter\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ModalUser extends Component {\n  constructor(props) {\n    super(props);\n\n    this.toggle = () => {\n      this.props.toggleFromParent();\n    };\n\n    this.handleOnChangeInput = (event, id) => {\n      // console.log('event 1',event.target.value,id);\n      // this.state[id] = event.target.value;\n      // this.setState({\n      //   ...this.state\n      // },()=>{\n      //   console.log('check bad state:',this.state)\n      // })\n      //good code\n      let copyState = { ...this.state\n      };\n      copyState[id] = event.target.value;\n      this.setState({ ...copyState\n      });\n    };\n\n    this.checkValideInput = () => {\n      let isValid = true;\n      let arrInput = ['email', 'password', 'firstName', 'lastName', 'address'];\n\n      for (let i = 0; i < arrInput.length; i++) {\n        console.log('check inside loop', this.state[arrInput[i]], arrInput[i]);\n\n        if (!this.state[arrInput[i]]) {\n          isValid = false;\n          alert('Missing parameter ' + arrInput[i]);\n          break;\n        }\n      }\n\n      return isValid;\n    };\n\n    this.handleAddNewUser = () => {\n      let isValid = this.checkValideInput();\n\n      if (isValid === true) {\n        //call api create modal\n        console.log('check props child', this.props);\n        this.props.createNewUser(this.state);\n        console.log('data modal', this.state);\n      }\n\n      this.checkValideInput();\n      console.log('data modal', this.state);\n    };\n\n    this.state = {\n      id: '',\n      email: '',\n      password: '',\n      firstName: '',\n      lastName: '',\n      address: ''\n    };\n    this.listenToEmiiter();\n  }\n\n  listenToEmiiter() {\n    emitter.on('EVENT_CLEAR_MODAL_DATA', () => {\n      //reset state\n      this.setState({\n        email: '',\n        password: '',\n        firstName: '',\n        lastName: '',\n        address: ''\n      });\n    });\n  }\n\n  componentDidMount() {\n    console.log('mouting modal');\n  }\n\n  render() {\n    console.log(\"check child props\", this.props);\n    console.log(\"check child open modal\", this.props.isOpen);\n    return /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: this.props.isOpen,\n      toggle: () => {\n        this.toggle();\n      },\n      className: \"modal-user-container\",\n      size: \"lg\",\n      centered: true,\n      children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n        toggle: () => {\n          this.toggle();\n        },\n        children: \"Create a new user\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-user-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              onChange: event => {\n                this.handleOnChangeInput(event, \"email\");\n              },\n              value: this.state.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              onChange: event => {\n                this.handleOnChangeInput(event, \"password\");\n              },\n              value: this.state.password\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"First name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text \",\n              onChange: event => {\n                this.handleOnChangeInput(event, \"firstName\");\n              },\n              value: this.state.firstName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Last name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              onChange: event => {\n                this.handleOnChangeInput(event, \"lastName\");\n              },\n              value: this.state.lastName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-container max-width-input\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              onChange: event => {\n                this.handleOnChangeInput(event, \"address\");\n              },\n              value: this.state.address\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ModalFooter, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          color: \"primary\",\n          className: \"px-3\",\n          onClick: () => {\n            // this.toggle();\n            this.handleAddNewUser();\n          },\n          children: \"Save changes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this), \" \", /*#__PURE__*/_jsxDEV(Button, {\n          color: \"secondary\",\n          className: \"px-3\",\n          onClick: () => {},\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {};\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ModalUser);","map":{"version":3,"sources":["C:/Users/Admin/Desktop/LEARN REACTJS/Frontend-ReactJS-QuickStart/src/containers/System/ModalUser.js"],"names":["React","Component","FormattedMessage","connect","Button","Modal","ModalHeader","ModalBody","ModalFooter","emitter","ModalUser","constructor","props","toggle","toggleFromParent","handleOnChangeInput","event","id","copyState","state","target","value","setState","checkValideInput","isValid","arrInput","i","length","console","log","alert","handleAddNewUser","createNewUser","email","password","firstName","lastName","address","listenToEmiiter","on","componentDidMount","render","isOpen","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport { connect } from \"react-redux\";\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\r\nimport {emitter} from \"../../utils/emitter\";\r\nclass ModalUser extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      id : '',\r\n      email:'',\r\n      password:'',\r\n      firstName:'',\r\n      lastName:'',\r\n      address:'',\r\n    };\r\n\r\n    this.listenToEmiiter();\r\n  }\r\n  listenToEmiiter() {\r\n    emitter.on('EVENT_CLEAR_MODAL_DATA', ()=>{\r\n      //reset state\r\n      this.setState({\r\n        email:'',\r\n        password:'',\r\n        firstName:'',\r\n        lastName:'',\r\n        address:'',\r\n      })\r\n    })\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log('mouting modal')\r\n  }\r\n\r\n  toggle = () => {\r\n    this.props.toggleFromParent();\r\n  };\r\n  handleOnChangeInput = (event , id) => {\r\n    // console.log('event 1',event.target.value,id);\r\n    // this.state[id] = event.target.value;\r\n    // this.setState({\r\n    //   ...this.state\r\n    // },()=>{\r\n    //   console.log('check bad state:',this.state)\r\n    // })\r\n\r\n    //good code\r\n    let copyState={...this.state};\r\n    copyState[id] = event.target.value;\r\n\r\n    this.setState({...copyState});\r\n\r\n\r\n\r\n  };\r\n  checkValideInput = () =>{\r\n    let isValid = true;\r\n    let arrInput = ['email', 'password', 'firstName', 'lastName', 'address'];\r\n    for(let i=0; i<arrInput.length; i++){\r\n      console.log('check inside loop', this.state[arrInput[i]],arrInput[i]);\r\n      if(!this.state[arrInput[i]]){\r\n        isValid = false;\r\n        alert('Missing parameter ' + arrInput[i]);\r\n        break;\r\n      }\r\n    }\r\n    \r\n    return isValid;\r\n  }\r\n  handleAddNewUser = () => {\r\n    let isValid = this.checkValideInput();\r\n    if(isValid === true){\r\n      //call api create modal\r\n      console.log('check props child', this.props)\r\n      this.props.createNewUser(this.state);\r\n      console.log('data modal', this.state)\r\n    }\r\n    this.checkValideInput();\r\n    console.log('data modal' , this.state)\r\n  }\r\n  render() {\r\n    console.log(\"check child props\", this.props);\r\n    console.log(\"check child open modal\", this.props.isOpen);\r\n    return (\r\n      <Modal\r\n        isOpen={this.props.isOpen}\r\n        toggle={() => {\r\n          this.toggle();\r\n        }}\r\n        className={\"modal-user-container\"}\r\n        size=\"lg\"\r\n        centered\r\n      >\r\n        <ModalHeader\r\n          toggle={() => {\r\n            this.toggle();\r\n          }}\r\n        >\r\n          Create a new user\r\n        </ModalHeader>\r\n        <ModalBody>\r\n          <div className=\"modal-user-body\">\r\n            <div className=\"input-container\">\r\n              <label>Email</label>\r\n              <input type=\"text\"  onChange={(event)=>{this.handleOnChangeInput(event , \"email\")}} value={this.state.email}/>\r\n            </div>\r\n            <div className=\"input-container\">\r\n              <label>Password</label>\r\n              <input type=\"password\" onChange={(event)=>{this.handleOnChangeInput(event, \"password\")}} value={this.state.password}/>\r\n            </div>\r\n            <div className=\"input-container\">\r\n              <label>First name</label>\r\n              <input type=\"text \" onChange={(event)=>{this.handleOnChangeInput(event, \"firstName\")}} value={this.state.firstName} />\r\n            </div>\r\n            <div className=\"input-container\">\r\n              <label>Last name</label>\r\n              <input type=\"text\" onChange={(event)=>{this.handleOnChangeInput(event, \"lastName\")}} value={this.state.lastName} />\r\n            </div>\r\n            <div className=\"input-container max-width-input\">\r\n              <label>Address</label>\r\n              <input type=\"text\" onChange={(event)=>{this.handleOnChangeInput(event, \"address\")}} value={this.state.address} />\r\n            </div>\r\n          </div>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button\r\n            color=\"primary\"\r\n            className=\"px-3\"\r\n            onClick={() => {\r\n              // this.toggle();\r\n              this.handleAddNewUser();\r\n            }}\r\n          >\r\n            Save changes\r\n          </Button>{\" \"}\r\n          <Button\r\n            color=\"secondary\"\r\n            className=\"px-3\"\r\n            onClick={() => {\r\n            \r\n            }}\r\n          >\r\n            Close\r\n          </Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {};\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {};\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ModalUser);\r\n"]},"metadata":{},"sourceType":"module"}