{"ast":null,"code":"import axios from 'axios';\nimport _ from 'lodash'; // import config from './config';\n\nconst instance = axios.create({\n  baseURL: 'http://localhost:8080',\n  // Đặt URL của backend cùng với cổng 8080\n  withCredentials: true\n}); // const createError = (httpStatusCode, statusCode, errorMessage, problems, errorCode = '') => {\n//     const error = new Error();\n//     error.httpStatusCode = httpStatusCode;\n//     error.statusCode = statusCode;\n//     error.errorMessage = errorMessage;\n//     error.problems = problems;\n//     error.errorCode = errorCode + \"\";\n//     return error;\n// };\n\nexport const isSuccessStatusCode = s => {\n  // May be string or number\n  const statusType = typeof s;\n  return statusType === 'number' && s === 0 || statusType === 'string' && s.toUpperCase() === 'OK';\n};\ninstance.interceptors.response.use(response => {\n  // Thrown error for request with OK status code\n  const {\n    data\n  } = response; // if (data.hasOwnProperty('s') && !isSuccessStatusCode(data['s']) && data.hasOwnProperty('errmsg')) {\n  //     return Promise.reject(createError(response.status, data['s'], data['errmsg'], null, data['errcode'] ? data['errcode'] : \"\"));\n  // }\n  // // Return direct data to callback\n  // if (data.hasOwnProperty('s') && data.hasOwnProperty('d')) {\n  //     return data['d'];\n  // }\n  // // Handle special case\n  // if (data.hasOwnProperty('s') && _.keys(data).length === 1) {\n  //     return null;\n  // }\n\n  return response.data;\n}, error => {// const { response } = error;\n  // if (response == null) {\n  //     return Promise.reject(error);\n  // }\n  // const { data } = response;\n  // if (data.hasOwnProperty('s') && data.hasOwnProperty('errmsg')) {\n  //     return Promise.reject(createError(response.status, data['s'], data['errmsg']));\n  // }\n  // if (data.hasOwnProperty('code') && data.hasOwnProperty('message')) {\n  //     return Promise.reject(createError(response.status, data['code'], data['message'], data['problems']));\n  // }\n  // return Promise.reject(createError(response.status));\n});\nexport default instance;","map":{"version":3,"sources":["C:/Users/Admin/Desktop/LEARN REACTJS/Frontend-ReactJS-QuickStart/src/axios.js"],"names":["axios","_","instance","create","baseURL","withCredentials","isSuccessStatusCode","s","statusType","toUpperCase","interceptors","response","use","data","error"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,CAAP,MAAc,QAAd,C,CACA;;AAEA,MAAMC,QAAQ,GAAGF,KAAK,CAACG,MAAN,CAAa;AAC1BC,EAAAA,OAAO,EAAE,uBADiB;AACQ;AAClCC,EAAAA,eAAe,EAAE;AAFS,CAAb,CAAjB,C,CAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMC,mBAAmB,GAAIC,CAAD,IAAO;AACtC;AACA,QAAMC,UAAU,GAAG,OAAOD,CAA1B;AACA,SAAQC,UAAU,KAAK,QAAf,IAA2BD,CAAC,KAAK,CAAlC,IAAyCC,UAAU,KAAK,QAAf,IAA2BD,CAAC,CAACE,WAAF,OAAoB,IAA/F;AACH,CAJM;AAMPP,QAAQ,CAACQ,YAAT,CAAsBC,QAAtB,CAA+BC,GAA/B,CACKD,QAAD,IAAc;AACV;AACA,QAAM;AAAEE,IAAAA;AAAF,MAAWF,QAAjB,CAFU,CAGV;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAAOA,QAAQ,CAACE,IAAhB;AACH,CAjBL,EAkBKC,KAAD,IAAW,CACP;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACH,CAnCL;AAsCA,eAAeZ,QAAf","sourcesContent":["import axios from 'axios';\r\nimport _ from 'lodash';\r\n// import config from './config';\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'http://localhost:8080', // Đặt URL của backend cùng với cổng 8080\r\n    withCredentials: true\r\n});\r\n\r\n// const createError = (httpStatusCode, statusCode, errorMessage, problems, errorCode = '') => {\r\n//     const error = new Error();\r\n//     error.httpStatusCode = httpStatusCode;\r\n//     error.statusCode = statusCode;\r\n//     error.errorMessage = errorMessage;\r\n//     error.problems = problems;\r\n//     error.errorCode = errorCode + \"\";\r\n//     return error;\r\n// };\r\n\r\nexport const isSuccessStatusCode = (s) => {\r\n    // May be string or number\r\n    const statusType = typeof s;\r\n    return (statusType === 'number' && s === 0) || (statusType === 'string' && s.toUpperCase() === 'OK');\r\n};\r\n\r\ninstance.interceptors.response.use(\r\n    (response) => {\r\n        // Thrown error for request with OK status code\r\n        const { data } = response;\r\n        // if (data.hasOwnProperty('s') && !isSuccessStatusCode(data['s']) && data.hasOwnProperty('errmsg')) {\r\n        //     return Promise.reject(createError(response.status, data['s'], data['errmsg'], null, data['errcode'] ? data['errcode'] : \"\"));\r\n        // }\r\n\r\n        // // Return direct data to callback\r\n        // if (data.hasOwnProperty('s') && data.hasOwnProperty('d')) {\r\n        //     return data['d'];\r\n        // }\r\n        // // Handle special case\r\n        // if (data.hasOwnProperty('s') && _.keys(data).length === 1) {\r\n        //     return null;\r\n        // }\r\n        return response.data;\r\n    },\r\n    (error) => {\r\n        // const { response } = error;\r\n        // if (response == null) {\r\n        //     return Promise.reject(error);\r\n        // }\r\n\r\n        // const { data } = response;\r\n\r\n        // if (data.hasOwnProperty('s') && data.hasOwnProperty('errmsg')) {\r\n        //     return Promise.reject(createError(response.status, data['s'], data['errmsg']));\r\n        // }\r\n\r\n        // if (data.hasOwnProperty('code') && data.hasOwnProperty('message')) {\r\n        //     return Promise.reject(createError(response.status, data['code'], data['message'], data['problems']));\r\n        // }\r\n\r\n        // return Promise.reject(createError(response.status));\r\n    }\r\n);\r\n\r\nexport default instance;\r\n"]},"metadata":{},"sourceType":"module"}