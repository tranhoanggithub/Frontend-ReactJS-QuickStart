{"ast":null,"code":"import actionTypes from '../actions/actionTypes';\nimport { getAllCodeService, createNewUserService, getAllUsers, deleteUserService, editUserService, getTopDoctorHomeService, getAllDoctors } from '../../services/userService';\nconst initialState = {\n  isLoadingGender: false,\n  genders: [],\n  roles: [],\n  position: [],\n  users: [],\n  topDoctors: [],\n  allDoctors: [],\n  allScheduleTime: [],\n  allRequiredDoctorInfor: []\n};\n\nconst adminReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.FETCH_GENDER_START:\n      let copyState = { ...state\n      };\n      copyState.isLoadingGender = true;\n      return { ...copyState\n      };\n\n    case actionTypes.FETCH_GENDER_SUCCESS:\n      state.genders = action.data;\n      state.isLoadingGender = false;\n      return { ...state\n      };\n\n    case actionTypes.FETCH_POSITION_SUCCESS:\n      state.position = action.data;\n      return { ...state\n      };\n\n    case actionTypes.FETCH_POSITION_FAILDED:\n      state.position = [];\n      return { ...state\n      };\n\n    case actionTypes.FETCH_ROLE_SUCCESS:\n      state.roles = action.data;\n      return { ...state\n      };\n\n    case actionTypes.FETCH_ROLE_FAILDED:\n      state.roles = [];\n      return { ...state\n      };\n\n    case actionTypes.FETCH_ALL_USERS_SUCCESS:\n      state.users = action.users;\n      return { ...state\n      };\n\n    case actionTypes.FETCH_ALL_USERS_FAILDED:\n      state.users = [];\n      return { ...state\n      };\n\n    case actionTypes.FETCH_TOP_DOCTORS_SUCCESS:\n      state.topDoctors = action.dataDoctors;\n      return { ...state\n      };\n\n    case actionTypes.FETCH_TOP_DOCTORS_FAILDED:\n      state.topDoctors = [];\n      return { ...state\n      };\n\n    case actionTypes.FETCH_ALL_DOCTORS_SUCCESS:\n      state.allDoctors = action.dataDr;\n      return { ...state\n      };\n\n    case actionTypes.FETCH_ALL_DOCTORS_FAILDED:\n      state.allDoctors = [];\n      return { ...state\n      };\n\n    case actionTypes.FETCH_ALLCODE_SCHEDULE_TIME_SUCCESS:\n      state.allScheduleTime = action.dataTime;\n      return { ...state\n      };\n\n    case actionTypes.FETCH_ALLCODE_SCHEDULE_TIME_FAILDED:\n      state.allScheduleTime = [];\n      return { ...state\n      };\n\n    case actionTypes.FETCH_REQUIRED_DOCTOR_INFOR_SUCCESS:\n      state.allRequiredDoctorInfor = action.data;\n      return { ...state\n      };\n\n    case actionTypes.FETCH_REQUIRED_DOCTOR_INFOR_FAIDED:\n      state.allRequiredDoctorInfor = [];\n      return { ...state\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default adminReducer;","map":{"version":3,"sources":["C:/Users/Admin/Desktop/LEARN REACTJS/Frontend-ReactJS-QuickStart/src/store/reducers/adminReducer.js"],"names":["actionTypes","getAllCodeService","createNewUserService","getAllUsers","deleteUserService","editUserService","getTopDoctorHomeService","getAllDoctors","initialState","isLoadingGender","genders","roles","position","users","topDoctors","allDoctors","allScheduleTime","allRequiredDoctorInfor","adminReducer","state","action","type","FETCH_GENDER_START","copyState","FETCH_GENDER_SUCCESS","data","FETCH_POSITION_SUCCESS","FETCH_POSITION_FAILDED","FETCH_ROLE_SUCCESS","FETCH_ROLE_FAILDED","FETCH_ALL_USERS_SUCCESS","FETCH_ALL_USERS_FAILDED","FETCH_TOP_DOCTORS_SUCCESS","dataDoctors","FETCH_TOP_DOCTORS_FAILDED","FETCH_ALL_DOCTORS_SUCCESS","dataDr","FETCH_ALL_DOCTORS_FAILDED","FETCH_ALLCODE_SCHEDULE_TIME_SUCCESS","dataTime","FETCH_ALLCODE_SCHEDULE_TIME_FAILDED","FETCH_REQUIRED_DOCTOR_INFOR_SUCCESS","FETCH_REQUIRED_DOCTOR_INFOR_FAIDED"],"mappings":"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","sourcesContent":["import actionTypes from '../actions/actionTypes';\r\nimport { getAllCodeService, createNewUserService, getAllUsers, deleteUserService, editUserService, getTopDoctorHomeService, getAllDoctors } from '../../services/userService';\r\n\r\nconst initialState = {\r\n    isLoadingGender: false,\r\n    genders: [],\r\n    roles: [],\r\n    position: [],\r\n    users: [],\r\n    topDoctors: [],\r\n    allDoctors: [],\r\n    allScheduleTime: [],\r\n\r\n    allRequiredDoctorInfor: []\r\n}\r\n\r\nconst adminReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.FETCH_GENDER_START:\r\n            let copyState = { ...state };\r\n            copyState.isLoadingGender = true;\r\n            return {\r\n                ...copyState,\r\n            }\r\n        case actionTypes.FETCH_GENDER_SUCCESS:\r\n            state.genders = action.data;\r\n            state.isLoadingGender = false;\r\n            return {\r\n                ...state,\r\n            }\r\n        case actionTypes.FETCH_POSITION_SUCCESS:\r\n            state.position = action.data;\r\n            return {\r\n                ...state\r\n            }\r\n        case actionTypes.FETCH_POSITION_FAILDED:\r\n            state.position = [];\r\n            return {\r\n                ...state\r\n            }\r\n        case actionTypes.FETCH_ROLE_SUCCESS:\r\n            state.roles = action.data;\r\n            return {\r\n                ...state\r\n            }\r\n        case actionTypes.FETCH_ROLE_FAILDED:\r\n            state.roles = [];\r\n            return {\r\n                ...state\r\n            }\r\n        case actionTypes.FETCH_ALL_USERS_SUCCESS:\r\n            state.users = action.users;\r\n            return {\r\n                ...state\r\n            }\r\n        case actionTypes.FETCH_ALL_USERS_FAILDED:\r\n            state.users = [];\r\n            return {\r\n                ...state\r\n            }\r\n        case actionTypes.FETCH_TOP_DOCTORS_SUCCESS:\r\n            state.topDoctors = action.dataDoctors;\r\n            return {\r\n                ...state\r\n            }\r\n        case actionTypes.FETCH_TOP_DOCTORS_FAILDED:\r\n            state.topDoctors = [];\r\n            return {\r\n                ...state\r\n            }\r\n        case actionTypes.FETCH_ALL_DOCTORS_SUCCESS:\r\n            state.allDoctors = action.dataDr;\r\n            return {\r\n                ...state\r\n            }\r\n        case actionTypes.FETCH_ALL_DOCTORS_FAILDED:\r\n            state.allDoctors = [];\r\n            return {\r\n                ...state\r\n            }\r\n        case actionTypes.FETCH_ALLCODE_SCHEDULE_TIME_SUCCESS:\r\n            state.allScheduleTime = action.dataTime;\r\n            return {\r\n                ...state\r\n            }\r\n        case actionTypes.FETCH_ALLCODE_SCHEDULE_TIME_FAILDED:\r\n            state.allScheduleTime = [];\r\n            return {\r\n                ...state\r\n            }\r\n        case actionTypes.FETCH_REQUIRED_DOCTOR_INFOR_SUCCESS:\r\n            state.allRequiredDoctorInfor = action.data;\r\n            return {\r\n                ...state\r\n            }\r\n        case actionTypes.FETCH_REQUIRED_DOCTOR_INFOR_FAIDED:\r\n            state.allRequiredDoctorInfor = [];\r\n            return {\r\n                ...state\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default adminReducer;"]},"metadata":{},"sourceType":"module"}