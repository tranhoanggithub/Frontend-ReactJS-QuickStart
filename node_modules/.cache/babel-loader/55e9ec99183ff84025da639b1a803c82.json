{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Desktop/Frontend-ReactJS-QuickStart/src/containers/System/ModalUser.js\";\nimport React, { Component } from \"react\";\nimport { FormattedMessage } from \"react-intl\";\nimport { connect } from \"react-redux\";\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ModalUser extends Component {\n  constructor(props) {\n    super(props);\n\n    this.toggle = () => {\n      this.props.toggleFromParent();\n    };\n\n    this.handleOnChangeInput = (event, id) => {\n      // console.log('event 1',event.target.value,id);\n      // this.state[id] = event.target.value;\n      // this.setState({\n      //   ...this.state\n      // },()=>{\n      //   console.log('check bad state:',this.state)\n      // })\n      //good code\n      let copyState = { ...this.state\n      };\n      copyState[id] = event.target.value;\n      this.setState({ ...copyState\n      });\n    };\n\n    this.checkValideInput = () => {\n      let isValid = true;\n      let arrInput = ['email', 'password', 'firstName', 'lastName', 'address'];\n\n      for (let i = 0; i < arrInput.length; i++) {\n        console.log('check inside loop', this.state[arrInput[i]], arrInput[i]);\n\n        if (!this.state[arrInput[i]]) {\n          isValid = false;\n          alert('Missing parameter ' + arrInput[i]);\n          break;\n        }\n      }\n\n      return isValid;\n    };\n\n    this.handleAddNewUser = () => {\n      let isValid = this.checkValideInput();\n\n      if (isValid === true) {//call api create modal\n      }\n\n      this.checkValideInput();\n      console.log('data modal', this.state);\n    };\n\n    this.state = {\n      email: '',\n      password: '',\n      firstName: '',\n      lastName: '',\n      address: ''\n    };\n  }\n\n  componentDidMount() {}\n\n  render() {\n    console.log(\"check child props\", this.props);\n    console.log(\"check child open modal\", this.props.isOpen);\n    return /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: this.props.isOpen,\n      toggle: () => {\n        this.toggle();\n      },\n      className: \"modal-user-container\",\n      size: \"lg\",\n      centered: true,\n      children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n        toggle: () => {\n          this.toggle();\n        },\n        children: \"Create a new user\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-user-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              onChange: event => {\n                this.handleOnChangeInput(event, \"email\");\n              },\n              value: this.state.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              onChange: event => {\n                this.handleOnChangeInput(event, \"password\");\n              },\n              value: this.state.password\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"First name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text \",\n              onChange: event => {\n                this.handleOnChangeInput(event, \"firstName\");\n              },\n              value: this.state.firstName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Last name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              onChange: event => {\n                this.handleOnChangeInput(event, \"lastName\");\n              },\n              value: this.state.lastName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-container max-width-input\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              onChange: event => {\n                this.handleOnChangeInput(event, \"address\");\n              },\n              value: this.state.address\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ModalFooter, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          color: \"primary\",\n          className: \"px-3\",\n          onClick: () => {\n            // this.toggle();\n            this.handleAddNewUser();\n          },\n          children: \"Save changes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this), \" \", /*#__PURE__*/_jsxDEV(Button, {\n          color: \"secondary\",\n          className: \"px-3\",\n          onClick: () => {},\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {};\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ModalUser);","map":{"version":3,"sources":["/Users/macbook/Desktop/Frontend-ReactJS-QuickStart/src/containers/System/ModalUser.js"],"names":["React","Component","FormattedMessage","connect","Button","Modal","ModalHeader","ModalBody","ModalFooter","ModalUser","constructor","props","toggle","toggleFromParent","handleOnChangeInput","event","id","copyState","state","target","value","setState","checkValideInput","isValid","arrInput","i","length","console","log","alert","handleAddNewUser","email","password","firstName","lastName","address","componentDidMount","render","isOpen","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,gBAAT,QAAiC,YAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,WAAxB,EAAqCC,SAArC,EAAgDC,WAAhD,QAAmE,YAAnE;;;AACA,MAAMC,SAAN,SAAwBR,SAAxB,CAAkC;AAChCS,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAanBC,MAbmB,GAaV,MAAM;AACb,WAAKD,KAAL,CAAWE,gBAAX;AACD,KAfkB;;AAAA,SAgBnBC,mBAhBmB,GAgBG,CAACC,KAAD,EAASC,EAAT,KAAgB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA,UAAIC,SAAS,GAAC,EAAC,GAAG,KAAKC;AAAT,OAAd;AACAD,MAAAA,SAAS,CAACD,EAAD,CAAT,GAAgBD,KAAK,CAACI,MAAN,CAAaC,KAA7B;AAEA,WAAKC,QAAL,CAAc,EAAC,GAAGJ;AAAJ,OAAd;AAID,KAjCkB;;AAAA,SAkCnBK,gBAlCmB,GAkCA,MAAK;AACtB,UAAIC,OAAO,GAAG,IAAd;AACA,UAAIC,QAAQ,GAAG,CAAC,OAAD,EAAU,UAAV,EAAsB,WAAtB,EAAmC,UAAnC,EAA+C,SAA/C,CAAf;;AACA,WAAI,IAAIC,CAAC,GAAC,CAAV,EAAaA,CAAC,GAACD,QAAQ,CAACE,MAAxB,EAAgCD,CAAC,EAAjC,EAAoC;AAClCE,QAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiC,KAAKV,KAAL,CAAWM,QAAQ,CAACC,CAAD,CAAnB,CAAjC,EAAyDD,QAAQ,CAACC,CAAD,CAAjE;;AACA,YAAG,CAAC,KAAKP,KAAL,CAAWM,QAAQ,CAACC,CAAD,CAAnB,CAAJ,EAA4B;AAC1BF,UAAAA,OAAO,GAAG,KAAV;AACAM,UAAAA,KAAK,CAAC,uBAAuBL,QAAQ,CAACC,CAAD,CAAhC,CAAL;AACA;AACD;AACF;;AAED,aAAOF,OAAP;AACD,KA/CkB;;AAAA,SAgDnBO,gBAhDmB,GAgDA,MAAM;AACvB,UAAIP,OAAO,GAAG,KAAKD,gBAAL,EAAd;;AACA,UAAGC,OAAO,KAAK,IAAf,EAAoB,CAClB;AACD;;AACD,WAAKD,gBAAL;AACAK,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA2B,KAAKV,KAAhC;AACD,KAvDkB;;AAEjB,SAAKA,KAAL,GAAa;AACXa,MAAAA,KAAK,EAAC,EADK;AAEXC,MAAAA,QAAQ,EAAC,EAFE;AAGXC,MAAAA,SAAS,EAAC,EAHC;AAIXC,MAAAA,QAAQ,EAAC,EAJE;AAKXC,MAAAA,OAAO,EAAC;AALG,KAAb;AAOD;;AAEDC,EAAAA,iBAAiB,GAAG,CAAE;;AA6CtBC,EAAAA,MAAM,GAAG;AACPV,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiC,KAAKjB,KAAtC;AACAgB,IAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ,EAAsC,KAAKjB,KAAL,CAAW2B,MAAjD;AACA,wBACE,QAAC,KAAD;AACE,MAAA,MAAM,EAAE,KAAK3B,KAAL,CAAW2B,MADrB;AAEE,MAAA,MAAM,EAAE,MAAM;AACZ,aAAK1B,MAAL;AACD,OAJH;AAKE,MAAA,SAAS,EAAE,sBALb;AAME,MAAA,IAAI,EAAC,IANP;AAOE,MAAA,QAAQ,MAPV;AAAA,8BASE,QAAC,WAAD;AACE,QAAA,MAAM,EAAE,MAAM;AACZ,eAAKA,MAAL;AACD,SAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATF,eAgBE,QAAC,SAAD;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC,iBAAf;AAAA,kCACE;AAAK,YAAA,SAAS,EAAC,iBAAf;AAAA,oCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAO,cAAA,IAAI,EAAC,MAAZ;AAAoB,cAAA,QAAQ,EAAGG,KAAD,IAAS;AAAC,qBAAKD,mBAAL,CAAyBC,KAAzB,EAAiC,OAAjC;AAA0C,eAAlF;AAAoF,cAAA,KAAK,EAAE,KAAKG,KAAL,CAAWa;AAAtG;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAKE;AAAK,YAAA,SAAS,EAAC,iBAAf;AAAA,oCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAO,cAAA,IAAI,EAAC,UAAZ;AAAuB,cAAA,QAAQ,EAAGhB,KAAD,IAAS;AAAC,qBAAKD,mBAAL,CAAyBC,KAAzB,EAAgC,UAAhC;AAA4C,eAAvF;AAAyF,cAAA,KAAK,EAAE,KAAKG,KAAL,CAAWc;AAA3G;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBALF,eASE;AAAK,YAAA,SAAS,EAAC,iBAAf;AAAA,oCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAO,cAAA,IAAI,EAAC,OAAZ;AAAoB,cAAA,QAAQ,EAAGjB,KAAD,IAAS;AAAC,qBAAKD,mBAAL,CAAyBC,KAAzB,EAAgC,WAAhC;AAA6C,eAArF;AAAuF,cAAA,KAAK,EAAE,KAAKG,KAAL,CAAWe;AAAzG;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBATF,eAaE;AAAK,YAAA,SAAS,EAAC,iBAAf;AAAA,oCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAO,cAAA,IAAI,EAAC,MAAZ;AAAmB,cAAA,QAAQ,EAAGlB,KAAD,IAAS;AAAC,qBAAKD,mBAAL,CAAyBC,KAAzB,EAAgC,UAAhC;AAA4C,eAAnF;AAAqF,cAAA,KAAK,EAAE,KAAKG,KAAL,CAAWgB;AAAvG;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAbF,eAiBE;AAAK,YAAA,SAAS,EAAC,iCAAf;AAAA,oCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAO,cAAA,IAAI,EAAC,MAAZ;AAAmB,cAAA,QAAQ,EAAGnB,KAAD,IAAS;AAAC,qBAAKD,mBAAL,CAAyBC,KAAzB,EAAgC,SAAhC;AAA2C,eAAlF;AAAoF,cAAA,KAAK,EAAE,KAAKG,KAAL,CAAWiB;AAAtG;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAjBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAhBF,eAwCE,QAAC,WAAD;AAAA,gCACE,QAAC,MAAD;AACE,UAAA,KAAK,EAAC,SADR;AAEE,UAAA,SAAS,EAAC,MAFZ;AAGE,UAAA,OAAO,EAAE,MAAM;AACb;AACA,iBAAKL,gBAAL;AACD,WANH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAUY,GAVZ,eAWE,QAAC,MAAD;AACE,UAAA,KAAK,EAAC,WADR;AAEE,UAAA,SAAS,EAAC,MAFZ;AAGE,UAAA,OAAO,EAAE,MAAM,CAEd,CALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAXF;AAAA;AAAA;AAAA;AAAA;AAAA,cAxCF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAgED;;AA5H+B;;AA+HlC,MAAMS,eAAe,GAAIrB,KAAD,IAAW;AACjC,SAAO,EAAP;AACD,CAFD;;AAIA,MAAMsB,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO,EAAP;AACD,CAFD;;AAIA,eAAetC,OAAO,CAACoC,eAAD,EAAkBC,kBAAlB,CAAP,CAA6C/B,SAA7C,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { FormattedMessage } from \"react-intl\";\nimport { connect } from \"react-redux\";\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\nclass ModalUser extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email:'',\n      password:'',\n      firstName:'',\n      lastName:'',\n      address:'',\n    };\n  }\n\n  componentDidMount() {}\n\n  toggle = () => {\n    this.props.toggleFromParent();\n  };\n  handleOnChangeInput = (event , id) => {\n    // console.log('event 1',event.target.value,id);\n    // this.state[id] = event.target.value;\n    // this.setState({\n    //   ...this.state\n    // },()=>{\n    //   console.log('check bad state:',this.state)\n    // })\n\n    //good code\n    let copyState={...this.state};\n    copyState[id] = event.target.value;\n\n    this.setState({...copyState});\n\n\n\n  };\n  checkValideInput = () =>{\n    let isValid = true;\n    let arrInput = ['email', 'password', 'firstName', 'lastName', 'address'];\n    for(let i=0; i<arrInput.length; i++){\n      console.log('check inside loop', this.state[arrInput[i]],arrInput[i]);\n      if(!this.state[arrInput[i]]){\n        isValid = false;\n        alert('Missing parameter ' + arrInput[i]);\n        break;\n      }\n    }\n    \n    return isValid;\n  }\n  handleAddNewUser = () => {\n    let isValid = this.checkValideInput();\n    if(isValid === true){\n      //call api create modal\n    }\n    this.checkValideInput();\n    console.log('data modal' , this.state)\n  }\n  render() {\n    console.log(\"check child props\", this.props);\n    console.log(\"check child open modal\", this.props.isOpen);\n    return (\n      <Modal\n        isOpen={this.props.isOpen}\n        toggle={() => {\n          this.toggle();\n        }}\n        className={\"modal-user-container\"}\n        size=\"lg\"\n        centered\n      >\n        <ModalHeader\n          toggle={() => {\n            this.toggle();\n          }}\n        >\n          Create a new user\n        </ModalHeader>\n        <ModalBody>\n          <div className=\"modal-user-body\">\n            <div className=\"input-container\">\n              <label>Email</label>\n              <input type=\"text\"  onChange={(event)=>{this.handleOnChangeInput(event , \"email\")}} value={this.state.email}/>\n            </div>\n            <div className=\"input-container\">\n              <label>Password</label>\n              <input type=\"password\" onChange={(event)=>{this.handleOnChangeInput(event, \"password\")}} value={this.state.password}/>\n            </div>\n            <div className=\"input-container\">\n              <label>First name</label>\n              <input type=\"text \" onChange={(event)=>{this.handleOnChangeInput(event, \"firstName\")}} value={this.state.firstName} />\n            </div>\n            <div className=\"input-container\">\n              <label>Last name</label>\n              <input type=\"text\" onChange={(event)=>{this.handleOnChangeInput(event, \"lastName\")}} value={this.state.lastName} />\n            </div>\n            <div className=\"input-container max-width-input\">\n              <label>Address</label>\n              <input type=\"text\" onChange={(event)=>{this.handleOnChangeInput(event, \"address\")}} value={this.state.address} />\n            </div>\n          </div>\n        </ModalBody>\n        <ModalFooter>\n          <Button\n            color=\"primary\"\n            className=\"px-3\"\n            onClick={() => {\n              // this.toggle();\n              this.handleAddNewUser();\n            }}\n          >\n            Save changes\n          </Button>{\" \"}\n          <Button\n            color=\"secondary\"\n            className=\"px-3\"\n            onClick={() => {\n            \n            }}\n          >\n            Close\n          </Button>\n        </ModalFooter>\n      </Modal>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {};\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ModalUser);\n"]},"metadata":{},"sourceType":"module"}