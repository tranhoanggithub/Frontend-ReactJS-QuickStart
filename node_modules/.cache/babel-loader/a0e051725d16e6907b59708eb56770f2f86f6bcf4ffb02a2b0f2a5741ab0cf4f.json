{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\LEARN REACTJS\\\\Frontend-ReactJS-QuickStart\\\\src\\\\components\\\\Navigator.js\";\nimport React, { Component, Fragment } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { FormattedMessage } from 'react-intl';\nimport { connect } from 'react-redux';\nimport './Navigator.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass MenuGroup extends Component {\n  render() {\n    const {\n      name,\n      children\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      className: \"menu-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"menu-group-name\",\n        children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n          id: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"menu-list list-unstyled\",\n        children: children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this);\n  }\n}\nclass Menu extends Component {\n  render() {\n    const {\n      name,\n      active,\n      link,\n      children,\n      onClick,\n      hasSubMenu,\n      onLinkClick\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      className: \"menu\" + (hasSubMenu ? \" has-sub-menu\" : \"\") + \"\" + (active ? \" active\" : \"\"),\n      children: hasSubMenu ? /*#__PURE__*/_jsxDEV(Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          \"data-toggle\": \"collapse\",\n          className: \"menu-link collapsed\",\n          onClick: onClick,\n          \"aria-expanded\": \"false\",\n          children: [/*#__PURE__*/_jsxDEV(FormattedMessage, {\n            id: name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"icon-right\",\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"far fa-angle-right\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"sub-menu-list list-unstyled\",\n            children: children\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(Link, {\n        to: link,\n        className: \"menu-link\",\n        onClick: onLinkClick,\n        children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n          id: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this);\n  }\n}\nclass SubMenu extends Component {\n  constructor(...args) {\n    super(...args);\n    this.getItemClass = path => {\n      return this.props.location.pathname === path ? \"active\" : \"\";\n    };\n  }\n  render() {\n    const {\n      name,\n      link,\n      onLinkClick\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      className: \"sub-menu \" + this.getItemClass(link),\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: link,\n        className: \"sub-menu-link\",\n        onClick: onLinkClick,\n        children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n          id: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this);\n  }\n}\nconst MenuGroupWithRouter = withRouter(MenuGroup);\n_c = MenuGroupWithRouter;\nconst MenuWithRouter = withRouter(Menu);\n_c2 = MenuWithRouter;\nconst SubMenuWithRouter = withRouter(SubMenu);\n_c3 = SubMenuWithRouter;\nconst withRouterInnerRef = WrappedComponent => {\n  class InnerComponentWithRef extends React.Component {\n    render() {\n      const {\n        forwardRef,\n        ...rest\n      } = this.props;\n      return /*#__PURE__*/_jsxDEV(WrappedComponent, {\n        ...rest,\n        ref: forwardRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 20\n      }, this);\n    }\n  }\n  const ComponentWithRef = withRouter(InnerComponentWithRef, {\n    withRef: true\n  });\n  return /*#__PURE__*/React.forwardRef((props, ref) => {\n    return /*#__PURE__*/_jsxDEV(ComponentWithRef, {\n      ...props,\n      forwardRef: ref\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 16\n    }, this);\n  });\n};\nclass Navigator extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      expandedMenu: {}\n    };\n    this.toggle = (groupIndex, menuIndex) => {\n      const expandedMenu = {};\n      const needExpand = !(this.state.expandedMenu[groupIndex + '_' + menuIndex] === true);\n      if (needExpand) {\n        expandedMenu[groupIndex + '_' + menuIndex] = true;\n      }\n      this.setState({\n        expandedMenu: expandedMenu\n      });\n    };\n    this.isMenuHasSubMenuActive = (location, subMenus, link) => {\n      if (subMenus) {\n        if (subMenus.length === 0) {\n          return false;\n        }\n        const currentPath = location.pathname;\n        for (let i = 0; i < subMenus.length; i++) {\n          const subMenu = subMenus[i];\n          if (subMenu.link === currentPath) {\n            return true;\n          }\n        }\n      }\n      if (link) {\n        return this.props.location.pathname === link;\n      }\n      return false;\n    };\n    this.checkActiveMenu = () => {\n      const {\n        menus,\n        location\n      } = this.props;\n      outerLoop: for (let i = 0; i < menus.length; i++) {\n        const group = menus[i];\n        if (group.menus && group.menus.length > 0) {\n          for (let j = 0; j < group.menus.length; j++) {\n            const menu = group.menus[j];\n            if (menu.subMenus && menu.subMenus.length > 0) {\n              if (this.isMenuHasSubMenuActive(location, menu.subMenus, null)) {\n                const key = i + '_' + j;\n                this.setState({\n                  expandedMenu: {\n                    [key]: true\n                  }\n                });\n                break outerLoop;\n              }\n            }\n          }\n        }\n      }\n    };\n  }\n  componentDidMount() {\n    this.checkActiveMenu();\n  }\n  // componentWillReceiveProps(nextProps, prevState) {\n  //     const { location, setAccountMenuPath, setSettingMenuPath } = this.props;\n  //     const { location: nextLocation } = nextProps;\n  //     if (location !== nextLocation) {\n  //         let pathname = nextLocation && nextLocation.pathname;\n  //         if ((pathname.startsWith('/account/') || pathname.startsWith('/fds/account/'))) {\n  //             setAccountMenuPath(pathname);\n  //         }\n  //         if (pathname.startsWith('/settings/')) {\n  //             setSettingMenuPath(pathname);\n  //         };\n  //     };\n  // };\n\n  componentDidUpdate(prevProps, prevState) {\n    const {\n      location\n    } = this.props;\n    const {\n      location: prevLocation\n    } = prevProps;\n    if (location !== prevLocation) {\n      this.checkActiveMenu();\n    }\n    ;\n  }\n  render() {\n    const {\n      menus,\n      location,\n      onLinkClick\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"navigator-menu list-unstyled\",\n        children: menus.map((group, groupIndex) => {\n          return /*#__PURE__*/_jsxDEV(Fragment, {\n            children: /*#__PURE__*/_jsxDEV(MenuGroupWithRouter, {\n              name: group.name,\n              children: group.menus ? group.menus.map((menu, menuIndex) => {\n                const isMenuHasSubMenuActive = this.isMenuHasSubMenuActive(location, menu.subMenus, menu.link);\n                const isSubMenuOpen = this.state.expandedMenu[groupIndex + '_' + menuIndex] === true;\n                return /*#__PURE__*/_jsxDEV(MenuWithRouter, {\n                  active: isMenuHasSubMenuActive,\n                  name: menu.name,\n                  link: menu.link,\n                  hasSubMenu: menu.subMenus,\n                  isOpen: isSubMenuOpen,\n                  onClick: () => this.toggle(groupIndex, menuIndex),\n                  onLinkClick: onLinkClick,\n                  children: menu.subMenus && menu.subMenus.map((subMenu, subMenuIndex) => /*#__PURE__*/_jsxDEV(SubMenuWithRouter, {\n                    name: subMenu.name,\n                    link: subMenu.link,\n                    onClick: this.closeOtherExpand,\n                    onLinkClick: onLinkClick\n                  }, subMenuIndex, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 213,\n                    columnNumber: 61\n                  }, this))\n                }, menuIndex, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 202,\n                  columnNumber: 53\n                }, this);\n              }) : null\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 37\n            }, this)\n          }, groupIndex, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 33\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 13\n    }, this);\n  }\n}\nconst mapStateToProps = state => {\n  return {};\n};\nconst mapDispatchToProps = dispatch => {\n  return {};\n};\nexport default withRouterInnerRef(connect(mapStateToProps, mapDispatchToProps)(Navigator));\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"MenuGroupWithRouter\");\n$RefreshReg$(_c2, \"MenuWithRouter\");\n$RefreshReg$(_c3, \"SubMenuWithRouter\");","map":{"version":3,"names":["React","Component","Fragment","Link","withRouter","FormattedMessage","connect","jsxDEV","_jsxDEV","MenuGroup","render","name","children","props","className","id","fileName","_jsxFileName","lineNumber","columnNumber","Menu","active","link","onClick","hasSubMenu","onLinkClick","to","SubMenu","constructor","args","getItemClass","path","location","pathname","MenuGroupWithRouter","_c","MenuWithRouter","_c2","SubMenuWithRouter","_c3","withRouterInnerRef","WrappedComponent","InnerComponentWithRef","forwardRef","rest","ref","ComponentWithRef","withRef","Navigator","state","expandedMenu","toggle","groupIndex","menuIndex","needExpand","setState","isMenuHasSubMenuActive","subMenus","length","currentPath","i","subMenu","checkActiveMenu","menus","outerLoop","group","j","menu","key","componentDidMount","componentDidUpdate","prevProps","prevState","prevLocation","map","isSubMenuOpen","isOpen","subMenuIndex","closeOtherExpand","mapStateToProps","mapDispatchToProps","dispatch","$RefreshReg$"],"sources":["C:/Users/Admin/Desktop/LEARN REACTJS/Frontend-ReactJS-QuickStart/src/components/Navigator.js"],"sourcesContent":["import React, { Component, Fragment } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport { connect } from 'react-redux';\r\n\r\nimport './Navigator.scss';\r\n\r\nclass MenuGroup extends Component {\r\n\r\n    render() {\r\n        const { name, children } = this.props;\r\n        return (\r\n            <li className=\"menu-group\">\r\n                <div className=\"menu-group-name\">\r\n                    <FormattedMessage id={name} />\r\n                </div>\r\n                <ul className=\"menu-list list-unstyled\">\r\n                    {children}\r\n                </ul>\r\n            </li>\r\n        );\r\n    }\r\n}\r\n\r\nclass Menu extends Component {\r\n\r\n    render() {\r\n        const { name, active, link, children, onClick, hasSubMenu, onLinkClick } = this.props;\r\n        return (\r\n            <li className={\"menu\" + (hasSubMenu ? \" has-sub-menu\" : \"\") + (\"\") + (active ? \" active\" : \"\")}>\r\n                {hasSubMenu ? (\r\n                    <Fragment>\r\n                        <span\r\n                            data-toggle=\"collapse\"\r\n                            className={\"menu-link collapsed\"}\r\n                            onClick={onClick}\r\n                            aria-expanded={\"false\"}\r\n                        >\r\n                            <FormattedMessage id={name} />\r\n                            <div className=\"icon-right\">\r\n                                <i className={\"far fa-angle-right\"} />\r\n                            </div>\r\n                        </span>\r\n                        <div>\r\n                            <ul className=\"sub-menu-list list-unstyled\">\r\n                                {children}\r\n                            </ul>\r\n                        </div>\r\n                    </Fragment>\r\n                ) : (\r\n                        <Link to={link} className=\"menu-link\" onClick={onLinkClick}>\r\n                            <FormattedMessage id={name} />\r\n                        </Link>\r\n                    )}\r\n            </li>\r\n        );\r\n    }\r\n}\r\n\r\nclass SubMenu extends Component {\r\n\r\n    getItemClass = path => {\r\n        return this.props.location.pathname === path ? \"active\" : \"\";\r\n    };\r\n\r\n    render() {\r\n        const { name, link, onLinkClick } = this.props;\r\n        return (\r\n            <li className={\"sub-menu \" + this.getItemClass(link)}>\r\n                <Link to={link} className=\"sub-menu-link\" onClick={onLinkClick}>\r\n                    <FormattedMessage id={name} />\r\n                </Link>\r\n            </li>\r\n        );\r\n    }\r\n}\r\n\r\nconst MenuGroupWithRouter = withRouter(MenuGroup);\r\nconst MenuWithRouter = withRouter(Menu);\r\nconst SubMenuWithRouter = withRouter(SubMenu);\r\n\r\nconst withRouterInnerRef = (WrappedComponent) => {\r\n\r\n    class InnerComponentWithRef extends React.Component {\r\n        render() {\r\n            const { forwardRef, ...rest } = this.props;\r\n            return <WrappedComponent {...rest} ref={forwardRef} />;\r\n        }\r\n    }\r\n\r\n    const ComponentWithRef = withRouter(InnerComponentWithRef, { withRef: true });\r\n\r\n    return React.forwardRef((props, ref) => {\r\n        return <ComponentWithRef {...props} forwardRef={ref} />;\r\n    });\r\n};\r\n\r\nclass Navigator extends Component {\r\n    state = {\r\n        expandedMenu: {}\r\n    };\r\n\r\n    toggle = (groupIndex, menuIndex) => {\r\n        const expandedMenu = {};\r\n        const needExpand = !(this.state.expandedMenu[groupIndex + '_' + menuIndex] === true);\r\n        if (needExpand) {\r\n            expandedMenu[groupIndex + '_' + menuIndex] = true;\r\n        }\r\n\r\n        this.setState({\r\n            expandedMenu: expandedMenu\r\n        });\r\n    };\r\n\r\n    isMenuHasSubMenuActive = (location, subMenus, link) => {\r\n        if (subMenus) {\r\n            if (subMenus.length === 0) {\r\n                return false;\r\n            }\r\n\r\n            const currentPath = location.pathname;\r\n            for (let i = 0; i < subMenus.length; i++) {\r\n                const subMenu = subMenus[i];\r\n                if (subMenu.link === currentPath) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (link) {\r\n            return this.props.location.pathname === link;\r\n        }\r\n\r\n        return false;\r\n    };\r\n\r\n    checkActiveMenu = () => {\r\n        const { menus, location } = this.props;\r\n        outerLoop:\r\n        for (let i = 0; i < menus.length; i++) {\r\n            const group = menus[i];\r\n            if (group.menus && group.menus.length > 0) {\r\n                for (let j = 0; j < group.menus.length; j++) {\r\n                    const menu = group.menus[j];\r\n                    if (menu.subMenus && menu.subMenus.length > 0) {\r\n                        if (this.isMenuHasSubMenuActive(location, menu.subMenus, null)) {\r\n                            const key = i + '_' + j;\r\n                            this.setState({\r\n                                expandedMenu: {\r\n                                    [key]: true\r\n                                }\r\n                            });\r\n                            break outerLoop;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.checkActiveMenu();\r\n    };\r\n\r\n    // componentWillReceiveProps(nextProps, prevState) {\r\n    //     const { location, setAccountMenuPath, setSettingMenuPath } = this.props;\r\n    //     const { location: nextLocation } = nextProps;\r\n    //     if (location !== nextLocation) {\r\n    //         let pathname = nextLocation && nextLocation.pathname;\r\n    //         if ((pathname.startsWith('/account/') || pathname.startsWith('/fds/account/'))) {\r\n    //             setAccountMenuPath(pathname);\r\n    //         }\r\n    //         if (pathname.startsWith('/settings/')) {\r\n    //             setSettingMenuPath(pathname);\r\n    //         };\r\n    //     };\r\n    // };\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        const { location } = this.props;\r\n        const { location: prevLocation } = prevProps;\r\n        if (location !== prevLocation) {\r\n            this.checkActiveMenu();\r\n        };\r\n    };\r\n\r\n    render() {\r\n        const { menus, location, onLinkClick } = this.props;\r\n        return (\r\n            <Fragment>\r\n                <ul className=\"navigator-menu list-unstyled\">\r\n                    {\r\n                        menus.map((group, groupIndex) => {\r\n                            return (\r\n                                <Fragment key={groupIndex}>\r\n                                    <MenuGroupWithRouter name={group.name}>\r\n                                        {group.menus ? (\r\n                                            group.menus.map((menu, menuIndex) => {\r\n                                                const isMenuHasSubMenuActive = this.isMenuHasSubMenuActive(location, menu.subMenus, menu.link);\r\n                                                const isSubMenuOpen = this.state.expandedMenu[groupIndex + '_' + menuIndex] === true;\r\n                                                return (\r\n                                                    <MenuWithRouter\r\n                                                        key={menuIndex}\r\n                                                        active={isMenuHasSubMenuActive}\r\n                                                        name={menu.name}\r\n                                                        link={menu.link}\r\n                                                        hasSubMenu={menu.subMenus}\r\n                                                        isOpen={isSubMenuOpen}\r\n                                                        onClick={() => this.toggle(groupIndex, menuIndex)}\r\n                                                        onLinkClick={onLinkClick}\r\n                                                    >\r\n                                                        {menu.subMenus && menu.subMenus.map((subMenu, subMenuIndex) => (\r\n                                                            <SubMenuWithRouter\r\n                                                                key={subMenuIndex}\r\n                                                                name={subMenu.name}\r\n                                                                link={subMenu.link}\r\n                                                                onClick={this.closeOtherExpand}\r\n                                                                onLinkClick={onLinkClick}\r\n                                                            />\r\n                                                        ))}\r\n                                                    </MenuWithRouter>\r\n                                                );\r\n                                            })\r\n                                        ) : null}\r\n                                    </MenuGroupWithRouter>\r\n                                </Fragment>\r\n                            );\r\n                        })\r\n                    }\r\n                </ul>\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n    }\r\n}\r\n\r\nexport default withRouterInnerRef(connect(mapStateToProps, mapDispatchToProps)(Navigator));\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}