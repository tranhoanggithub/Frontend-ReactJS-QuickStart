{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\LEARN REACTJS\\\\Frontend-ReactJS-QuickStart\\\\src\\\\containers\\\\Header\\\\Header.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport * as actions from \"../../store/actions\";\nimport Navigator from '../../components/Navigator';\nimport { adminMenu, doctorMenu } from './menuApp';\nimport './Header.scss';\nimport { LANGUAGES, USER_ROLE } from \"../../utils\";\nimport { FormattedMessage } from 'react-intl';\nimport _ from 'lodash';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Header extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChangeLanguage = language => {\n      this.props.changeLanguageAppRedux(language);\n    };\n\n    this.state = {\n      menuApp: []\n    };\n  }\n\n  componentDidMount() {\n    let {\n      userInfo\n    } = this.props;\n    let menu = [];\n\n    if (userInfo && !_.isEmpty(userInfo)) {\n      let role = userInfo.roleId;\n\n      if (role === USER_ROLE.ADMIN) {\n        menu = adminMenu;\n      }\n\n      if (role === USER_ROLE.DOCTOR) {\n        menu = doctorMenu;\n      }\n    }\n\n    this.setState({\n      menuApp: menu\n    });\n  }\n\n  render() {\n    const {\n      processLogout,\n      language,\n      userInfo\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-tabs-container\",\n        children: /*#__PURE__*/_jsxDEV(Navigator, {\n          menus: this.state.menuApp\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"languages\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"welcome\",\n          children: [/*#__PURE__*/_jsxDEV(FormattedMessage, {\n            id: \"homeheader.welcome\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 47\n          }, this), userInfo && userInfo.firstName ? userInfo.firstName : '', \" !\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: language === LANGUAGES.VI ? \"languages-vi active\" : \"languages-vi\",\n          onClick: () => this.handleChangeLanguage(LANGUAGES.VI),\n          children: \"VN\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: language === LANGUAGES.EN ? \"languages-en active\" : \"languages-en\",\n          onClick: () => this.handleChangeLanguage(LANGUAGES.EN),\n          children: \"EN\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"btn btn-logout\",\n          onClick: processLogout,\n          title: \"Log out\",\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-sign-out-alt\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    isLoggedIn: state.user.isLoggedIn,\n    language: state.app.language,\n    userInfo: state.user.userInfo\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    processLogout: () => dispatch(actions.processLogout()),\n    changeLanguageAppRedux: language => dispatch(actions.changeLanguageApp(language))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);","map":{"version":3,"sources":["C:/Users/Admin/Desktop/LEARN REACTJS/Frontend-ReactJS-QuickStart/src/containers/Header/Header.js"],"names":["React","Component","connect","actions","Navigator","adminMenu","doctorMenu","LANGUAGES","USER_ROLE","FormattedMessage","_","Header","constructor","props","handleChangeLanguage","language","changeLanguageAppRedux","state","menuApp","componentDidMount","userInfo","menu","isEmpty","role","roleId","ADMIN","DOCTOR","setState","render","processLogout","firstName","VI","EN","mapStateToProps","isLoggedIn","user","app","mapDispatchToProps","dispatch","changeLanguageApp"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport * as actions from \"../../store/actions\";\r\nimport Navigator from '../../components/Navigator';\r\nimport { adminMenu, doctorMenu } from './menuApp';\r\nimport './Header.scss';\r\nimport { LANGUAGES , USER_ROLE} from \"../../utils\";\r\nimport { FormattedMessage } from 'react-intl';\r\nimport _ from 'lodash';\r\n\r\nclass Header extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            menuApp: []\r\n        }\r\n    }\r\n    handleChangeLanguage = (language) => {\r\n        this.props.changeLanguageAppRedux(language)\r\n    }\r\n    componentDidMount() {\r\n        let { userInfo } = this.props;\r\n        let menu = [];\r\n        if (userInfo && !_.isEmpty(userInfo)) {\r\n            let role = userInfo.roleId;\r\n            if(role === USER_ROLE.ADMIN){\r\n                menu = adminMenu;\r\n            }\r\n            if(role === USER_ROLE.DOCTOR){\r\n                menu = doctorMenu;\r\n            }\r\n        }\r\n        this.setState({\r\n            menuApp: menu\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { processLogout, language, userInfo } = this.props;\r\n        return (\r\n            <div className=\"header-container\">\r\n                {/* thanh navigator */}\r\n                <div className=\"header-tabs-container\">\r\n                    <Navigator menus={this.state.menuApp} />\r\n                </div>\r\n                <div className='languages'>\r\n                    <span className=\"welcome\"><FormattedMessage id=\"homeheader.welcome\" />{userInfo && userInfo.firstName ? userInfo.firstName : ''} !</span>\r\n                    <span className={language === LANGUAGES.VI ? \"languages-vi active\" : \"languages-vi\"} onClick={() => this.handleChangeLanguage(LANGUAGES.VI)}>VN</span>\r\n                    <span className={language === LANGUAGES.EN ? \"languages-en active\" : \"languages-en\"} onClick={() => this.handleChangeLanguage(LANGUAGES.EN)}>EN</span>\r\n                    {/* n√∫t logout */}\r\n                    <div className=\"btn btn-logout\" onClick={processLogout} title=\"Log out\">\r\n                        <i className=\"fas fa-sign-out-alt\"></i>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isLoggedIn: state.user.isLoggedIn,\r\n        language: state.app.language,\r\n        userInfo: state.user.userInfo\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        processLogout: () => dispatch(actions.processLogout()),\r\n        changeLanguageAppRedux: (language) => dispatch(actions.changeLanguageApp(language))\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);\r\n"]},"metadata":{},"sourceType":"module"}