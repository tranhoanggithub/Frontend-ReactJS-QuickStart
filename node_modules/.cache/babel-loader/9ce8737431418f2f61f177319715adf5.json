{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\LEARN REACTJS\\\\Frontend-ReactJS-QuickStart\\\\src\\\\containers\\\\Patient\\\\Doctor\\\\DoctorSchedule.js\";\nimport React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport HomeHeader from \"../../HomePage/HomeHeader\";\nimport './DoctorSchedule.scss';\nimport { Select } from 'react-select/dist/Select-fd7cb895.cjs.prod';\nimport moment from 'moment';\nimport localization from 'moment/locale/vi';\nimport { LANGUAGES } from '../../../utils';\nimport { getScheduleDoctorByDate } from '../../../services/userService';\nimport { FormattedMessage } from 'react-intl';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass DoctorSchedule extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getArrDays = language => {\n      let allDays = [];\n\n      for (let i = 0; i < 7; i++) {\n        let object = {};\n\n        if (language === LANGUAGES.VI) {\n          if (i === 0) {\n            let ddMM = moment(new Date()).format('DD/MM');\n            let today = `HÃ´m nay - ${ddMM}`;\n            object.label = today;\n          } else {\n            let labelVi = moment(new Date()).add(i, 'days').format('dddd- DD/MM');\n            object.label = this.capitalizeFirstLetter(labelVi);\n          }\n        } else {\n          if (i === 0) {\n            let ddMM = moment(new Date()).format('DD/MM');\n            let today = `Today - ${ddMM}`;\n            object.label = today;\n          } else {\n            object.label = moment(new Date()).add(i, 'days').locale('en').format(\"ddd - DD/MM\");\n          }\n        }\n\n        object.value = moment(new Date()).add(i, 'days').startOf('day').valueOf();\n        allDays.push(object);\n      }\n\n      return allDays;\n    };\n\n    this.handleOnChangeSelect = async event => {\n      if (this.props.doctorIdFromParent && this.props.doctorIdFromParent !== -1) {\n        let doctorId = this.props.doctorIdFromParent;\n        let date = event.target.value;\n        let res = await getScheduleDoctorByDate(doctorId, date);\n\n        if (res && res.errCode === 0) {\n          this.setState({\n            allAvalableTime: res.data ? res.data : []\n          });\n        }\n      }\n    };\n\n    this.state = {\n      allDays: [],\n      allAvalableTime: []\n    };\n  }\n\n  async componentDidMount() {\n    let {\n      language\n    } = this.props;\n    let allDays = this.getArrDays(language);\n    this.setState({\n      allDays: allDays\n    });\n  }\n\n  capitalizeFirstLetter(string) {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n  }\n\n  async componentDidUpdate(prevProps, prevState, snapshot) {\n    if (this.props.language !== prevProps.language) {\n      let allDays = this.getArrDays(this.props.language);\n      this.setState({\n        allDays: allDays\n      });\n    }\n\n    if (this.props.doctorIdFromParent !== prevProps.doctorIdFromParent) {\n      let allDays = this.getArrDays(this.props.language);\n      let res = await getScheduleDoctorByDate(this.props.doctorIdFromParent, allDays[0].value);\n      this.setState({\n        allAvalableTime: res.data ? res.data : []\n      });\n    }\n  }\n\n  render() {\n    let {\n      allDays,\n      allAvalableTime\n    } = this.state;\n    let {\n      language\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"doctor-schedule-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"all-schedule\",\n        children: /*#__PURE__*/_jsxDEV(\"select\", {\n          onChange: event => this.handleOnChangeSelect(event),\n          children: allDays && allDays.length > 0 && allDays.map((item, index) => {\n            return /*#__PURE__*/_jsxDEV(\"option\", {\n              value: item.value,\n              children: item.label\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 37\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"all-available-time\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-calendar\",\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-calendar-alt\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n                id: \"patient.detail-doctor.schedule\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 66\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 60\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"time-content\",\n          children: allAvalableTime && allAvalableTime.length > 0 ? /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"time-content-btns\",\n              children: allAvalableTime.map((item, index) => {\n                let timeDisplay = language === LANGUAGES.VI ? item.timeTypeData.valueVi : item.timeTypeData.valueEn;\n                return /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: language === LANGUAGES.VI ? 'btn-vie' : 'btn-en',\n                  children: timeDisplay\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 120,\n                  columnNumber: 49\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"book-free\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [/*#__PURE__*/_jsxDEV(FormattedMessage, {\n                  id: \"patient.detail-doctor.choose\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 130,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n                  class: \"far fa-hand-point-up\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 131,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(FormattedMessage, {\n                  id: \"patient.detail-doctor.book-free\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 132,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 29\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"no-schedule\",\n            children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n              id: \"patient.detail-doctor.no-schedule\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    language: state.app.language\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DoctorSchedule);","map":{"version":3,"sources":["C:/Users/Admin/Desktop/LEARN REACTJS/Frontend-ReactJS-QuickStart/src/containers/Patient/Doctor/DoctorSchedule.js"],"names":["React","Component","connect","HomeHeader","Select","moment","localization","LANGUAGES","getScheduleDoctorByDate","FormattedMessage","DoctorSchedule","constructor","props","getArrDays","language","allDays","i","object","VI","ddMM","Date","format","today","label","labelVi","add","capitalizeFirstLetter","locale","value","startOf","valueOf","push","handleOnChangeSelect","event","doctorIdFromParent","doctorId","date","target","res","errCode","setState","allAvalableTime","data","state","componentDidMount","string","charAt","toUpperCase","slice","componentDidUpdate","prevProps","prevState","snapshot","render","length","map","item","index","timeDisplay","timeTypeData","valueVi","valueEn","mapStateToProps","app","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,OAAO,uBAAP;AACA,SAASC,MAAT,QAAuB,4CAAvB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,YAAP,MAAyB,kBAAzB;AACA,SAASC,SAAT,QAA0B,gBAA1B;AACA,SAASC,uBAAT,QAAwC,+BAAxC;AACA,SAASC,gBAAT,QAAiC,YAAjC;;;AAKA,MAAMC,cAAN,SAA6BT,SAA7B,CAAuC;AACnCU,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAkBnBC,UAlBmB,GAkBLC,QAAD,IAAc;AAEvB,UAAIC,OAAO,GAAG,EAAd;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;AACxB,YAAIC,MAAM,GAAG,EAAb;;AACA,YAAIH,QAAQ,KAAKP,SAAS,CAACW,EAA3B,EAA+B;AAC3B,cAAIF,CAAC,KAAK,CAAV,EAAa;AACT,gBAAIG,IAAI,GAAGd,MAAM,CAAC,IAAIe,IAAJ,EAAD,CAAN,CAAmBC,MAAnB,CAA0B,OAA1B,CAAX;AACA,gBAAIC,KAAK,GAAI,aAAYH,IAAK,EAA9B;AACAF,YAAAA,MAAM,CAACM,KAAP,GAAeD,KAAf;AACH,WAJD,MAIO;AACH,gBAAIE,OAAO,GAAGnB,MAAM,CAAC,IAAIe,IAAJ,EAAD,CAAN,CAAmBK,GAAnB,CAAuBT,CAAvB,EAA0B,MAA1B,EAAkCK,MAAlC,CAAyC,aAAzC,CAAd;AACAJ,YAAAA,MAAM,CAACM,KAAP,GAAe,KAAKG,qBAAL,CAA2BF,OAA3B,CAAf;AACH;AACJ,SATD,MASO;AACH,cAAIR,CAAC,KAAK,CAAV,EAAa;AACT,gBAAIG,IAAI,GAAGd,MAAM,CAAC,IAAIe,IAAJ,EAAD,CAAN,CAAmBC,MAAnB,CAA0B,OAA1B,CAAX;AACA,gBAAIC,KAAK,GAAI,WAAUH,IAAK,EAA5B;AACAF,YAAAA,MAAM,CAACM,KAAP,GAAeD,KAAf;AACH,WAJD,MAIO;AACHL,YAAAA,MAAM,CAACM,KAAP,GAAelB,MAAM,CAAC,IAAIe,IAAJ,EAAD,CAAN,CAAmBK,GAAnB,CAAuBT,CAAvB,EAA0B,MAA1B,EAAkCW,MAAlC,CAAyC,IAAzC,EAA+CN,MAA/C,CAAsD,aAAtD,CAAf;AACH;AAEJ;;AACDJ,QAAAA,MAAM,CAACW,KAAP,GAAevB,MAAM,CAAC,IAAIe,IAAJ,EAAD,CAAN,CAAmBK,GAAnB,CAAuBT,CAAvB,EAA0B,MAA1B,EAAkCa,OAAlC,CAA0C,KAA1C,EAAiDC,OAAjD,EAAf;AAEAf,QAAAA,OAAO,CAACgB,IAAR,CAAad,MAAb;AACH;;AACD,aAAOF,OAAP;AACH,KA/CkB;;AAAA,SAgEnBiB,oBAhEmB,GAgEI,MAAOC,KAAP,IAAiB;AACpC,UAAI,KAAKrB,KAAL,CAAWsB,kBAAX,IAAiC,KAAKtB,KAAL,CAAWsB,kBAAX,KAAkC,CAAC,CAAxE,EAA2E;AACvE,YAAIC,QAAQ,GAAG,KAAKvB,KAAL,CAAWsB,kBAA1B;AACA,YAAIE,IAAI,GAAGH,KAAK,CAACI,MAAN,CAAaT,KAAxB;AACA,YAAIU,GAAG,GAAG,MAAM9B,uBAAuB,CAAC2B,QAAD,EAAWC,IAAX,CAAvC;;AAEA,YAAIE,GAAG,IAAIA,GAAG,CAACC,OAAJ,KAAgB,CAA3B,EAA8B;AAC1B,eAAKC,QAAL,CAAc;AACVC,YAAAA,eAAe,EAAEH,GAAG,CAACI,IAAJ,GAAWJ,GAAG,CAACI,IAAf,GAAsB;AAD7B,WAAd;AAGH;AACJ;AACJ,KA5EkB;;AAEf,SAAKC,KAAL,GAAa;AACT5B,MAAAA,OAAO,EAAE,EADA;AAET0B,MAAAA,eAAe,EAAE;AAFR,KAAb;AAIH;;AAEsB,QAAjBG,iBAAiB,GAAG;AACtB,QAAI;AAAE9B,MAAAA;AAAF,QAAe,KAAKF,KAAxB;AACA,QAAIG,OAAO,GAAG,KAAKF,UAAL,CAAgBC,QAAhB,CAAd;AACA,SAAK0B,QAAL,CAAc;AACVzB,MAAAA,OAAO,EAAEA;AADC,KAAd;AAGH;;AACDW,EAAAA,qBAAqB,CAACmB,MAAD,EAAS;AAC1B,WAAOA,MAAM,CAACC,MAAP,CAAc,CAAd,EAAiBC,WAAjB,KAAiCF,MAAM,CAACG,KAAP,CAAa,CAAb,CAAxC;AACH;;AAgCuB,QAAlBC,kBAAkB,CAACC,SAAD,EAAYC,SAAZ,EAAuBC,QAAvB,EAAiC;AACrD,QAAI,KAAKxC,KAAL,CAAWE,QAAX,KAAwBoC,SAAS,CAACpC,QAAtC,EAAgD;AAC5C,UAAIC,OAAO,GAAG,KAAKF,UAAL,CAAgB,KAAKD,KAAL,CAAWE,QAA3B,CAAd;AACA,WAAK0B,QAAL,CAAc;AACVzB,QAAAA,OAAO,EAAEA;AADC,OAAd;AAGH;;AACD,QAAI,KAAKH,KAAL,CAAWsB,kBAAX,KAAkCgB,SAAS,CAAChB,kBAAhD,EAAoE;AAChE,UAAInB,OAAO,GAAG,KAAKF,UAAL,CAAgB,KAAKD,KAAL,CAAWE,QAA3B,CAAd;AACA,UAAIwB,GAAG,GAAG,MAAM9B,uBAAuB,CAAC,KAAKI,KAAL,CAAWsB,kBAAZ,EAAgCnB,OAAO,CAAC,CAAD,CAAP,CAAWa,KAA3C,CAAvC;AACA,WAAKY,QAAL,CAAc;AACVC,QAAAA,eAAe,EAAEH,GAAG,CAACI,IAAJ,GAAWJ,GAAG,CAACI,IAAf,GAAsB;AAD7B,OAAd;AAGH;AACJ;;AAcDW,EAAAA,MAAM,GAAG;AACL,QAAI;AAAEtC,MAAAA,OAAF;AAAW0B,MAAAA;AAAX,QAA+B,KAAKE,KAAxC;AACA,QAAI;AAAE7B,MAAAA;AAAF,QAAe,KAAKF,KAAxB;AAGA,wBACI;AAAK,MAAA,SAAS,EAAC,2BAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,+BACI;AAAQ,UAAA,QAAQ,EAAGqB,KAAD,IAAW,KAAKD,oBAAL,CAA0BC,KAA1B,CAA7B;AAAA,oBACKlB,OAAO,IAAIA,OAAO,CAACuC,MAAR,GAAiB,CAA5B,IAAiCvC,OAAO,CAACwC,GAAR,CAAY,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAC3D,gCAAQ;AAAQ,cAAA,KAAK,EAAED,IAAI,CAAC5B,KAApB;AAAA,wBAAwC4B,IAAI,CAACjC;AAA7C,eAAgCkC,KAAhC;AAAA;AAAA;AAAA;AAAA,oBAAR;AACH,WAFiC;AADtC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eASI;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC,eAAf;AAAA,iCACI;AAAG,YAAA,SAAS,EAAC,qBAAb;AAAA,mCAAmC;AAAA,qCAAM,QAAC,gBAAD;AAAkB,gBAAA,EAAE,EAAC;AAArB;AAAA;AAAA;AAAA;AAAA;AAAN;AAAA;AAAA;AAAA;AAAA;AAAnC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAII;AAAK,UAAA,SAAS,EAAC,cAAf;AAAA,oBACKhB,eAAe,IAAIA,eAAe,CAACa,MAAhB,GAAyB,CAA5C,gBACG,QAAC,KAAD,CAAO,QAAP;AAAA,oCACI;AAAK,cAAA,SAAS,EAAC,mBAAf;AAAA,wBAEQb,eAAe,CAACc,GAAhB,CAAoB,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACjC,oBAAIC,WAAW,GAAG5C,QAAQ,KAAKP,SAAS,CAACW,EAAvB,GAA4BsC,IAAI,CAACG,YAAL,CAAkBC,OAA9C,GAAwDJ,IAAI,CAACG,YAAL,CAAkBE,OAA5F;AACA,oCACI;AACI,kBAAA,SAAS,EAAE/C,QAAQ,KAAKP,SAAS,CAACW,EAAvB,GAA4B,SAA5B,GAAwC,QADvD;AAAA,4BAEKwC;AAFL,mBAAaD,KAAb;AAAA;AAAA;AAAA;AAAA,wBADJ;AAMH,eARD;AAFR;AAAA;AAAA;AAAA;AAAA,oBADJ,eAcI;AAAK,cAAA,SAAS,EAAC,WAAf;AAAA,qCACI;AAAA,wCACI,QAAC,gBAAD;AAAkB,kBAAA,EAAE,EAAC;AAArB;AAAA;AAAA;AAAA;AAAA,wBADJ,eAEI;AAAG,kBAAA,KAAK,EAAC;AAAT;AAAA;AAAA;AAAA;AAAA,wBAFJ,eAGI,QAAC,gBAAD;AAAkB,kBAAA,EAAE,EAAC;AAArB;AAAA;AAAA;AAAA;AAAA,wBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBAdJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBADH,gBAwBG;AAAK,YAAA,SAAS,EAAC,aAAf;AAAA,mCACI,QAAC,gBAAD;AAAkB,cAAA,EAAE,EAAC;AAArB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AAzBR;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,cATJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAgDH;;AAnIkC;;AAsIvC,MAAMK,eAAe,GAAGnB,KAAK,IAAI;AAC7B,SAAO;AACH7B,IAAAA,QAAQ,EAAE6B,KAAK,CAACoB,GAAN,CAAUjD;AADjB,GAAP;AAGH,CAJD;;AAMA,MAAMkD,kBAAkB,GAAGC,QAAQ,IAAI;AACnC,SAAO,EAAP;AAEH,CAHD;;AAKA,eAAe/D,OAAO,CAAC4D,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CtD,cAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport HomeHeader from \"../../HomePage/HomeHeader\";\r\nimport './DoctorSchedule.scss';\r\nimport { Select } from 'react-select/dist/Select-fd7cb895.cjs.prod';\r\nimport moment from 'moment';\r\nimport localization from 'moment/locale/vi';\r\nimport { LANGUAGES } from '../../../utils';\r\nimport { getScheduleDoctorByDate } from '../../../services/userService';\r\nimport { FormattedMessage } from 'react-intl';\r\n\r\n\r\n\r\n\r\nclass DoctorSchedule extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            allDays: [],\r\n            allAvalableTime: []\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        let { language } = this.props;\r\n        let allDays = this.getArrDays(language);\r\n        this.setState({\r\n            allDays: allDays,\r\n        })\r\n    }\r\n    capitalizeFirstLetter(string) {\r\n        return string.charAt(0).toUpperCase() + string.slice(1);\r\n    }\r\n    getArrDays = (language) => {\r\n\r\n        let allDays = []\r\n        for (let i = 0; i < 7; i++) {\r\n            let object = {};\r\n            if (language === LANGUAGES.VI) {\r\n                if (i === 0) {\r\n                    let ddMM = moment(new Date()).format('DD/MM');\r\n                    let today = `HÃ´m nay - ${ddMM}`;\r\n                    object.label = today;\r\n                } else {\r\n                    let labelVi = moment(new Date()).add(i, 'days').format('dddd- DD/MM');\r\n                    object.label = this.capitalizeFirstLetter(labelVi)\r\n                }\r\n            } else {\r\n                if (i === 0) {\r\n                    let ddMM = moment(new Date()).format('DD/MM');\r\n                    let today = `Today - ${ddMM}`;\r\n                    object.label = today;\r\n                } else {\r\n                    object.label = moment(new Date()).add(i, 'days').locale('en').format(\"ddd - DD/MM\");\r\n                }\r\n\r\n            }\r\n            object.value = moment(new Date()).add(i, 'days').startOf('day').valueOf();\r\n\r\n            allDays.push(object)\r\n        }\r\n        return allDays;\r\n    }\r\n\r\n    async componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.language !== prevProps.language) {\r\n            let allDays = this.getArrDays(this.props.language);\r\n            this.setState({\r\n                allDays: allDays\r\n            })\r\n        }\r\n        if (this.props.doctorIdFromParent !== prevProps.doctorIdFromParent) {\r\n            let allDays = this.getArrDays(this.props.language);\r\n            let res = await getScheduleDoctorByDate(this.props.doctorIdFromParent, allDays[0].value);\r\n            this.setState({\r\n                allAvalableTime: res.data ? res.data : []\r\n            })\r\n        }\r\n    }\r\n    handleOnChangeSelect = async (event) => {\r\n        if (this.props.doctorIdFromParent && this.props.doctorIdFromParent !== -1) {\r\n            let doctorId = this.props.doctorIdFromParent;\r\n            let date = event.target.value\r\n            let res = await getScheduleDoctorByDate(doctorId, date);\r\n\r\n            if (res && res.errCode === 0) {\r\n                this.setState({\r\n                    allAvalableTime: res.data ? res.data : []\r\n                })\r\n            }\r\n        }\r\n    }\r\n    render() {\r\n        let { allDays, allAvalableTime } = this.state;\r\n        let { language } = this.props;\r\n\r\n\r\n        return (\r\n            <div className=\"doctor-schedule-container\">\r\n                <div className=\"all-schedule\">\r\n                    <select onChange={(event) => this.handleOnChangeSelect(event)}>\r\n                        {allDays && allDays.length > 0 && allDays.map((item, index) => {\r\n                            return (<option value={item.value} key={index}>{item.label}</option>)\r\n                        })}\r\n\r\n                    </select>\r\n                </div>\r\n                <div className=\"all-available-time\">\r\n                    <div className=\"text-calendar\">\r\n                        <i className=\"fas fa-calendar-alt\"><span><FormattedMessage id=\"patient.detail-doctor.schedule\" /></span></i>\r\n                    </div>\r\n                    <div className=\"time-content\">\r\n                        {allAvalableTime && allAvalableTime.length > 0 ?\r\n                            <React.Fragment>\r\n                                <div className=\"time-content-btns\">\r\n                                    {\r\n                                        allAvalableTime.map((item, index) => {\r\n                                            let timeDisplay = language === LANGUAGES.VI ? item.timeTypeData.valueVi : item.timeTypeData.valueEn;\r\n                                            return (\r\n                                                <button key={index}\r\n                                                    className={language === LANGUAGES.VI ? 'btn-vie' : 'btn-en'}>\r\n                                                    {timeDisplay}\r\n                                                </button>\r\n                                            )\r\n                                        })}\r\n                                </div>\r\n\r\n                                <div className=\"book-free\">\r\n                                    <span>\r\n                                        <FormattedMessage id=\"patient.detail-doctor.choose\" />\r\n                                        <i class=\"far fa-hand-point-up\"></i>\r\n                                        <FormattedMessage id=\"patient.detail-doctor.book-free\" />\r\n                                    </span>\r\n                                </div>\r\n                            </React.Fragment>\r\n                            :\r\n                            <div className=\"no-schedule\">\r\n                                <FormattedMessage id=\"patient.detail-doctor.no-schedule\" />\r\n                            </div>\r\n                        }\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        language: state.app.language,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DoctorSchedule);\r\n"]},"metadata":{},"sourceType":"module"}