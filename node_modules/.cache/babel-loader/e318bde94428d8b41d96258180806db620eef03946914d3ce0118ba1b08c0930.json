{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PartitionRelativeTimePattern = void 0;\nvar utils_1 = require(\"../utils\");\nvar SingularRelativeTimeUnit_1 = require(\"./SingularRelativeTimeUnit\");\nvar MakePartsList_1 = require(\"./MakePartsList\");\nvar _262_1 = require(\"../262\");\nfunction PartitionRelativeTimePattern(rtf, value, unit, _a) {\n  var getInternalSlots = _a.getInternalSlots;\n  utils_1.invariant(_262_1.Type(value) === 'Number', \"value must be number, instead got \" + typeof value, TypeError);\n  utils_1.invariant(_262_1.Type(unit) === 'String', \"unit must be number, instead got \" + typeof value, TypeError);\n  if (isNaN(value) || !isFinite(value)) {\n    throw new RangeError(\"Invalid value \" + value);\n  }\n  var resolvedUnit = SingularRelativeTimeUnit_1.SingularRelativeTimeUnit(unit);\n  var _b = getInternalSlots(rtf),\n    fields = _b.fields,\n    style = _b.style,\n    numeric = _b.numeric,\n    pluralRules = _b.pluralRules,\n    numberFormat = _b.numberFormat;\n  var entry = resolvedUnit;\n  if (style === 'short') {\n    entry = resolvedUnit + \"-short\";\n  } else if (style === 'narrow') {\n    entry = resolvedUnit + \"-narrow\";\n  }\n  if (!(entry in fields)) {\n    entry = resolvedUnit;\n  }\n  var patterns = fields[entry];\n  if (numeric === 'auto') {\n    if (_262_1.ToString(value) in patterns) {\n      return [{\n        type: 'literal',\n        value: patterns[_262_1.ToString(value)]\n      }];\n    }\n  }\n  var tl = 'future';\n  if (_262_1.SameValue(value, -0) || value < 0) {\n    tl = 'past';\n  }\n  var po = patterns[tl];\n  var fv = typeof numberFormat.formatToParts === 'function' ? numberFormat.formatToParts(Math.abs(value)) :\n  // TODO: If formatToParts is not supported, we assume the whole formatted\n  // number is a part\n  [{\n    type: 'literal',\n    value: numberFormat.format(Math.abs(value)),\n    unit: unit\n  }];\n  var pr = pluralRules.select(value);\n  var pattern = po[pr];\n  return MakePartsList_1.MakePartsList(pattern, resolvedUnit, fv);\n}\nexports.PartitionRelativeTimePattern = PartitionRelativeTimePattern;","map":{"version":3,"names":["Object","defineProperty","exports","value","PartitionRelativeTimePattern","utils_1","require","SingularRelativeTimeUnit_1","MakePartsList_1","_262_1","rtf","unit","_a","getInternalSlots","invariant","Type","TypeError","isNaN","isFinite","RangeError","resolvedUnit","SingularRelativeTimeUnit","_b","fields","style","numeric","pluralRules","numberFormat","entry","patterns","ToString","type","tl","SameValue","po","fv","formatToParts","Math","abs","format","pr","select","pattern","MakePartsList"],"sources":["C:/Users/Admin/Desktop/LEARN REACTJS/Frontend-ReactJS-QuickStart/node_modules/@formatjs/intl-relativetimeformat/node_modules/@formatjs/ecma402-abstract/RelativeTimeFormat/PartitionRelativeTimePattern.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PartitionRelativeTimePattern = void 0;\nvar utils_1 = require(\"../utils\");\nvar SingularRelativeTimeUnit_1 = require(\"./SingularRelativeTimeUnit\");\nvar MakePartsList_1 = require(\"./MakePartsList\");\nvar _262_1 = require(\"../262\");\nfunction PartitionRelativeTimePattern(rtf, value, unit, _a) {\n    var getInternalSlots = _a.getInternalSlots;\n    utils_1.invariant(_262_1.Type(value) === 'Number', \"value must be number, instead got \" + typeof value, TypeError);\n    utils_1.invariant(_262_1.Type(unit) === 'String', \"unit must be number, instead got \" + typeof value, TypeError);\n    if (isNaN(value) || !isFinite(value)) {\n        throw new RangeError(\"Invalid value \" + value);\n    }\n    var resolvedUnit = SingularRelativeTimeUnit_1.SingularRelativeTimeUnit(unit);\n    var _b = getInternalSlots(rtf), fields = _b.fields, style = _b.style, numeric = _b.numeric, pluralRules = _b.pluralRules, numberFormat = _b.numberFormat;\n    var entry = resolvedUnit;\n    if (style === 'short') {\n        entry = resolvedUnit + \"-short\";\n    }\n    else if (style === 'narrow') {\n        entry = resolvedUnit + \"-narrow\";\n    }\n    if (!(entry in fields)) {\n        entry = resolvedUnit;\n    }\n    var patterns = fields[entry];\n    if (numeric === 'auto') {\n        if (_262_1.ToString(value) in patterns) {\n            return [\n                {\n                    type: 'literal',\n                    value: patterns[_262_1.ToString(value)],\n                },\n            ];\n        }\n    }\n    var tl = 'future';\n    if (_262_1.SameValue(value, -0) || value < 0) {\n        tl = 'past';\n    }\n    var po = patterns[tl];\n    var fv = typeof numberFormat.formatToParts === 'function'\n        ? numberFormat.formatToParts(Math.abs(value))\n        : // TODO: If formatToParts is not supported, we assume the whole formatted\n            // number is a part\n            [\n                {\n                    type: 'literal',\n                    value: numberFormat.format(Math.abs(value)),\n                    unit: unit,\n                },\n            ];\n    var pr = pluralRules.select(value);\n    var pattern = po[pr];\n    return MakePartsList_1.MakePartsList(pattern, resolvedUnit, fv);\n}\nexports.PartitionRelativeTimePattern = PartitionRelativeTimePattern;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}