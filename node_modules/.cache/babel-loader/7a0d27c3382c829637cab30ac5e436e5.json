{"ast":null,"code":"import { getAllCodeService } from '../../services/userService';\nimport actionTypes from './actionTypes';\n\n// export const fetchGenderStart = () => ({\n//     type: actionTypes.FETCH_GENDER_START\n// })\n\nexport const fetchGenderStart = () => {\n  return async (dispatch, getState) => {\n    return async (dispatch, getState) => {\n      try {\n        dispatch({\n          type: actionTypes.FETCH_GENDER_START\n        });\n        let res = await getAllCodeService(\"GENDER\");\n        if (res && res.errCode === 0) {\n          console.log('hoidanit check get state', getState);\n          dispatch(fetchGenderSuccess(res.data));\n        } else {\n          dispatch(fetchGenderFailed());\n        }\n      } catch (e) {\n        dispatch(fetchGenderFailed());\n        console.log('fetchGenderStart error', e);\n      }\n    };\n  };\n};\n// type: actionTypes.FETCH_GENDER_START\n\nexport const fetchGenderSuccess = genderData => ({\n  type: actionTypes.FETCH_GENDER_SUCCESS,\n  data: genderData\n});\nexport const fetchGenderFailed = () => ({\n  type: actionTypes.FETCH_GENDER_FAIDED\n});\n//start doing end","map":{"version":3,"names":["getAllCodeService","actionTypes","fetchGenderStart","dispatch","getState","type","FETCH_GENDER_START","res","errCode","console","log","fetchGenderSuccess","data","fetchGenderFailed","e","genderData","FETCH_GENDER_SUCCESS","FETCH_GENDER_FAIDED"],"sources":["C:/Users/Admin/Desktop/LEARN REACTJS/Frontend-ReactJS-QuickStart/src/store/actions/adminActions.js"],"sourcesContent":["import { getAllCodeService } from '../../services/userService';\r\nimport actionTypes from './actionTypes';\r\n\r\n// export const fetchGenderStart = () => ({\r\n//     type: actionTypes.FETCH_GENDER_START\r\n// })\r\n\r\nexport const fetchGenderStart = () => {\r\n    return async (dispatch, getState) => {\r\n        return async (dispatch, getState) => {\r\n            try {\r\n                dispatch({\r\n                    type: actionTypes.FETCH_GENDER_START\r\n                })\r\n                let res = await getAllCodeService(\"GENDER\");\r\n                if (res && res.errCode === 0) {\r\n                    console.log('hoidanit check get state', getState)\r\n                    dispatch(fetchGenderSuccess(res.data));\r\n                } else {\r\n                    dispatch(fetchGenderFailed());\r\n                }\r\n            } catch (e) {\r\n                dispatch(fetchGenderFailed());\r\n                console.log('fetchGenderStart error', e)\r\n            }\r\n        }\r\n    }\r\n}\r\n// type: actionTypes.FETCH_GENDER_START\r\n\r\nexport const fetchGenderSuccess = (genderData) => ({\r\n    type: actionTypes.FETCH_GENDER_SUCCESS,\r\n    data: genderData\r\n})\r\n\r\nexport const fetchGenderFailed = () => ({\r\n    type: actionTypes.FETCH_GENDER_FAIDED\r\n})\r\n//start doing end"],"mappings":"AAAA,SAASA,iBAAiB,QAAQ,4BAA4B;AAC9D,OAAOC,WAAW,MAAM,eAAe;;AAEvC;AACA;AACA;;AAEA,OAAO,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;EAClC,OAAO,OAAOC,QAAQ,EAAEC,QAAQ,KAAK;IACjC,OAAO,OAAOD,QAAQ,EAAEC,QAAQ,KAAK;MACjC,IAAI;QACAD,QAAQ,CAAC;UACLE,IAAI,EAAEJ,WAAW,CAACK;QACtB,CAAC,CAAC;QACF,IAAIC,GAAG,GAAG,MAAMP,iBAAiB,CAAC,QAAQ,CAAC;QAC3C,IAAIO,GAAG,IAAIA,GAAG,CAACC,OAAO,KAAK,CAAC,EAAE;UAC1BC,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAEN,QAAQ,CAAC;UACjDD,QAAQ,CAACQ,kBAAkB,CAACJ,GAAG,CAACK,IAAI,CAAC,CAAC;QAC1C,CAAC,MAAM;UACHT,QAAQ,CAACU,iBAAiB,CAAC,CAAC,CAAC;QACjC;MACJ,CAAC,CAAC,OAAOC,CAAC,EAAE;QACRX,QAAQ,CAACU,iBAAiB,CAAC,CAAC,CAAC;QAC7BJ,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEI,CAAC,CAAC;MAC5C;IACJ,CAAC;EACL,CAAC;AACL,CAAC;AACD;;AAEA,OAAO,MAAMH,kBAAkB,GAAII,UAAU,KAAM;EAC/CV,IAAI,EAAEJ,WAAW,CAACe,oBAAoB;EACtCJ,IAAI,EAAEG;AACV,CAAC,CAAC;AAEF,OAAO,MAAMF,iBAAiB,GAAGA,CAAA,MAAO;EACpCR,IAAI,EAAEJ,WAAW,CAACgB;AACtB,CAAC,CAAC;AACF"},"metadata":{},"sourceType":"module"}